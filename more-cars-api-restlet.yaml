---
swagger: "2.0"
info:
  description: "**ATTENTION: This documentation as well as the API itself are currently\
    \ under construction. Any part of it can change anytime.**\n\nMore Cars is designed\
    \ as an **open car database**. \nAll the information is contributed by the community\
    \ and can be used by everyone, for any purpose, for free.\nThis API is the counterpart\
    \ of the More Cars website https://more-cars.net/. \nAll the information found\
    \ there can be accessed via this REST API here and vice versa. \n\n**Access**\n\
    \nDepending on the endpoint and the operation you want to execute you might need\
    \ \n* no permissions at all\n* an access token \n* or privileged permissions.\n\
    \n**Technical Background**\n\nAll endpoints follow the rules and best practices\
    \ of **RESTful APIs**. \nMeaning, the correct HTTP verbs are used and proper HTTP\
    \ status codes are returned. \nSee https://restfulapi.net/ or https://en.wikipedia.org/wiki/Representational_state_transfer.\n\
    \nThe data structures follow the **JSON API** specification. \nSee https://jsonapi.org/.\n\
    \nWhen you stumble upon a **required** flag it means that the field needs to be\
    \ present in the database, not necessarily in every request.\nE.g. in a POST request\
    \ this required field is needed. When retrieving, updating or deleting it is optional\
    \ (in most cases)."
  version: "0.6.0-alpha"
  title: "More Cars API"
  termsOfService: ""
  contact:
    name: "Dennis Gerike"
    url: "https://more-cars.net"
    email: "dennis.gerike@more-cars.net"
  license:
    name: ""
    url: ""
host: "{host}"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /car-models:
    get:
      description: "Returns a collection of all `Car Models` that are stored in the\
        \ More Cars database."
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model"
            minItems: 1
            maxItems: 50
    x-restlet:
      section: "Car Models"
  /car-models/{car_model_id}:
    get:
      description: "Returns a `Car Model` specified by its ID."
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Model"
        404:
          description: "Status 404"
    parameters:
      - name: "car_model_id"
        in: "path"
        required: true
        type: "integer"
        x-example: 1019
    x-restlet:
      section: "Car Models"
  /car-models/{car_model_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Car Model`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    post:
      description: "**!!!EXPERIMENTAL!!!**\n\nAttaches an existing `Image` to the\
        \ specified `Car Model`.\n\n**Guidelines**\n* The car should be in the focus.\
        \ There can be other cars and people around, but the car itself should be\
        \ clearly visible and should dominate the image.\n* The selected images should\
        \ show the car from multiple angles. So, instead of adding the 5th photo showing\
        \ the car from the front select one with another angle.\n* Any variation of\
        \ the car can be added here (stock, tuned, prototype), as long as it is from\
        \ the same generation."
      consumes: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            required:
              - "image_id"
            properties:
              image_id:
                type: "integer"
                description: "The internal More Cars ID of the image."
      responses:
        200:
          description: "Status 200"
      security:
        - Access Token: []
    parameters:
      - name: "car_model_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Models"
  /car-models/{car_model_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Car Model`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_model_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Models"
  /car-models/{car_model_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Car Model`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    post:
      description: "**!!!EXPERIMENTAL!!!**\n\nAttachs an existing `Video` to the specified\
        \ `Car Model`.\n\n**Guidelines**\n* Only select videos that deal with this\
        \ car model in general, or the whole generation. \n* If it's about about a\
        \ specific version of this model then please add the video to the matching\
        \ `Car Model Variant`.\n* The format of the video is more or less open. It\
        \ can be a commercial, teaser or trailer (official, fan-made, mood), a discussion,\
        \ an unveiling at a car show, a history lesson etc."
      consumes: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            required:
              - "video_id"
            properties:
              video_id:
                type: "integer"
                description: "The internal More Cars ID of the video."
      responses:
        200:
          description: "Status 200"
      security:
        - Access Token: []
    parameters:
      - name: "car_model_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Models"
  /car-models/{car_model_id}/brand:
    get:
      description: "Returns the `Brand` which owns the specified `Car Model`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Brand"
        404:
          description: "Status 404"
    parameters:
      - name: "car_model_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Models"
  /car-models/{car_model_id}/car-model-variants:
    get:
      description: "Returns all `Car Model Variants` that exist of the specified `Car\
        \ Model`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "car_model_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Models"
  /car-models/{car_model_id}/car-magazine-issues:
    get:
      description: "Returns all `Car Magazine Issues` that have featured the specified\
        \ `Car Model`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine Issue"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_model_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Models"
  /car-models/{car_model_id}/car-programme-episodes:
    get:
      description: "Returns all `Car Programme Episodes` in which the specified `Car\
        \ Model` has been presented."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme Episode"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_model_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Models"
  /car-model-variants:
    get:
      description: "Returns a collection of all `Car Model Variants` that are stored\
        \ in the More Cars database."
      produces:
        - "application/json"
      parameters:
        - name: "page"
          in: "query"
          required: false
          type: "integer"
          description: "pagination parameter"
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model Variant"
            minItems: 0
            maxItems: 24
    post:
      description: "Creates a new Car Model `Variant`."
      parameters: []
      responses:
        201:
          description: "Status 201"
        401:
          description: "Status 401"
        422:
          description: "Status 422"
      security:
        - Access Token: []
    x-restlet:
      section: "Car Model Variants"
  /car-model-variants/{car_model_variant_id}:
    get:
      description: "Returns a `Car Model Variant` specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Model Variant"
        404:
          description: "Status 404"
    delete:
      description: "Deletes a `Car Model Variant`.\n\n\U0001f512 Operation requires\
        \ elevated permissions."
      parameters: []
      responses:
        204:
          description: "Status 204"
        401:
          description: "Status 401"
        403:
          description: "Status 403"
        404:
          description: "Node not found"
      security:
        - Access Token: []
    parameters:
      - name: "car_model_variant_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Model Variants"
  /car-model-variants/{car_model_variant_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Car Model\
        \ Variant`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    post:
      description: "**!!!EXPERIMENTAL!!!**\n\nAttaches an existing `Image` to the\
        \ specified `Car Model Variant`.\n\n**Guidelines**\n* Only select images that\
        \ match the specified variant. So, don't use photos that show a sedan or convertible\
        \ version when adding photos for a `BMW M3 Coupe`.\n* The car should be in\
        \ the focus. There can be other cars and people around, but the car itself\
        \ should be clearly visible and should dominate the image.\n* The selected\
        \ images should show the car from multiple angles. So, instead of adding the\
        \ 5th photo showing the car from the front select one with another angle."
      consumes: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            required:
              - "image_id"
            properties:
              image_id:
                type: "integer"
                description: "The internal More Cars ID of the image."
      responses:
        200:
          description: "Status 200"
    parameters:
      - name: "car_model_variant_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Model Variants"
  /car-model-variants/{car_model_variant_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Car Model Variant`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_model_variant_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Model Variants"
  /car-model-variants/{car_model_variant_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Car Model\
        \ Variant`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    post:
      description: "Attaches an existing `Video` to the specified `Car Model Variant`.\n\
        \n**Guidelines**\n* Only select videos that match the specified variant. So,\
        \ when the video is about the convertible version of the BMW M3 don't add\
        \ it to the coupe variant.\n* The car should be in the focus of the video,\
        \ not just decoration."
      consumes: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            required:
              - "video_id"
            properties:
              video_id:
                type: "integer"
                description: "The internal More Cars ID of the video."
      responses:
        204:
          description: "Status 204"
        404:
          description: "Status 404"
      security:
        - Access Token: []
    delete:
      parameters: []
      responses:
        204:
          description: "Status 204"
        404:
          description: "Status 404"
      security:
        - Access Token: []
    parameters:
      - name: "car_model_variant_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Model Variants"
  /car-model-variants/{car_model_variant_id}/car-model:
    get:
      description: "Returns the `Car Model` that this `Car Model Variant` is derived\
        \ from."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Model"
        404:
          description: "Status 404"
    parameters:
      - name: "car_model_variant_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Model Variants"
  /car-model-variants/{car_model_variant_id}/car-model/{car_model_id}:
    post:
      description: "Attaches an existing `Car Model` to the specified `Car Model Variant`.\n\
        \n⚠ This will disconnect the currently attached `Car Model` (if existing)."
      parameters: []
      responses:
        204:
          description: "Status 204"
        404:
          description: "Status 404"
      security:
        - Access Token: []
    delete:
      parameters: []
      responses:
        204:
          description: "Status 204"
        401:
          description: "Status 401"
        403:
          description: "Status 403"
        404:
          description: "Status 404"
      security:
        - Access Token: []
    parameters:
      - name: "car_model_variant_id"
        in: "path"
        required: true
        type: "string"
      - name: "car_model_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Car Model Variants"
  /car-model-variants/{car_model_variant_id}/car-magazine-issues:
    get:
      description: "Returns all `Car Magazine Issues` where the specified `Car Model\
        \ Variant` has been presented."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine Issue"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_model_variant_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Model Variants"
  /car-model-variants/{car_model_variant_id}/car-programme-episodes:
    get:
      description: "Returns all `Car Programme Episodes` where the specified `Car\
        \ Model Variant` has been presented."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme Episode"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_model_variant_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Model Variants"
  /brands:
    get:
      description: "Returns a collection of all `Brands` that are stored in the More\
        \ Cars database."
      parameters:
        - name: "page"
          in: "query"
          required: false
          type: "integer"
          x-example: 1
        - name: "per_page"
          in: "query"
          required: false
          type: "integer"
          x-example: 10
        - name: "limit"
          in: "query"
          required: false
          type: "integer"
          x-example: 100
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Brand"
    x-restlet:
      section: "Brands"
  /brands/{brand_id}:
    get:
      description: "Returns a `Brand` specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Brand"
        404:
          description: "Status 404"
    parameters:
      - name: "brand_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Brands"
  /brands/{brand_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Brand`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Brand not found"
    post:
      description: "**!!!EXPERIMENTAL!!!**\n\nAttaches an existing `Image` to the\
        \ specified `Brand`.\n\n**Guidelines**\n* Only add photos that show the brand's\
        \ logo.\n* This can be a close-up shot of the car's bonnet, the logo on the\
        \ engine block, a photo of a billboard or something similar.\n* There may\
        \ be more to see in the photo, but the logo has to be dominant.\n* Don't add\
        \ illustrations or the original logo files. This could lead to trademark problems."
      consumes: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            required:
              - "image_id"
            properties:
              image_id:
                type: "integer"
                description: "The internal More Cars ID of the image."
      responses:
        200:
          description: "Status 200"
    parameters:
      - name: "brand_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Brands"
  /brands/{brand_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Brand`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "brand_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Brands"
  /brands/{brand_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Brand`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    post:
      description: "**!!!EXPERIMENTAL!!!**\n\nAttaches an existing `Video` to the\
        \ specified `Brand`.\n\n**Guidelines**\n* All videos are permitted that somehow\
        \ deal with the history (or the current state) of the brand.\n* This can be\
        \ a documentation, an interview, a discussion panel. \n* It can be a video\
        \ that presents/summarizes/categorizes the brand's whole range of cars.\n\
        * It can be a marketing/promotion video from the brand itself."
      consumes: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            required:
              - "image_id"
            properties:
              image_id:
                type: "integer"
                description: "The internal More Cars ID of the image."
      responses:
        200:
          description: "Status 200"
    parameters:
      - name: "brand_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Brands"
  /brands/{brand_id}/car-models:
    get:
      description: "Returns all `Car Models` that the specified `Brand` has created."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model"
        404:
          description: "Status 404"
    parameters:
      - name: "brand_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Brands"
  /brands/{brand_id}/company:
    get:
      description: "Returns the `Company` that owns the specified `Brand`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Company"
        404:
          description: "Status 404"
    parameters:
      - name: "brand_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Brands"
  /brands/{brand_id}/country:
    get:
      description: "Returns the `Country` from which the `Brand` originates."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Country"
        404:
          description: "Status 404"
    parameters:
      - name: "brand_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Brands"
  /companies:
    get:
      description: "Returns a collection of all `Companies` that are stored in the\
        \ More Cars database."
      parameters:
        - name: "page"
          in: "query"
          required: false
          type: "integer"
          x-example: 1
        - name: "per_page"
          in: "query"
          required: false
          type: "integer"
          x-example: 10
        - name: "limit"
          in: "query"
          required: false
          type: "integer"
          x-example: 100
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Company"
    x-restlet:
      section: "Companies"
  /companies/{company_id}:
    get:
      description: "Returns a `Company`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Company"
        404:
          description: "Status 404"
    parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Companies"
  /companies/{company_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Company`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Companies"
  /companies/{company_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Brand`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Companies"
  /companies/{company_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Company`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Companies"
  /companies/{company_id}/brands:
    get:
      description: "Returns all `Brands` that belong to the specified `Company`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model"
        404:
          description: "Status 404"
    parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Companies"
  /companies/{company_id}/country:
    get:
      description: "Returns the `Country` from which the `Company` originates."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Country"
        404:
          description: "Status 404"
    parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Companies"
  /companies/{company_id}/country-hq:
    get:
      description: "Returns the `Country` where the `Company` has it's legal headquarter."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Country"
        404:
          description: "Status 404"
    parameters:
      - name: "company_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Companies"
  /car-magazines:
    get:
      description: "Returns a collection of all `Car Magazines` that are stored in\
        \ the More Cars database."
      parameters:
        - name: "page"
          in: "query"
          required: false
          type: "integer"
          x-example: 1
        - name: "per_page"
          in: "query"
          required: false
          type: "integer"
          x-example: 10
        - name: "limit"
          in: "query"
          required: false
          type: "integer"
          x-example: 100
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine"
    x-restlet:
      section: "Car Magazines"
  /car-magazines/{car_magazine_id}:
    get:
      description: "Returns a `Car Magazine` specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Magazine"
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazines"
  /car-magazines/{car_magazine_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Car Magazine`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazines"
  /car-magazines/{car_magazine_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Car Magazine`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazines"
  /car-magazines/{car_magazine_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Car Magazine`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazines"
  /car-magazines/{car_magazine_id}/car-magazine-issues:
    get:
      description: "Returns all `Car Magazine Issues` that were created by the specified\
        \ `Car Magazine`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine Issue"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazines"
  /car-magazines/{car_magazine_id}/country:
    get:
      description: "Returns the `Country` from which the `Car Magazine` originates."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Country"
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazines"
  /car-magazine-issues:
    get:
      description: "Returns a collection of all `Car Magazine Issues` that are stored\
        \ in the More Cars database."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine Issue"
    x-restlet:
      section: "Car Magazine Issues"
  /car-magazine-issues/{car_magazine_issue_id}:
    get:
      description: "Returns a `Car Magazine Issue` specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Magazine Issue"
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_issue_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazine Issues"
  /car-magazine-issues/{car_magazine_issue_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Car Magazine\
        \ Issue`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_issue_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazine Issues"
  /car-magazine-issues/{car_magazine_issue_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Car Magazine Issue`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_issue_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazine Issues"
  /car-magazine-issues/{car_magazine_issue_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Car Magazine\
        \ Issue`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_issue_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazine Issues"
  /car-magazine-issues/{car_magazine_issue_id}/car-magazine:
    get:
      description: "Returns the `Car Magazine` this `Car Magazine Issue` belongs to."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Magazine"
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_issue_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazine Issues"
  /car-magazine-issues/{car_magazine_issue_id}/car-model-variants:
    get:
      description: "Returns all `Car Model Variants` that have been featured in the\
        \ specified `Car Magazine Issue`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_issue_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazine Issues"
  /car-magazine-issues/{car_magazine_issue_id}/car-models:
    get:
      description: "Returns all `Car Models` that have been featured in the specified\
        \ `Car Magazine Issue`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model"
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_issue_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazine Issues"
  /car-magazine-issues/{car_magazine_issue_id}/successor:
    get:
      description: "Returns the next issue of this `Car Magazine Issue`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Magazine Issue"
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_issue_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazine Issues"
  /car-magazine-issues/{car_magazine_issue_id}/predecessor:
    get:
      description: "Returns the previous issue of this `Car Magazine Issue`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Magazine Issue"
        404:
          description: "Status 404"
    parameters:
      - name: "car_magazine_issue_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Magazine Issues"
  /car-programmes:
    get:
      description: "Returns a collection of all `Car Programmes` that are stored in\
        \ the More Cars database."
      parameters:
        - name: "page"
          in: "query"
          required: false
          type: "integer"
          x-example: 1
        - name: "per_page"
          in: "query"
          required: false
          type: "integer"
          x-example: 10
        - name: "limit"
          in: "query"
          required: false
          type: "integer"
          x-example: 100
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme"
    x-restlet:
      section: "Car Programmes"
  /car-programmes/{car_programme_id}:
    get:
      description: "Returns a `Car Programme` specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Programme"
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programmes"
  /car-programmes/{car_programme_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Car Programme`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programmes"
  /car-programmes/{car_programme_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Car Programme`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programmes"
  /car-programmes/{car_programme_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Car Programme`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programmes"
  /car-programmes/{car_programme_id}/car-programme-episodes:
    get:
      description: "Returns all `Car Magazine Episodes` that were produced by the\
        \ specified `Car Programme`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme Episode"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programmes"
  /car-programmes/{car_programme_id}/country:
    get:
      description: "Returns the `Country` from which the `Car Programme` originates."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Country"
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programmes"
  /car-programme-episodes:
    get:
      description: "Returns a collection of all `Car Programme Episodes` that are\
        \ stored in the More Cars database."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme Episode"
            minItems: 0
            maxItems: 24
    x-restlet:
      section: "Car Programme Episodes"
  /car-programme-episodes/{car_programme_episode_id}:
    get:
      description: "Returns a `Car Programme Episode` specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Programme Episode"
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_episode_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programme Episodes"
  /car-programme-episodes/{car_programme_episode_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Car Programme\
        \ Episode`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_episode_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programme Episodes"
  /car-programme-episodes/{car_programme_episode_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Car Programme Episode`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_episode_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programme Episodes"
  /car-programme-episodes/{car_programme_episode_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Car Programme\
        \ Episode`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_episode_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programme Episodes"
  /car-programme-episodes/{car_programme_episode_id}/car-programme:
    get:
      description: "Returns the `Car Programme` the specified `Car Programme Episode`\
        \ belongs to."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Programme"
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_episode_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programme Episodes"
  /car-programme-episodes/{car_programme_episode_id}/successor:
    get:
      description: "Returns the successor of the specified `Car Programme Episode`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Programme Episode"
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_episode_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programme Episodes"
  /car-programme-episodes/{car_programme_episode_id}/predecessor:
    get:
      description: "Returns the predecessor of the specified `Car Programme Episode`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Programme Episode"
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_episode_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programme Episodes"
  /car-programme-episodes/{car_programme_episode_id}/car-models:
    get:
      description: "Returns all `Car Models` that were presented in the specified\
        \ `Car Programme Episode`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model"
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_episode_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programme Episodes"
  /car-programme-episodes/{car_programme_episode_id}/car-model-variants:
    get:
      description: "Returns all `Car Model Variants` that were presented in the specified\
        \ `Car Programme Episode`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "car_programme_episode_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Car Programme Episodes"
  /racing-series:
    get:
      description: "Returns a collection of all `Racing Series` that are stored in\
        \ the More Cars database."
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Series"
            minItems: 1
            maxItems: 50
    x-restlet:
      section: "Racing Series"
  /racing-series/{racing_series_id}:
    get:
      description: "Returns a `Racing Series`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Racing Series"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_series_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Series"
  /racing-series/{racing_series_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Racing\
        \ Series`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "racing_series_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Racing Series"
  /racing-series/{racing_series_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Racing Series`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "racing_series_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Racing Series"
  /racing-series/{racing_series_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Racing\
        \ Series`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "racing_series_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Racing Series"
  /racing-series/{racing_series_id}/racing-events:
    get:
      description: "Returns all `Racing Events` that took place in the specified `Racing\
        \ Series`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Event"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_series_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Series"
  /racing-series/{racing_series_id}/country:
    get:
      description: "Returns the `Country` (market) the specified `Racing Series` is\
        \ made for."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Country"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_series_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Series"
  /racing-events:
    get:
      description: "Returns a collection of all `Racing Series` that are stored in\
        \ the More Cars database."
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Series"
            minItems: 1
            maxItems: 50
    x-restlet:
      section: "Racing Events"
  /racing-events/{racing_event_id}:
    get:
      description: "Returns a `Racing Series`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Racing Series"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Events"
  /racing-events/{racing_event_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Racing\
        \ Series`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Racing Events"
  /racing-events/{racing_event_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Racing Series`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Racing Events"
  /racing-events/{racing_event_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Racing\
        \ Series`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Racing Events"
  /racing-events/{racing_event_id}/racing-series:
    get:
      description: "Returns the `Racing Series` to which the specified `Racing Event`\
        \ belongs."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Series"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Events"
  /racing-events/{racing_event_id}/race-track-variant:
    get:
      description: "Returns the `Race Track Variant` at which the specified `Racing\
        \ Event` took place."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Track Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Events"
  /racing-events/{racing_event_id}/racing-event-sessions:
    get:
      description: "Returns all `Racing Event Sessions` that were held in the specified\
        \ `Racing Event`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Event Session"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Events"
  /racing-event-sessions:
    get:
      description: "Returns a collection of all `Racing Event Sessions` that are stored\
        \ in the More Cars database."
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Event Session"
            minItems: 1
            maxItems: 50
    x-restlet:
      section: "Racing Event Sessions"
  /racing-event-sessions/{racing_event_session_id}:
    get:
      description: "Returns a `Racing Event Session`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Racing Event Session"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_session_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Event Sessions"
  /racing-event-sessions/{racing_event_session_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Racing\
        \ Event Session`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_session_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Event Sessions"
  /racing-event-sessions/{racing_event_session_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Racing Event Session`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_session_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Event Sessions"
  /racing-event-sessions/{racing_event_session_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Racing\
        \ Event Session`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_session_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Event Sessions"
  /racing-event-sessions/{racing_event_session_id}/racing-event:
    get:
      description: "Returns the `Racing Event` to which the specified `Racing Event\
        \ Session` belongs to."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Racing Event"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_session_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Event Sessions"
  /racing-event-sessions/{racing_event_session_id}/race-results:
    get:
      description: "Returns all `Race Results` for the specified `Racing Event Session`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Result"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_event_session_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Event Sessions"
  /race-results:
    get:
      description: "Returns a collection of all `Race Results` that are stored in\
        \ the More Cars database."
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Result"
            minItems: 1
            maxItems: 50
    x-restlet:
      section: "Race Results"
  /race-results/{race_result_id}:
    get:
      description: "Returns a `Race Result`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Race Result"
        404:
          description: "Status 404"
    parameters:
      - name: "race_result_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Results"
  /race-results/{race_result_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Race\
        \ Result`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "race_result_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Results"
  /race-results/{race_result_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Race Result`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "race_result_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Results"
  /race-results/{race_result_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Race\
        \ Result`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "race_result_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Results"
  /race-results/{race_result_id}/racing-event-session:
    get:
      description: "Returns the `Racing Event Session` to which the specified `Race\
        \ Result` belongs to."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Racing Event Session"
        404:
          description: "Status 404"
    parameters:
      - name: "race_result_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Results"
  /race-results/{race_result_id}/car-model-variant:
    get:
      description: "Returns the `Car Model Variation` in which this `Race Result`\
        \ has been achieved."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Car Model Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "race_result_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Results"
  /race-tracks:
    get:
      description: "Returns a collection of all `Race Tracks` that are stored in the\
        \ More Cars database."
      produces:
        - "application/json"
      parameters:
        - name: "page"
          in: "query"
          required: false
          type: "integer"
          description: "pagination parameter"
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Track"
            minItems: 0
            maxItems: 24
    x-restlet:
      section: "Race Tracks"
  /race-tracks/{race_track_id}:
    get:
      description: "Returns a `Race  Track`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Race Track"
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Tracks"
  /race-tracks/{race_track_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Race\
        \ Track`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Tracks"
  /race-tracks/{race_track_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Race Track`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Race Tracks"
  /race-tracks/{race_track_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Race\
        \ Track`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Tracks"
  /race-tracks/{race_track_id}/race-track-variants:
    get:
      description: "Returns all `Race Track Variants` that exist of the specified\
        \ `Race Track`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Track Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Tracks"
  /race-tracks/{race_track_id}/country:
    get:
      description: "Returns the `Country` in which the specified `Race Track` is located."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Country"
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Tracks"
  /race-track-variants:
    get:
      description: "Returns a collection of all `Race Track Variants` that are stored\
        \ in the More Cars database."
      produces:
        - "application/json"
      parameters:
        - name: "page"
          in: "query"
          required: false
          type: "integer"
          description: "pagination parameter"
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Track Variant"
            minItems: 0
            maxItems: 24
    x-restlet:
      section: "Race Track Variants"
  /race-track-variants/{race_track_variant_id}:
    get:
      description: "Returns a `Race  Track Variant`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Race Track Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_variant_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Track Variants"
  /race-track-variants/{race_track_variant_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Race\
        \ Track Variant`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_variant_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Track Variants"
  /race-track-variants/{race_track_variant_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Race Track Variant`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_variant_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Race Track Variants"
  /race-track-variants/{race_track_variant_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Race\
        \ Track Variant`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_variant_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Track Variants"
  /race-track-variants/{race_track_variant_id}/race-track:
    get:
      description: "Returns the `Race Track` the specified `Race Track Variant` belongs\
        \ to."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Race Track"
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_variant_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Race Track Variants"
  /race-track-variants/{race_track_variant_id}/racing-events:
    get:
      description: "Returns all `Racing Events` that took place at the specified `Race\
        \ Track Variant`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Event"
        404:
          description: "Status 404"
    parameters:
      - name: "race_track_variant_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Race Track Variants"
  /racing-games:
    get:
      description: "Returns a collection of all `Racing Games` that are stored in\
        \ the More Cars database."
      produces:
        - "application/json"
      parameters:
        - name: "page"
          in: "query"
          required: false
          type: "integer"
          description: "pagination parameter"
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Game"
            minItems: 0
            maxItems: 24
    x-restlet:
      section: "Racing Games"
  /racing-games/{racing_game_id}:
    get:
      description: "Returns a `Racing Game`, specified by its ID"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Racing Game"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_game_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Games"
  /racing-games/{racing_game_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Racing\
        \ Game`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_game_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Games"
  /racing-games/{racing_game_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Racing Game`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "racing_game_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Racing Games"
  /racing-games/{racing_game_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Racing\
        \ Game`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_game_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Games"
  /racing-games/{racing_game_id}/car-model-variants:
    get:
      description: "Returns all `Car Model Variants` that are represented in the specified\
        \ `Racing Game`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_game_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Games"
  /racing-games/{racing_game_id}/gaming-platforms:
    get:
      description: "Returns all `Gaming Platforms` the specified `Racing Game` is\
        \ available for."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Gaming Platform"
        404:
          description: "Status 404"
    parameters:
      - name: "racing_game_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Racing Games"
  /gaming-platforms:
    get:
      description: "Returns a collection of all `Gaming Platforms` that are stored\
        \ in the More Cars database."
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Gaming Platform"
            minItems: 1
            maxItems: 50
    x-restlet:
      section: "Gaming Platforms"
  /gaming-platforms/{gaming_platform_id}:
    get:
      description: "Returns a `Gaming Platform`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Gaming Platform"
        404:
          description: "Status 404"
    parameters:
      - name: "gaming_platform_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Gaming Platforms"
  /gaming-platforms/{gaming_platform_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Gaming\
        \ Platform`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "gaming_platform_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Gaming Platforms"
  /gaming-platforms/{gaming_platform_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Gaming Platform`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "gaming_platform_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Gaming Platforms"
  /gaming-platforms/{gaming_platform_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Gaming\
        \ Platform`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "gaming_platform_id"
        in: "path"
        required: true
        type: "string"
    x-restlet:
      section: "Gaming Platforms"
  /gaming-platforms/{gaming_platform_id}/racing-games:
    get:
      description: "Returns all `Racing Games` that are available for the specified\
        \ `Gaming Platform`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Game"
        404:
          description: "Status 404"
    parameters:
      - name: "gaming_platform_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Gaming Platforms"
  /countries:
    get:
      description: "Returns a collection of all `Countries` that are stored in the\
        \ More Cars database."
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Country"
            minItems: 0
            maxItems: 24
    x-restlet:
      section: "Countries"
  /countries/{country_id}:
    get:
      description: "Returns a `Country`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Country"
        404:
          description: "Status 404"
    parameters:
      - name: "country_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Countries"
  /countries/{country_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Country`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "country_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Countries"
  /countries/{country_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Country`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "country_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Countries"
  /countries/{country_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Country`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "country_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Countries"
  /countries/{country_id}/brands:
    get:
      description: "Returns all `Brands` that are from the specified `Country`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Brand"
        404:
          description: "Status 404"
    parameters:
      - name: "country_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Countries"
  /countries/{country_id}/companies:
    get:
      description: "Returns all `Companies` that are located in the specified `Country`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Company"
        404:
          description: "Status 404"
    parameters:
      - name: "country_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Countries"
  /countries/{country_id}/car-magazines:
    get:
      description: "vReturns all `Car Magazines` that are from the specified `Country`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine"
        404:
          description: "Status 404"
    parameters:
      - name: "country_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Countries"
  /countries/{country_id}/car-programmes:
    get:
      description: "Returns all `Car Programmes` that are from the specified `Country`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme"
        404:
          description: "Status 404"
    parameters:
      - name: "country_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Countries"
  /countries/{country_id}/racing-series:
    get:
      description: "Returns all `Racing Series` which have the specified `Country`\
        \ as targeted market."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Series"
        404:
          description: "Status 404"
    parameters:
      - name: "country_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Countries"
  /countries/{country_id}/race-tracks:
    get:
      description: "Returns all `Race Tracks` that are located in the specified `Country`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Track"
        404:
          description: "Status 404"
    parameters:
      - name: "country_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Countries"
  /images:
    get:
      description: "Returns a collection of all `Images` that are stored in the More\
        \ Cars database."
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
    post:
      description: "Adds a new `Image` to the More Cars database.\n\n**General**\n\
        * They must be under Creative Commons license (see above).\n* Image must be\
        \ car-related\n* Image should fit to an existing node (e.g. a `Car Model Vaiation`\
        \ or a `Brand`)\n* Image should be freely available, not locked behind a paywall\n\
        * Image must be under Creative Commons license (see above).\n\n**Flickr and\
        \ Wikimedia images**\n* The following shortcut is available:\n  * Only the\
        \ fields `image_platform` and `image_platform_id` need to be supplied to the\
        \ request.\n  * Author and licence information will be gathered automatically.\n\
        * Duplicate images will not be accepted by the system.\n* Images with invalid\
        \ ID will not be accepted by the system."
      consumes: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Image"
      responses:
        201:
          description: "Image successfully created"
          schema:
            required:
              - "data"
              - "links"
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Image"
              links:
                required:
                  - "self"
                type: "object"
                properties:
                  self:
                    type: "string"
                    description: "The URL of the created `Image`"
          headers:
            Location:
              type: "string"
              description: "The URL of the created `Image`"
        401:
          description: "Authorization information missing"
          schema:
            $ref: "#/definitions/General Error"
        422:
          description: "Invalid image ID or image is already in the database"
          schema:
            $ref: "#/definitions/General Error"
      security:
        - Access Token: []
    x-restlet:
      section: "Images"
  /images/{image_id}:
    get:
      description: "Returns an `Image`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Image"
        404:
          description: "Status 404"
    delete:
      description: "Deletes an `Image` from the More Cars database.\n\n\U0001f512\
        \ Operation requires elevated permissions."
      parameters: []
      responses:
        204:
          description: "Image successfully deleted"
        401:
          description: "Authorization information missing"
          schema:
            $ref: "#/definitions/General Error"
        403:
          description: "Insufficient permissions"
          schema:
            $ref: "#/definitions/General Error"
        404:
          description: "Image not found"
          schema:
            $ref: "#/definitions/General Error"
      security:
        - Access Token: []
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/car-models:
    get:
      description: "Returns all `Car Models` that have the specified `Image` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/car-model-variants:
    get:
      description: "Returns all `Car Model Variants` that have the specified `Image`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/brands:
    get:
      description: "Returns all `Brands` that have the specified `Image` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Brand"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/companies:
    get:
      description: "Returns all `Companies` that have the specified `Image` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Company"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/car-magazines:
    get:
      description: "Returns all `Car Magazines` that have the specified `Image` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/car-magazine-issues:
    get:
      description: "Returns all `Car Magazine Issues` that have the specified `Image`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine Issue"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/car-programmes:
    get:
      description: "Returns all `Car Programmes` that have the specified `Image` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/car-programme-episodes:
    get:
      description: "Returns all `Car Programme Episodes` that have the specified `Image`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme Episode"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/countries:
    get:
      description: "Returns all `Countries` that have the specified `Image` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Country"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/racing-series:
    get:
      description: "Returns all `Racing Series` that have the specified `Image` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Series"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/racing-events:
    get:
      description: "Returns all `Racing Events` that have the specified `Image` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Event"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/racing-event-sessions:
    get:
      description: "Returns all `Racing Event Sessions` that have the specified `Image`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Event Session"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/race-results:
    get:
      description: "Returns all `Race Results` that have the specified `Image` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Result"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/race-tracks:
    get:
      description: "Returns all `Race Tracks` that have the specified `Image` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Track"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/race-track-variants:
    get:
      description: "Returns all `Race Track Variants` that have the specified `Image`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Track Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/racing-games:
    get:
      description: "Returns all `Racing Games` that have the specified `Image` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Game"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/gaming-platforms:
    get:
      description: "Returns all `Gaming Platforms` that have the specified `Image`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Gaming Platform"
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /images/{image_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Image`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "image_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Images"
  /online-articles:
    get:
      description: "Returns a collection of all `Online Articles` that are stored\
        \ in the More Cars database."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 1
            maxItems: 50
    post:
      description: "Adds a new `Online Article` to the More Cars database."
      consumes: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Online Article"
      responses:
        201:
          description: "Online Article successfully created"
          schema:
            required:
              - "data"
              - "links"
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Online Article"
              links:
                required:
                  - "self"
                type: "object"
                properties:
                  self:
                    type: "string"
                    description: "The URL of the created `Online Article`"
          headers:
            Location:
              type: "string"
              description: "The URL of the created `Online Article`"
        401:
          description: "Authorization information missing"
          schema:
            $ref: "#/definitions/General Error"
      security:
        - Access Token: []
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}:
    get:
      description: "Returns an `Online Article`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Online Article"
        404:
          description: "Status 404"
    delete:
      description: "Deletes an `Online Article` from the More Cars database.\n\n\U0001f512\
        \ Operation requires elevated permissions."
      parameters: []
      responses:
        204:
          description: "Online Article successfully deleted"
        401:
          description: "Authorization information missing"
          schema:
            $ref: "#/definitions/General Error"
        403:
          description: "Insufficient permissions"
          schema:
            $ref: "#/definitions/General Error"
        404:
          description: "Online Article not found"
          schema:
            $ref: "#/definitions/General Error"
      security:
        - Access Token: []
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/images:
    get:
      description: "Returns all `Images` that are attached to the specified `Online\
        \ Article`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/videos:
    get:
      description: "Returns all `Videos` that are attached to the specified `Online\
        \ Article`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/car-models:
    get:
      description: "Returns all `Car Models` that have the specified `Online Article`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/car-model-variants:
    get:
      description: "Returns all `Car Model Variants` that have the specified `Online\
        \ Article` attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/brands:
    get:
      description: "Returns all `Brands` that have the specified `Online Article`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Brand"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/companies:
    get:
      description: "Returns all `Companies` that have the specified `Online Article`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Company"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/car-magazines:
    get:
      description: "Returns all `Car Magazines` that have the specified `Online Article`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/car-magazine-issues:
    get:
      description: "Returns all `Car Magazine Issues` that have the specified `Online\
        \ Article` attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine Issue"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/car-programmes:
    get:
      description: "Returns all `Car Programmes` that have the specified `Online Article`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/car-programme-episodes:
    get:
      description: "Returns all `Car Programme Episodes` that have the specified `Online\
        \ Article` attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme Episode"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/countries:
    get:
      description: "Returns all `Countries` that have the specified `Online Article`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Country"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/racing-series:
    get:
      description: "Returns all `Racing Series` that have the specified `Online Article`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Series"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/racing-events:
    get:
      description: "Returns all `Racing Events` that have the specified `Online Article`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Event"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/racing-event-sessions:
    get:
      description: "Returns all `Racing Event Sessions` that have the specified `Online\
        \ Article` attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Event Session"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/race-results:
    get:
      description: "Returns all `Race Results` that have the specified `Online Article`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Result"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/race-tracks:
    get:
      description: "Returns all `Race Tracks` that have the specified `Online Article`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Track"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/race-track-variants:
    get:
      description: "Returns all `Race Track Variants` that have the specified `Online\
        \ Article` attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Track Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/racing-games:
    get:
      description: "Returns all `Racing Games` that have the specified `Online Article`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Game"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /online-articles/{online_article_id}/gaming-platforms:
    get:
      description: "Returns all `Gaming Platforms` that have the specified `Online\
        \ Article` attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Gaming Platform"
        404:
          description: "Status 404"
    parameters:
      - name: "online_article_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Online Articles"
  /videos:
    get:
      description: "Returns a collection of all `Videos` that are stored in the More\
        \ Cars database."
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Video"
            minItems: 1
            maxItems: 50
    post:
      description: "Adds a new `Video` to the More Cars database.\n\n**General**\n\
        * Video must be car-related\n* Video should fit to an existing node (e.g.\
        \ a `Car Model` or a `Car Programme Episode`)\n* Video should be freely available,\
        \ not locked behind a paywall\n* Video must be credited: creator and license\
        \ information\n\n**YouTube videos**\n* The following shortcut is available:\n\
        \  * Only the fields `video_platform` and `video_platform_id` need to be supplied\
        \ to the request.\n  * Author and licence information will be gathered automatically.\n\
        * Duplicate videos will not be accepted by the system.\n* Videos with invalid\
        \ ID will not be accepted by the system."
      consumes: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Video"
      responses:
        201:
          description: "Video successfully created"
          schema:
            required:
              - "data"
              - "links"
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Video"
              links:
                required:
                  - "self"
                type: "object"
                properties:
                  self:
                    type: "string"
                    description: "The URL of the created `Video`"
          headers:
            Location:
              type: "string"
              description: "The URL of the created `Video`"
        401:
          description: "Authorization information missing"
          schema:
            $ref: "#/definitions/General Error"
        422:
          description: "Invalid video ID or video is already in the database"
          schema:
            $ref: "#/definitions/General Error"
      security:
        - Access Token: []
    x-restlet:
      section: "Videos"
  /videos/{video_id}:
    get:
      description: "Returns a `Video`, specified by its ID."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Video"
        404:
          description: "Status 404"
    delete:
      description: "Deletes a `Video` from the More Cars database.\n\n\U0001f512 Operation\
        \ requires elevated permissions."
      parameters: []
      responses:
        204:
          description: "Video successfully deleted"
        401:
          description: "Authorization information missing"
          schema:
            $ref: "#/definitions/General Error"
        403:
          description: "Insufficient permissions"
          schema:
            $ref: "#/definitions/General Error"
        404:
          description: "Video not found"
          schema:
            $ref: "#/definitions/General Error"
      security:
        - Access Token: []
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/car-models:
    get:
      description: "Returns all `Car Models` that have the specified `Video` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/car-model-variants:
    get:
      description: "Returns all `Car Model Variants` that have the specified `Video`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Model Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/brands:
    get:
      description: "Returns all `Brands` that have the specified `Video` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Brand"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/companies:
    get:
      description: "Returns all `Companies` that have the specified `Video` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Company"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/car-magazines:
    get:
      description: "Returns all `Car Magazines` that have the specified `Video` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/car-magazine-issues:
    get:
      description: "Returns all `Car Magazine Issues` that have the specified `Video`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Magazine Issue"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/car-programmes:
    get:
      description: "Returns all `Car Programmes` that have the specified `Video` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/car-programme-episodes:
    get:
      description: "Returns all `Car Programme Episodes` that have the specified `Video`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car Programme Episode"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/countries:
    get:
      description: "Returns all `Countries` that have the specified `Video` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Country"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/racing-series:
    get:
      description: "Returns all `Racing Series` that have the specified `Video` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Series"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/racing-events:
    get:
      description: "Returns all `Racing Events` that have the specified `Video` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Event"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/racing-event-sessions:
    get:
      description: "Returns all `Racing Event Sessions` that have the specified `Video`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Event Session"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/race-results:
    get:
      description: "Returns all `Race Results` that have the specified `Video` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Result"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/race-tracks:
    get:
      description: "Returns all `Race Tracks` that have the specified `Video` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Track"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/race-track-variants:
    get:
      description: "Returns all `Race Track Variants` that have the specified `Video`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Race Track Variant"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/racing-games:
    get:
      description: "Returns all `Racing Games` that have the specified `Video` attached\
        \ to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Racing Game"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/gaming-platforms:
    get:
      description: "Returns all `Gaming Platforms` that have the specified `Video`\
        \ attached to it."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Gaming Platform"
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
  /videos/{video_id}/online-articles:
    get:
      description: "Returns all `Online Articles` that are attached to the specified\
        \ `Video`."
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Online Article"
            minItems: 0
            maxItems: 24
        404:
          description: "Status 404"
    parameters:
      - name: "video_id"
        in: "path"
        required: true
        type: "integer"
    x-restlet:
      section: "Videos"
securityDefinitions:
  Access Token:
    type: "apiKey"
    name: "access-token"
    in: "header"
definitions:
  General Error:
    type: "object"
    required:
      - "errors"
    properties:
      errors:
        type: "array"
        items:
          required:
            - "detail"
            - "status"
          type: "object"
          properties:
            status:
              type: "string"
              description: "HTTP status code"
            detail:
              type: "string"
              description: "Description of the error"
  Car Model:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
        minimum: 1
        maximum: 1000000
        example: 3954
      name:
        type: "string"
        description: "The official name of this model, respecting upper/lower case,\
          \ whitespaces and special characters.\n\n**Important:** The brand name is\
          \ always omitted!"
      generation:
        type: "integer"
        format: "int8"
        description: "What generation is this model?"
        default: 1
        minimum: 1
        maximum: 99
        example: 1
      code:
        type: "string"
        description: "The internal code of this model as given by the manufacturer."
        example: "E46"
      built_from:
        type: "integer"
        description: "What is the first year of production for this model?"
        minimum: 1800
        maximum: 2100
        example: 1886
      built_to:
        type: "integer"
        description: "What is the last year of production for this model?"
        minimum: 1800
        maximum: 2100
        example: 1985
      total_production:
        type: "integer"
        description: "All variations combined, how many units of this model (of this\
          \ generation) have been produced in total?"
        minimum: 1
        maximum: 1000000000
        example: 11713
    x-restlet:
      section: "Car Models"
  Car Model Variant:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
        minimum: 1
        maximum: 1000000
        example: 3954
      name:
        type: "string"
        description: "The official name of this variant, respecting upper/lower case,\
          \ whitespaces and special characters."
        example: "Lamborghini Huracán LP610-4 Spyder"
      code:
        type: "string"
        description: "The internal code name of this vehicle as given by the manufacturer.\
          \ \nUsed to distinguish between multiple generations of one car model variant.\n\
          Sometimes the manufacturer gives each variant a different code.\nSometimes\
          \ they have no code at all."
        example: "E46"
      built_from:
        type: "integer"
        description: "The year this car went into production."
        minimum: 1800
        maximum: 2100
        example: 1886
      built_to:
        type: "integer"
        description: "The final year of production."
        minimum: 1800
        maximum: 2100
        example: 1985
      body_style:
        type: "string"
        description: "Classification based on the the number of doors, seats, size\
          \ and the overall shape of the car."
        enum:
          - "coupe"
          - "convertible"
          - "hatchback"
          - "motorbike"
          - "pickup truck"
          - "offroad"
          - "quad"
          - "roadster"
          - "sedan"
          - "station wagon"
          - "suv"
          - "targa"
          - "van"
          - "truck"
          - "other"
      cd:
        type: "number"
        description: "Drag coefficient. Also referred to as `cd value` or `cw value`."
        example: 0.29
      doors:
        type: "integer"
        description: "The number of doors."
      weight:
        type: "integer"
        description: "The official weight of this car, as provided by the manufacturer."
      weight_unit:
        type: "string"
        enum:
          - "kg"
          - "lbs"
      max_power:
        type: "integer"
        description: "The peak power output of this engine, as claimed by the manufacturer."
      max_power_unit:
        type: "string"
        enum:
          - "PS"
          - "bhp"
          - "kW"
      max_torque:
        type: "integer"
        description: "The peak torque of this engine, as claimed by the manufacturer."
      max_torque_unit:
        type: "string"
        enum:
          - "Nm"
          - "lb ft"
      cylinders:
        type: "integer"
        description: "The number of cylinders (petrol or diesel engine) or rotors\
          \ (wankel engine). (Only applicable to combustion engines.)"
      engine_configuration:
        type: "string"
        description: "The alignment of the cylinders resp. rotors. (Only applicable\
          \ to combustion engines.)"
        enum:
          - "Inline"
          - "Flat"
          - "V"
          - "W"
          - "H"
          - "U"
          - "Rotary"
          - "Radial"
      displacement:
        type: "integer"
        description: "The size (volume) of all combustion chamber(s) combined.\n(Only\
          \ applicable to combustion engines.)"
      displacement_unit:
        type: "string"
        enum:
          - "ccm"
          - "cu in"
      charger:
        type: "string"
        description: "The method how the air is forced into the engine.\n(Only applicable\
          \ to combustion engines.)"
        enum:
          - "none"
          - "turbo"
          - "super"
      engine_type:
        type: "string"
        description: "The thermodynamic and physical principles the engine is build\
          \ upon. \n(The type of fuel is secondary.)"
        enum:
          - "otto"
          - "diesel"
          - "wankel"
          - "turbine"
          - "hybrid"
          - "electric"
          - "other"
      energy_source:
        type: "string"
        description: "The type of 'fuel' this engine runs on. \nFor hybrid cars the\
          \ primary engine is selected."
        enum:
          - "petrol"
          - "diesel"
          - "natural gas"
          - "liquid gas"
          - "hydrogen"
          - "ethanol"
          - "electricity"
          - "other"
      energy_source_2:
        type: "string"
        description: "On what 'fuel' runs the second engine? (Only applicable to hybrid\
          \ engines.)"
        enum:
          - "petrol"
          - "diesel"
          - "natural gas"
          - "liquid gas"
          - "hydrogen"
          - "ethanol"
          - "electricity"
          - "other"
      fuel_consumption:
        type: "number"
        description: "The official fuel (or energy) consumption of this car, as provided\
          \ by the manufacturer."
      fuel_consumption_unit:
        type: "string"
        enum:
          - "l / 100 km"
          - "mpg"
          - "kWh / 100 km"
      energy_capacity:
        type: "number"
        description: "The capacity of the fuel tank (resp. the battery in case of\
          \ an electric vehicle.)"
      energy_capacity_unit:
        type: "string"
        enum:
          - "l"
          - "kg"
          - "kWh"
      energy_capacity_2:
        type: "number"
        description: "The capacity of the second fuel tank. (Only applicable to hybrid\
          \ engines.)"
      energy_capacity_2_unit:
        type: "string"
        enum:
          - "l"
          - "kg"
          - "kWh"
      transmission:
        type: "string"
        description: "The gearbox type."
        enum:
          - "manual"
          - "sequential"
          - "dual clutch"
          - "direct"
          - "cvt"
          - "auto"
      gears:
        type: "integer"
        description: "The number of gears."
      drivetrain:
        type: "string"
        description: "The wheel(s) to which the engine power is transferred.\n`All\
          \ Wheel Drive` includes `4WD`, `AWD`, `IWD` and all the other variations\
          \ that are on the market."
        enum:
          - "FWD"
          - "RWD"
          - "AWD"
      sprint_0_100:
        type: "number"
        description: "The acceleration time from 0 to 100 km/h, resp. 62 mph (in seconds),\
          \ as claimed by the manufacturer"
      top_speed:
        type: "number"
        description: "The maximum speed (vmax) of the car, as claimed by the manufacturer."
      top_speed_unit:
        type: "string"
        enum:
          - "km/h"
          - "mph"
      total_production:
        type: "integer"
        description: "The number of units that have been built of this car."
        minimum: 1
        maximum: 1000000000
        example: 11713
      price:
        type: "number"
        description: "The base price of this model when it was introduced (incl. VAT)."
      price_unit:
        type: "string"
        enum:
          - "€"
          - "$"
          - "£"
          - "DM"
          - "¥"
    x-restlet:
      section: "Car Model Variants"
  Brand:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The name of the brand (e.g. `VW`).\nNot to be confused with\
          \ the name of the company (e.g. `VW AG`). \nThe legal form is always omitted\
          \ (no `AG`, `N.V.`, `Ltd.` or `GmbH`).\nThe official spelling is used (e.g.\
          \ `MINI` instead of `Mini`)."
        example: "BMW"
      full_name:
        type: "string"
        description: "The long form of the brand's name (e.g. `VW` for `Volkswagen`).\n\
          This field is only set if the name is actually abbreviated (e.g. `Porsche`\
          \ is not.)"
        example: "BMW -> Bayerische Motoren Werke"
      founded:
        type: "integer"
        description: "The year in which the brand has been created resp. introduced\
          \ to the market. \nThis is not necessarily the year the company was founded.\
          \ \nE.g.: The history of `Peugeot` goes back to `1810`, but they are building\
          \ cars only since `1891`."
        minimum: 1800
        maximum: 2100
      defunct:
        type: "integer"
        description: "The final year the brand name was officially used (for a car)."
        minimum: 1800
        maximum: 2100
      wmi:
        type: "string"
        description: "The WMI is a two- or three-character code that identifies the\
          \ car manufacturer globally.\n`WMI` stands for `World Manufacturer Identifier`\
          \ and is specified in `ISO 3780`. \nSome manufacturers have multiple WMIs,\
          \ some have none at all.\nMultiple WMIs are separated by comma."
      hsn:
        type: "string"
        description: "`HSN` stands for `Herstellerschlüsselnummer` and is the German\
          \ counterpart of the `WMI`.\nIt's a four-digit number that identifies the\
          \ car manufacturer globally. \nSome manufacturers have multiple HSNs, some\
          \ have none at all.\nMultiple HSNs are separated by comma."
        minLength: 4
        maxLength: 4
        pattern: "[0-9][0-9][0-9][0-9]"
    x-restlet:
      section: "Brands"
  Company:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The official name of this car company, incl. the legal suffix\
          \ (AG, SE, GmbH, N.V., Ltd)."
      founded:
        type: "integer"
      defunct:
        type: "integer"
      headquarter_city:
        type: "string"
        description: "The city in which the company has its (de facto) headquarter.\
          \ \nThe English name should be used (if available), e.g. `Munich` instead\
          \ of `München`."
      legal_headquarter_city:
        type: "string"
        description: "The city where the company has its official headquarter. (This\
          \ should only be set when it differs from the de facto headquarter.)\n\n\
          E.g.: `Ferrari` is an Italian company, based in `Maranello` but on paper\
          \ they are a Dutch company, located in `Amsterdam`.\n\nThe English name\
          \ should be used (if available), e.g. `Munich` instead of `München`."
      employees:
        type: "integer"
        description: "The number of employees that are working for this company."
    x-restlet:
      section: "Companies"
  Car Magazine:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
      founded:
        type: "integer"
      defunct:
        type: "integer"
      focus:
        type: "string"
        enum:
          - "new cars"
          - "classic cars"
          - "sports cars"
          - "tuned cars"
          - "race cars"
          - "american cars"
          - "japanese cars"
          - "brand specific"
          - "other"
      issues_per_year:
        type: "integer"
        description: "The number of regular issues per year. Specials are excluded."
      single_copy_price:
        type: "number"
      single_copy_price_unit:
        type: "string"
      distribution:
        type: "string"
        enum:
          - "print"
          - "digital"
          - "print_and_digital"
      circulation:
        type: "integer"
      publisher:
        type: "string"
      issn:
        type: "string"
    x-restlet:
      section: "Car Magazines"
  Car Magazine Issue:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The title of this issue or - if not available - the main topic."
      number:
        type: "integer"
        description: "The issue's number as is printed on the cover. E.g. '9' for\
          \ the September issue or '483' if the magazine is using consecutive numbering."
      year:
        type: "integer"
        description: "The year that is printed on the cover. This might vary from\
          \ the real release date, e.g. issue '1/2010' could already have been released\
          \ in December of 2009."
        minimum: 1800
        maximum: 2100
      release_date:
        type: "string"
        format: "date"
        description: "The official release date of the print version of this issue."
      single_copy_price:
        type: "number"
        format: "double"
        description: "The price for this issue on the domestic market, as printed\
          \ on the cover, incl. VAT."
      single_copy_price_unit:
        type: "string"
      pages:
        type: "integer"
        description: "The total number of pages this issue has. This includes cover\
          \ and flipside, but not booklets or flyers."
    x-restlet:
      section: "Car Magazine Issues"
  Car Programme:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "Title of the programme. Use the official spelling, e.g 'Top\
          \ Gear' insted of 'TopGear' or 'GRIP' instead of 'Grip'."
      aired_from_year:
        type: "integer"
        description: "The first year the programme was broadcoasted."
      aired_to_year:
        type: "integer"
        description: "The final year of the programme."
      channel:
        type: "string"
        description: "On which channel does/did the programme run? Can be a classic\
          \ TV station or an online channel."
      seasons:
        type: "integer"
        description: "The number of seasons (resp. series) until today."
      episodes:
        type: "integer"
        description: "The total number of episodes, across all seasons, until today,\
          \ including specials, but not re-runs."
      running_time:
        type: "integer"
        description: "The regular length of one episode (in minutes). If it changed\
          \ over time the running time of the latest episodes should be used."
    x-restlet:
      section: "Car Programmes"
  Car Programme Episode:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The official name or title of this episode. \nAlternatively\
          \ the main topic when there is no official title."
      season:
        type: "integer"
        description: "The season number this episode belongs to."
      season_episode:
        type: "integer"
        description: "The episode number within this season. (This is not the overall\
          \ count!)"
      original_air_date:
        type: "string"
        format: "date"
        description: "The date this episode was broadcasted for the very first time."
      duration:
        type: "string"
        description: "The length of this episode in minutes and seconds."
    x-restlet:
      section: "Car Programme Episodes"
  Racing Series:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The official name of the series, in long form, not abbreviated."
        example: "Formula 1"
      short_name:
        type: "string"
        description: "The abbreviation or short form of the series (if applicable)."
        example: "F1"
      founded:
        type: "integer"
        description: "The year the racing series started."
      defunct:
        type: "integer"
        description: "The final year of the racing series."
      organization:
        type: "string"
        description: "The governing body of this series."
        example: "FIA"
      type:
        type: "string"
        description: "The kind of vehicle that are driven in this series."
        enum:
          - "formula racing cars"
          - "touring cars"
          - "sports cars"
          - "production cars"
          - "cup cars"
          - "stock cars"
          - "rally cars"
          - "dragster"
          - "go-karts"
          - "historical cars"
          - "trucks"
          - "other"
    x-restlet:
      section: "Racing Series"
  Racing Event:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The official name of this event. \nIn general a combination\
          \ of the year, the racing series and the the location. \nMight also contain\
          \ the main sponsor's name."
        example: "2016 WTCC Race of Morocco"
      start_date:
        type: "string"
        description: "The first (official) day of the event."
      end_date:
        type: "string"
        description: "The last day of the event - usually the race day."
    x-restlet:
      section: "Racing Events"
  Racing Event Session:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        example: "Race"
      start_time:
        type: "string"
        format: "date-time"
        description: "The planned start date and time of the session."
        example: "2017-09-03T14:00"
      duration:
        type: "number"
        description: "The planned length of the session. Can be a fixed time or a\
          \ number of laps."
      duration_unit:
        type: "string"
        enum:
          - "laps"
          - "minutes"
          - "hours"
    x-restlet:
      section: "Racing Event Sessions"
  Race Result:
    type: "object"
    required:
      - "id"
      - "name"
      - "position"
    properties:
      id:
        type: "integer"
        description: "The internal More Cars ID of this node. It’s generated by the\
          \ system and cannot be altered."
      name:
        type: "string"
      position:
        type: "integer"
        description: "The final position of this car in this session."
      driver_number:
        type: "string"
        description: "The start number of the car, reps. the driver's number."
        example: "77"
      driver_name:
        type: "string"
        description: "The full name of the driver."
      team_name:
        type: "string"
        description: "The full name of the team."
      race_time:
        type: "string"
        description: "Total time"
      fastest_lap_time:
        type: "string"
        description: "Driver's fastest lap in this session."
      points:
        type: "number"
        description: "The number of championship points earned in this session. \n\
          \                Depending on the regulations this can be based on the position,\
          \ the fastest lap, malus points for fouls etc."
        example: 25
    x-restlet:
      section: "Race Results"
  Race Track:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The official name of the race track.\nMight contain the name\
          \ of the owner or a sponsor, like `Red Bull Ring`.\nThe most up to date\
          \ name is used."
      opened:
        type: "integer"
      closed:
        type: "integer"
      type:
        type: "string"
        enum:
          - "permanent race track"
          - "street circuit"
          - "other"
      location:
        type: "string"
        description: "The city or region where the track is located."
      coordinates:
        type: "string"
        description: "The geographic position of the race track. \nFor longer tracks\
          \ the start line is used as reference."
    x-restlet:
      section: "Race Tracks"
  Race Track Variant:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The name of this variant."
      length:
        type: "number"
        description: "The length of this variant."
      length_unit:
        type: "string"
      direction:
        type: "string"
        enum:
          - "clockwise"
          - "counterclockwise"
      elevation_change:
        type: "number"
        description: "The height difference between lowest and highest point of the\
          \ track."
      elevation_change_unit:
        type: "string"
      surface:
        type: "string"
        enum:
          - "asphalt"
          - "gravel"
          - "sand"
          - "ice"
          - "salt"
          - "mixed"
          - "other"
    x-restlet:
      section: "Race Track Variants"
  Racing Game:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
        minimum: 1
        maximum: 1000000
        example: 3954
      name:
        type: "string"
        description: "The official name of this racing game."
        example: "Need for Speed"
      release_year:
        type: "integer"
        description: "The year this game was released."
        minimum: 1900
        maximum: 2100
        example: 1986
      developer:
        type: "string"
        description: "The name of the developer of this game."
        example: "Kunos Simulazioni"
      publisher:
        type: "string"
        description: "The name of the publisher of this game."
        example: "Sony Interactive Entertainment"
    x-restlet:
      section: "Racing Games"
  Gaming Platform:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
        minimum: 1
        maximum: 1000000
        example: 3954
      name:
        type: "string"
        description: "The official name of this gaming platform."
        example: "Xbox One"
      release_year:
        type: "integer"
        description: "The year this gaming platform was released."
      company:
        type: "string"
        description: "The company that created this gaming platform."
    x-restlet:
      section: "Gaming Platforms"
  Country:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The official (english) name of the country."
      adjectival:
        type: "string"
        description: "The adjectival form of the country's name.\nE.g.: 'The `Italian`\
          \ carmaker...' or 'The `British` version of this model...'"
      demonym:
        type: "string"
        description: "How are the inhabitants of this country called? \nE.g.: 'The\
          \ `Italians` have the fastest cars...')"
      short_name:
        type: "string"
        description: "Short form of the country name (if applicable)."
        example: "UK"
      code:
        type: "string"
        description: "The official (2-letter) country code, according to ISO 3166-1."
    x-restlet:
      section: "Countries"
  Image:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The name resp. title of this image."
      image_platform:
        type: "string"
        description: "The provider that is hosting the image."
        enum:
          - "flickr"
          - "wikimedia"
      image_platform_id:
        type: "string"
        description: "The ID resp. the name of the image, as given by the image platform.\
          \ \nFlickr uses numbers, like `43644091312`.\nWikimedia uses a URL friendly\
          \ version of the name of the image, like `File:BMW_Z4_Concept.jpg`."
      source:
        type: "string"
        description: "The internet address of the concrete image file."
      origin:
        type: "string"
        description: "A description page where additional information about the photo\
          \ can be found. Like licensing details, author, camera model etc."
      author:
        type: "string"
        description: "The name of the photographer resp. the rights holder of the\
          \ image."
      license:
        type: "string"
        description: "The license this image was published under."
      description:
        type: "string"
        description: "A short description of what can be seen on the photo, \nwhere\
          \ it was taken,\nwhen it was taken."
      tags:
        type: "string"
        description: "A comma-separated list of keywords describing the picture."
    x-restlet:
      section: "Images"
  Online Article:
    type: "object"
    required:
      - "id"
      - "name"
      - "url"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The headline of this article."
      description:
        type: "string"
        description: "Characterization of the article (Car review? News flash? Interview?\
          \ Race report?) or an excerpt or a quote."
      author:
        type: "string"
        description: "The creator of the article."
      publish_date:
        type: "string"
        format: "date"
        description: "The date when the article was published. Format is `YYYY-MM-DD`."
        example: "2016-04-12"
      url:
        type: "string"
        description: "Where can the article be found on the internet?"
    description: "An `Online Article` is a blog post or the online version of an article\
      \ written in a car magazine. \nAn article is suited for the database when it\
      \ discusses a car related topic that is covered by More Cars (e.g. Car Models,\
      \ Brands, Racing Games, Motorsport).\nThere is no restriction on the format.\
      \ It can be a review, a group test, a discussion, a discourse, an interview\
      \ etc.\nThere is no restriction on the language, but English articles are preferred."
    x-restlet:
      section: "Online Articles"
  Video:
    type: "object"
    required:
      - "creator"
      - "id"
      - "license"
      - "name"
      - "source"
    properties:
      id:
        type: "integer"
        description: "The internal `More Cars` ID of this node. It's generated by\
          \ the system and cannot be altered."
      name:
        type: "string"
        description: "The title of the video."
      video_platform:
        type: "string"
        description: "The platform or service that is hosting the video."
        enum:
          - "youtube"
      video_platform_id:
        type: "string"
        description: "The ID of the video, as given by the video hosting service."
      source:
        type: "string"
        description: "The URL of the video or the web page where the licensing and\
          \ additional information can be found."
      creator:
        type: "string"
        description: "The name of the creator (or uploader) of the video."
      license:
        type: "string"
        description: "The license under which the video was published."
      duration:
        type: "string"
        description: "The length of this video, following the ISO 8601 standard."
        example: "PT6M48S"
      description:
        type: "string"
      tags:
        type: "string"
        description: "A comma-separated list of keywords, describing the key aspects\
          \ of this video."
    x-restlet:
      section: "Videos"
x-restlet:
  sections:
    Car Models:
      description: "A `Car Model` represents one *generation* of a vehicle (e.g. *VW\
        \ Golf VII* or *Ford Fiesta Mk2*). A generation usually last between 5 and\
        \ 10 years and is built in multiple `Car Model Variants`. The variation can\
        \ be in body style (coupe, station wagon, convertible), engine specification\
        \ (gasoline, diesel, electric), transmission (manual, automatic), purpose\
        \ (race car, police car, military vehicle) or other characteristics.\n# Relationships\n\
        ## **Brand**\n* Each `Car Model` can belong to one `Brand`\n\n## **Car Model\
        \ Variants**\n* Each `Car Model` can have mutiple `Car Model Variants`. (1:n)\n\
        \n## **Car Magazine Issues**\n* The issues in which this car model (generation)\
        \ has been presented.\n* Only issues that talk about the car model in general\
        \ or discussing multiple variants of it\n* Specific models are connected via\
        \ car model variants\n## **Car Programme Episodes**\n* The broadcasts in which\
        \ this car model has been presented.\n* Only episodes that talk about the\
        \ car model in general or focus on multiple variants of it's generation\n\
        * Specific models are connected via car model variants\n## **Images**\n* Each\
        \ `Car Model` can have multiple `Images`. (1:n)\n* Each `Image` can belong\
        \ to one or many `Car Model`. (1:n)\n* Images should show the car in a total\
        \ or as a close-up.\n* The car should not be blocked by objects or people.\n\
        * The main image should show the car from a front-side angle."
    Car Model Variants:
      description: "Most `Car Models` are produced in multiple `Car Model Variants`\
        \ (or versions or variations). \nThe difference can be in the engine type\
        \ (gasoline, diesel, electric, hybrid), size or configuration (2 litre I4,\
        \ 5 litre V8),\nthe transmission (manual, dual clutch, automatic),\nthe drivetrain\
        \ (FWD, RWD, AWD),\nthe body style (sedan, coupe, cabrio)\nor any combination.\n\
        \nMore Cars accepts all variants, from regular, street-legal vehicles, to\
        \ prototypes, concept cars or even a race car - as long as there exists at\
        \ least one unit in real life. \nCars that only exist as renderings or fantasy\
        \ cars are not permitted.\n# Relationships\n`Car Model Variants` are the heart\
        \ of More Cars. They are connected to all segments of the database, be it\
        \ car programmes, car magazines, racing games or motorsport.\n## **Car Models**\n\
        * Each `Car Model Variant` belongs to exactly one `Car Model`. (1:1)\n* Each\
        \ `Car Model` can have one or many `Car Model Variants`. (1:n)\n\n## **Images**\n\
        * Each `Car Model Variant` can have multiple `Images`. (1:n)\n* Each `Image`\
        \ can belong to one or many `Car Model Variants`. (1:n)\n* Images should show\
        \ the car in a total or as a close-up.\n* Images should not show the car in\
        \ a group of cars.\n* The car should not be blocked by objects or people.\n\
        * The main image should show the car from a rear-side angle."
    Brands:
      description: "`Brands` (or marques or makes) enable us to distinguish between\
        \ vehicles from different car manufacturers, e.g. BMW, Toyota or Ford.\nHere\
        \ at More Cars we use the more general term `Company` for these manufacturers.\
        \ \nThey are the legal entity behind all brands.\nE.g. the brand *Toyota*\
        \ belongs to the *Toyota Motor Company*."
    Companies:
      description: "A `Company` is the legal entity behind a `Brand`. \nE.g. *Ferrari\
        \ N.V.* is the company that owns the brand *Ferrari*.\nA company can have\
        \ multiple brands, like the *Ford Motor Company* which owns the brands *Ford*,\
        \ *Lincoln*, *Mercury* (and some more). \nTo keep things simple More Cars\
        \ does not mirror the company structures in detail.\nE.g. the brand *Lamborghini*\
        \ belongs to the company *Automobili Lamborghini S.p.A.*, which belongs to\
        \ the *Audi AG*, which is a subsidiary of the *Volkswagen AG*.\nBut here at\
        \ More Cars we attach *Lamborghini* directly to the *Volkswagen AG*."
    Car Magazines:
      description: "A `Car Magazine` is a publication that is focused on automobiles\
        \ and is published periodically, e.g. `Top Gear` or `Evo` or `Octane`.\nMore\
        \ Cars allows magazines from all countries and all times.\nMagazines that\
        \ only occasionally write about cars should not be added.\nThe publishment\
        \ can be in print or digitally or both."
    Car Magazine Issues: {}
    Car Programmes:
      description: "A `Car Programme` is a show which is a) broadcasted periodically\
        \ and is b) focussed on automobiles. \nThe format can be anything from a review\
        \ to a road trip, a discussion, a track test or a mix of them.\nIt can be\
        \ from any period of time (e.g. classic Top Gear from the 80s or new Top Gear\
        \ from the 2000s).\nDistribution of the programme can be via TV channel or\
        \ streaming service or both."
    Car Programme Episodes: {}
    Racing Series: {}
    Racing Events: {}
    Racing Event Sessions:
      description: "Usually, each `Racing Event` consists of multiple sessions.\n\
        The number and the format of these `Racing Event Sessions` depends on the\
        \ `Racing Series`.\nIn *Formula 1* for example, there are multiple training\
        \ sessions, a 3-part qualifying session and one racing session.\nThe *British\
        \ Touring Car Championship* has three racing sessions.\nIn Rallycross there\
        \ are even more racing sessions, but in a shootout format."
    Race Results:
      description: "A `Race Result` describes the outcome of one driver in one particular\
        \ session within one race event. "
    Race Tracks:
      description: "`Race Tracks` are primarily made for motorsport races, but may\
        \ also be used for car testing or driver trainings.\nThey come in different\
        \ forms and flavours.\nIt can be a closed racing circuit like Silverstone,\
        \ a temporary city race track like Monaco, a mountain trail like Pikes Peak\
        \ or an open track like a Rallye Dakar route.\nMore Cars allows all race tracks\
        \ to be added that exist in the real world.\nSo, fantasy tracks from racing\
        \ games are not permitted."
    Race Track Variants:
      description: "Most `Race Tracks` have multiple layouts, so they can host different\
        \ motorsport classes and events.\nE.g. there might be a longer layout for\
        \ Formula 1 races, a short version for touring cars and a very short one that\
        \ is used for car tests or driver trainings."
    Racing Games:
      description: "Racing games include all video games where the main activity is\
        \ to race or have some kind of competition with cars. There is only one restriction.\
        \ The featured vehicles `MUST` all be `officially licensed`. So, games like\
        \ GTA cannot be added to the database, even if all the cars there are inspired\
        \ by real ones. The games can be arcade style or simulation heavy or anything\
        \ between. There is no restriction regarding the era. The most current Gran\
        \ Turismo is as admissible as an Out Run from 1986. Same goes for the platform.\
        \ PC, PlayStation, NES, C64 or an old Arcade cabinet - all of them are admissible.\
        \ \n\nDLCs (and other forms of add-ons) are not listed as separate entries.\
        \ They are treated as if they were part of the original game. So, any additional\
        \ content (vehicles, race tracks) is added to that original game.\n# Relationships\n\
        ## **Car Model Variations**\n* Each `Racing Game` can feature one or many\
        \ `Car Model Variations`. (1:n)\n* Each `Car Model Variation` can be featured\
        \ in many `Racing Games`. (1:n)\n\n## **Gaming Platforms**\n* Each `Racing\
        \ Game` can be published on multiple `Gaming Platforms`. (1:n)\n* Each `Gaming\
        \ Platform` can have multiple `Racing Games` published. (1:n)"
    Gaming Platforms:
      description: "`Gaming Platforms` include all hardware that allows to play video\
        \ games. \nThis can be a next-gen console, a handheld or an old arcade. \n\
        Also included are platforms that are not purely meant for gaming, like a PC\
        \ or a Mac."
    Countries: {}
    Images:
      description: "Images are photos or illustrations of cars or car related objects.\
        \ Here at More Cars this can be images of car models, brand logos, car magazine\
        \ covers, model cars, race tracks, race drivers, company headquarters and\
        \ so on.\n## **Quality**\nImages don't need to be of professional high quality,\
        \ but they should have at least a decent quality. Meaning: sharp, at least\
        \ 640x480 resolution, subject is clearly visible.\n\n## **Copyright / Licensing**\n\
        Copyright laws and regulations are quite tricky and on top very different\
        \ in each country. Because *More Cars* is based in Germany, German (resp.\
        \ EU law) law will be applied. The first consequence is that there is no option\
        \ to add photos under fair-use condition. There is just no such rule (or equivalent)\
        \ here. So, adding commercial photos in low resolution would be allowed in\
        \ the USA, but here it is still a copyright infringement.\n\nTo avoid any\
        \ potential legal trouble More Cars only allows images that are licensed under\
        \ [Creative Commons](https://creativecommons.org/licenses/) terms. To be precise,\
        \ only\n[CC BY](https://creativecommons.org/licenses/by/2.0/),\n[CC BY-SA](https://creativecommons.org/licenses/by-sa/2.0/),\n\
        [CC-BY-ND](https://creativecommons.org/licenses/by-nd/2.0/)\nand\n[CC0](https://creativecommons.org/publicdomain/zero/1.0/)\n\
        are allowed.\n## **Hosting**\nMore Cars does not host any of the images. They\
        \ are all hot-linked and primarily come from the image hosting services **Flickr**\
        \ and **Wikimedia**.\n\n# Relationships\nIn general, images can be attached\
        \ to any other node. One exception: images can not be attached to other images\
        \ or to videos."
    Online Articles: {}
    Videos:
      description: "* Videos are not hosted on More Cars.\n* Videos are references\
        \ to the original media files in the internet.\n* Only internet videos may\
        \ be added.\n* Preferred are videos that can be embedded on a website, e.g.\
        \ YouTube or Vimeo."
