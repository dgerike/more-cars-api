{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "More Cars API",
    "version" : "0.7.1",
    "description" : "**ATTENTION: This documentation as well as the API itself are currently under construction. Any part of it can change anytime.**\n\nMore Cars is designed as an **open car database**. \nAll the information is contributed by the community and can be used by everyone, for any purpose, for free.\nThis API is the counterpart of the More Cars website https://more-cars.net/. \nAll the information found there can be accessed via this REST API here and vice versa. \n\n**Access**\n\nDepending on the endpoint and the operation you want to execute you might need \n* no permissions at all\n* an access token \n* or privileged permissions.\n\n**Technical Background**\n\nAll endpoints follow the rules and best practices of **RESTful APIs**. \nMeaning, the correct HTTP verbs are used and proper HTTP status codes are returned. \nSee https://restfulapi.net/ or https://en.wikipedia.org/wiki/Representational_state_transfer.\n\nThe data structures follow the **JSON API** specification. \nSee https://jsonapi.org/.\n\nWhen you stumble upon a **required** flag it means that the field needs to be present in the database, not necessarily in every request.\nE.g. in a POST request this required field is needed. When retrieving, updating or deleting it is optional (in most cases).",
    "termsOfService" : "",
    "contact" : {
      "name" : "Dennis Gerike",
      "url" : "https://more-cars.net",
      "email" : "dennis.gerike@more-cars.net"
    },
    "license" : {
      "name" : "",
      "url" : ""
    }
  },
  "tags" : [ {
    "name" : "Car Models",
    "description" : "# General\nA `Car Model` represents one *generation* of a vehicle (e.g. *VW Golf VII* or *Ford Fiesta Mk2*). A generation usually last between 5 and 10 years and is built in multiple `Car Model Variants`. The variation can be in body style (coupe, station wagon, convertible), engine specification (gasoline, diesel, electric), transmission (manual, automatic), purpose (race car, police car, military vehicle) or other characteristics.\n# Relationships\n## **Brand**\n* Each `Car Model` can belong to one `Brand`\n## **Car Model Variants**\n* Each `Car Model` can have mutiple `Car Model Variants`.\n## **Car Magazine Issues**\n* The issues in which this car model (generation) has been presented. * Only issues that talk about the car model in general or discussing multiple variants of it * Specific models are connected via car model variants\n## **Car Programme Episodes**\n* The broadcasts in which this car model has been presented. * Only episodes that talk about the car model in general or focus on multiple variants of it's generation * Specific models are connected via car model variants\n## **Images**\n* Each `Car Model` can have multiple `Images`. * Each `Image` can belong to one or many `Car Model`. * Images should show the car in a total or as a close-up. * The car should not be blocked by objects or people. * The main image should show the car from a front-side angle.\""
  }, {
    "name" : "Car Model Variants",
    "description" : "# General\nMost `Car Models` are produced in different variants (or versions or variations).  The difference can be in the engine type (gasoline, diesel, electric, hybrid), size or configuration (2 litre I4, 5 litre V8), the transmission (manual, dual clutch, automatic), the drivetrain (FWD, RWD, AWD), the body style (sedan, coupe, cabrio) or any combination.\nMore Cars accepts all `Car Model Variants`, from regular, street-legal vehicles, to prototypes, concept cars or even race cars - as long as there exists at least one unit in real life.  Cars that only exist as renderings or fantasy cars are not permitted.\n# Relationships\n`Car Model Variants` are the heart of More Cars. They are connected to all segments of the database, be it car programmes, car magazines, racing games or motorsport.\n## **Car Models**\n* Each `Car Model Variant` belongs to exactly one `Car Model`. * Each `Car Model` can have one or many `Car Model Variants`.\n## **Images**\n* Each `Car Model Variant` can have multiple `Images`. * Each `Image` can belong to one or many `Car Model Variants`. * Images should show the car in a total or as a close-up. * Images should not show the car in a group of cars. * The car should not be blocked by objects or people. * The main image should show the car from a rear-side angle."
  }, {
    "name" : "Brands",
    "description" : "`Brands` (or marques or makes) enable us to distinguish between vehicles from different car manufacturers, e.g. BMW, Toyota or Ford.\nHere at More Cars we use the more general term `Company` for these manufacturers.  They are the legal entity behind all brands. E.g. the brand *Toyota* belongs to the *Toyota Motor Company*."
  }, {
    "name" : "Companies",
    "description" : "A `Company` is the legal entity behind a `Brand`.  E.g. *Ferrari N.V.* is the company that owns the brand *Ferrari*. A company can have multiple brands, like the *Ford Motor Company* which owns the brands *Ford*, *Lincoln*, *Mercury* (and some more).  To keep things simple More Cars does not mirror the company structures in detail. E.g. the brand *Lamborghini* belongs to the company *Automobili Lamborghini S.p.A.*, which belongs to the *Audi AG*, which is a subsidiary of the *Volkswagen AG*. But here at More Cars we attach *Lamborghini* directly to the *Volkswagen AG*."
  }, {
    "name" : "Car Magazines",
    "description" : "A `Car Magazine` is a publication that is focused on automobiles and is published periodically, e.g. `Top Gear` or `Evo` or `Octane`. More Cars allows magazines from all countries and all times. Magazines that only occasionally write about cars should not be added. The publishment can be in print or digitally or both."
  }, {
    "name" : "Car Magazine Issues",
    "description" : "..."
  }, {
    "name" : "Car Programmes",
    "description" : "A `Car Programme` is a show which is a) broadcasted periodically and is b) focussed on automobiles.  The format can be anything from a review to a road trip, a discussion, a track test or a mix of them. It can be from any period of time (e.g. classic Top Gear from the 80s or new Top Gear from the 2000s). Distribution of the programme can be via TV channel or streaming service or both."
  }, {
    "name" : "Car Programme Episodes",
    "description" : "..."
  }, {
    "name" : "Racing Games",
    "description" : "# General\nRacing games include all video games where the main activity is to race or have some kind of competition with cars. There is only one restriction. The featured vehicles `MUST` all be `officially licensed`. So, games like GTA cannot be added to the database, even if all the cars there are inspired by real ones. The games can be arcade style or simulation heavy or anything between. There is no restriction regarding the era. The most current Gran Turismo is as admissible as an Out Run from 1986. Same goes for the platform. PC, PlayStation, NES, C64 or an old Arcade cabinet - all of them are admissible. \nDLCs (and other forms of add-ons) are not listed as separate entries. They are treated as if they were part of the original game. So, any additional content (vehicles, race tracks) is added to that original game.\n# Relationships\n## **Car Model Variations**\n* Each `Racing Game` can feature one or many `Car Model Variations`. * Each `Car Model Variation` can be featured in many `Racing Games`. \n## **Gaming Platforms**\n* Each `Racing Game` can be published on multiple `Gaming Platforms`. * Each `Gaming Platform` can have multiple `Racing Games` published."
  }, {
    "name" : "Gaming Platforms",
    "description" : "`Gaming Platforms` include all hardware that allows to play video games.  This can be a next-gen console, a handheld or an old arcade.  Also included are platforms that are not purely meant for gaming, like a PC or a Mac."
  }, {
    "name" : "Racing Series",
    "description" : "..."
  }, {
    "name" : "Racing Events",
    "description" : "..."
  }, {
    "name" : "Racing Event Sessions",
    "description" : "Usually, each `Racing Event` consists of multiple sessions. The number and the format of these `Racing Event Sessions` depends on the `Racing Series`. In *Formula 1* for example, there are multiple training sessions, a 3-part qualifying session and one racing session. The *British Touring Car Championship* has three racing sessions. In Rallycross there are even more racing sessions, but in a shootout format."
  }, {
    "name" : "Race Results",
    "description" : "A `Race Result` describes the outcome of one car in one particular session within one race event."
  }, {
    "name" : "Race Tracks",
    "description" : "`Race Tracks` are primarily made for motorsport races, but may also be used for car testing or driver trainings. They come in different forms and flavours. It can be a closed racing circuit like Silverstone, a temporary city race track like Monaco, a mountain trail like Pikes Peak or an open track like a Rallye Dakar route. More Cars allows all race tracks to be added that exist in the real world. So, fantasy tracks from racing games are not permitted."
  }, {
    "name" : "Race Track Variants",
    "description" : "Most `Race Tracks` have multiple layouts, so they can host different motorsport classes and events. E.g. there might be a longer layout for Formula 1 races, a short version for touring cars and a very short one that is used for car tests or driver trainings."
  }, {
    "name" : "Countries",
    "description" : "..."
  }, {
    "name" : "Images",
    "description" : "# General\nImages are photos or illustrations of cars or car related objects. Here at More Cars this can be images of car models, brand logos, car magazine covers, model cars, race tracks, race drivers, company headquarters and so on.\n## **Quality**\nImages don't need to be of professional high quality, but they should have at least a decent quality. Meaning: sharp, at least 640x480 resolution, subject is clearly visible.\n## **Copyright / Licensing**\nCopyright laws and regulations are quite tricky and on top very different in each country. Because *More Cars* is based in Germany, German (resp. EU law) law will be applied. The first consequence is that there is no option to add photos under fair-use condition. There is just no such rule (or equivalent) here. So, adding commercial photos in low resolution would be allowed in the USA, but here it is still a copyright infringement.\nTo avoid any potential legal trouble More Cars only allows images that are licensed under [Creative Commons](https://creativecommons.org/licenses/) terms. To be precise, only\n  [CC BY](https://creativecommons.org/licenses/by/2.0/),\n  [CC BY-SA](https://creativecommons.org/licenses/by-sa/2.0/),\n  [CC-BY-ND](https://creativecommons.org/licenses/by-nd/2.0/)\nand\n  [CC0](https://creativecommons.org/publicdomain/zero/1.0/)\nare allowed.\n## **Hosting**\nMore Cars does not host any of the images. They are all hot-linked and primarily come from the image hosting services **Flickr** and **Wikimedia**.\n# Relationships\nIn general, images can be attached to any other node. One exception: images can not be attached to other images or to videos."
  }, {
    "name" : "Online Articles",
    "description" : "..."
  }, {
    "name" : "Videos",
    "description" : "* Videos are not hosted on More Cars. * Videos are references to the original media files in the internet. * Only internet videos may be added. * Preferred are videos that can be embedded on a website, e.g. YouTube or Vimeo."
  } ],
  "paths" : {
    "/car-models" : {
      "get" : {
        "tags" : [ "Car Models" ],
        "summary" : "Get all Car Models",
        "description" : "Returns a collection of all `Car Models` that are stored in the *More Cars* database.  If the collection is larger than 24 items (default) then it will be chunked.  Use the \"page\" parameter to fetch the remaining nodes.",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "description" : "pagination",
          "schema" : {
            "type" : "integer"
          },
          "example" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Car Models" ],
        "summary" : "Create new Car Model",
        "description" : "Adds a new `Car Model` to the More Cars database.",
        "security" : [ {
          "Access_Token" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Car_Model"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Node was successfully created",
            "headers" : {
              "Location" : {
                "description" : "The URL of the newly created Node",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "links" ],
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/Car_Model"
                    },
                    "links" : {
                      "required" : [ "self" ],
                      "type" : "object",
                      "properties" : {
                        "self" : {
                          "type" : "string",
                          "description" : "The URL of the newly created Node",
                          "example" : "https://more-cars.net/911-996__1102"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "422" : {
            "$ref" : "#/components/responses/InvalidData"
          }
        }
      }
    },
    "/car-models/{car_model_id}" : {
      "get" : {
        "tags" : [ "Car Models" ],
        "summary" : "Get specific Car Model",
        "description" : "Returns a `Car Model` specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Node was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Model"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Car Models" ],
        "summary" : "Delete Car Model",
        "description" : "Deletes a `Car Model`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully deleted"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      } ]
    },
    "/car-models/{car_model_id}/brand" : {
      "get" : {
        "tags" : [ "Car Models" ],
        "summary" : "Get connected Brand",
        "description" : "Returns the `Brand` which owns the specified `Car Model`.",
        "responses" : {
          "200" : {
            "description" : "Node was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Brand"
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      } ]
    },
    "/car-models/{car_model_id}/brands/{brand_id}" : {
      "post" : {
        "tags" : [ "Car Models" ],
        "summary" : "Connect Brand",
        "description" : "Connects an existing `Brand` to the specified `Car Model`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Models" ],
        "summary" : "Disconnect Brand",
        "description" : "Disconnects a `Brand` from the specified `Car Model`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "example" : 390,
        "schema" : {
          "type" : "integer"
        }
      }, {
        "name" : "brand_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 319
      } ]
    },
    "/car-models/{car_model_id}/car-model-variants" : {
      "get" : {
        "tags" : [ "Car Models" ],
        "summary" : "Get connected Car Model Variants",
        "description" : "Returns all `Car Model Variants` that exist of the specified `Car Model`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      } ]
    },
    "/car-models/{car_model_id}/car-model-variants/{car_model_variant_id}" : {
      "post" : {
        "tags" : [ "Car Models" ],
        "summary" : "Connect Car Model Variant",
        "description" : "Connects an existing `Car Model Variant` to the specified `Car Model`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Models" ],
        "summary" : "Disconnect Car Model Variant",
        "description" : "Disconnects a `Car Model Variant` from the specified `Car Model`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      }, {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      } ]
    },
    "/car-models/{car_model_id}/car-magazine-issues" : {
      "get" : {
        "tags" : [ "Car Models" ],
        "summary" : "Get connected Car Magazine Issues",
        "description" : "Returns all `Car Magazine Issues` that have featured the specified `Car Model`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine_Issue"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      } ]
    },
    "/car-models/{car_model_id}/car-magazine-issues/{car_magazine_issue_id}" : {
      "post" : {
        "tags" : [ "Car Models" ],
        "summary" : "Connect Car Magazine Issue",
        "description" : "Connects an existing `Car Magazine Issue` to the specified `Car Model`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Models" ],
        "summary" : "Discnnect Car Magazine Issue",
        "description" : "Disconnects a `Car Magazine Issue` from the specified `Car Model`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      }, {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 1027
      } ]
    },
    "/car-models/{car_model_id}/car-programme-episodes" : {
      "get" : {
        "tags" : [ "Car Models" ],
        "summary" : "Get connected Car Programme Episodes",
        "description" : "Returns all `Car Programme Episodes` in which the specified `Car Model` has been presented.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme_Episode"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      } ]
    },
    "/car-models/{car_model_id}/car-programme-episodes/{car_programme_episode_id}" : {
      "post" : {
        "tags" : [ "Car Models" ],
        "summary" : "Connect Car Programme Episode",
        "description" : "Connects an existing `Car Programme Episode` to the specified `Car Model`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Models" ],
        "summary" : "Disonnect Car Programme Episode",
        "description" : "Disconnects a `Car Programme Episode` from the specified `Car Model`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      }, {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 22261
      } ]
    },
    "/car-models/{car_model_id}/images" : {
      "get" : {
        "tags" : [ "Car Models" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Car Model`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      } ]
    },
    "/car-models/{car_model_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Car Models" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Car Model`.\n\n**Guidelines**\n* The car should be in the focus. There can be other cars and people around, but the car itself should be clearly visible and should dominate the image.\n* The selected images should show the car from multiple angles. So, instead of adding the 5th photo showing the car from the front select one with another angle.\n* Any variation of the car can be added here (stock, tuned, prototype), as long as it is from the same generation.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Models" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Car Model`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 2740
      } ]
    },
    "/car-models/{car_model_id}/online-articles" : {
      "get" : {
        "tags" : [ "Car Models" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Car Model`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      } ]
    },
    "/car-models/{car_model_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Car Models" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Car Model`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Models" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Car Model`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40557
      } ]
    },
    "/car-models/{car_model_id}/videos" : {
      "get" : {
        "tags" : [ "Car Models" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Car Model`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      } ]
    },
    "/car-models/{car_model_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Car Models" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Car Model`.\n\n**Guidelines**\n* Only select videos that deal with this car model in general, or the whole generation. \n* If it's about about a specific version of this model then please add the video to the matching `Car Model Variant`.\n* The format of the video is more or less open. It can be a commercial, teaser or trailer (official, fan-made, mood), a discussion, an unveiling at a car show, a history lesson etc.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Models" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Car Model`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40520
      } ]
    },
    "/car-model-variants" : {
      "get" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Returns a collection of all `Car Model Variants` that are stored in the *More Cars* database.  If the collection is too large it will chunked after 24 items (default).  Use the \"page\" parameter to fetch the remaining nodes.",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "description" : "pagination",
          "schema" : {
            "type" : "integer"
          },
          "example" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model_Variant"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Creates a new `Car Model Variant`.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Car_Model_Variant"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Car Model Variant successfully created",
            "headers" : {
              "Location" : {
                "description" : "The URL of the created `Car Model Variant`",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "links" ],
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/Car_Model_Variant"
                    },
                    "links" : {
                      "required" : [ "self" ],
                      "type" : "object",
                      "properties" : {
                        "self" : {
                          "type" : "string",
                          "description" : "The URL of the created `Car Model Variant`",
                          "example" : "https://more-cars.net/911-996__1102"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "422" : {
            "$ref" : "#/components/responses/InvalidData"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      }
    },
    "/car-model-variants/{car_model_variant_id}" : {
      "get" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Returns a `Car Model Variant` specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Model_Variant"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "delete" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Deletes a `Car Model Variant`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/car-model" : {
      "get" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Returns the `Car Model` that this `Car Model Variant` is derived from.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Model"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/car-model/{car_model_id}" : {
      "post" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Connects an existing `Car Model` to the specified `Car Model Variant`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Disconnects a `Car Model` from the specified `Car Model Variant`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "description" : "Status 401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/401_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      }, {
        "name" : "car_model_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 390
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/car-magazine-issues" : {
      "get" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Returns all `Car Magazine Issues` where the specified `Car Model Variant` has been presented.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine_Issue"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/car-magazine-issues/{car_magazine_issue_id}" : {
      "post" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Connects an existing `Car Magazine Issue` to the specified `Car Model Variant`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "description" : "Status 401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/401_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Disconnects a `Car Magazine Issue` from the specified `Car Model Variant`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "description" : "Status 401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/401_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      }, {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 1210
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/car-programme-episodes" : {
      "get" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Returns all `Car Programme Episodes` where the specified `Car Model Variant` has been presented.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme_Episode"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/car-programme-episodes/{car_programme_episode_id}" : {
      "post" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Connects an existing `Car Programme Episode` to the specified `Car Model Variant`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "description" : "Status 401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/401_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Model Variants" ],
        "description" : "Disconnects a `Car Programme Episode` from the specified `Car Model Variant`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "description" : "Status 401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/401_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      }, {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 17798
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/images" : {
      "get" : {
        "tags" : [ "Car Model Variants" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Car Model Variant`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Car Model Variants" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Car Model Variant`.\n\n**Guidelines**\n* Only select images that match the specified variant. So, don't use photos that show a sedan or convertible version when adding photos for a `BMW M3 Coupe`.\n* The car should be in the focus. There can be other cars and people around, but the car itself should be clearly visible and should dominate the image.\n* The selected images should show the car from multiple angles. So, instead of adding the 5th photo showing the car from the front select one with another angle.",
        "responses" : {
          "204" : {
            "description" : "Status 204"
          },
          "401" : {
            "description" : "Status 401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/401_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Model Variants" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Car Model Variant`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Status 204"
          },
          "401" : {
            "description" : "Status 401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/401_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 2738
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/online-articles" : {
      "get" : {
        "tags" : [ "Car Model Variants" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Car Model Variant`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Car Model Variants" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Car Model Variant`.",
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Model Variants" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Car Model Variant`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Status 204"
          },
          "401" : {
            "description" : "Status 401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/401_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40556
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/videos" : {
      "get" : {
        "tags" : [ "Car Model Variants" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Car Model Variant`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      } ]
    },
    "/car-model-variants/{car_model_variant_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Car Model Variants" ],
        "summary" : "Connect Video",
        "description" : "Attaches an existing `Video` to the specified `Car Model Variant`.\n\n**Guidelines**\n* Only select videos that match the specified variant. So, when the video is about the convertible version of the BMW M3 don't add it to the coupe variant.\n* The car should be in the focus of the video, not just decoration.",
        "responses" : {
          "204" : {
            "description" : "Status 204"
          },
          "401" : {
            "description" : "Status 401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/401_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Model Variants" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Car Model Variant`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Status 204"
          },
          "401" : {
            "description" : "Status 401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/401_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Node not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/404_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_model_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 405
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 2762
      } ]
    },
    "/brands" : {
      "get" : {
        "tags" : [ "Brands" ],
        "description" : "Returns a collection of all `Brands` that are stored in the More Cars database.",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "example" : 1,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "required" : false,
          "example" : 10,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "example" : 100,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Brand"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/brands/{brand_id}" : {
      "get" : {
        "tags" : [ "Brands" ],
        "description" : "Returns a `Brand` specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Brand"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "brand_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/brands/{brand_id}/car-models" : {
      "get" : {
        "tags" : [ "Brands" ],
        "description" : "Returns all `Car Models` that the specified `Brand` has created.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "brand_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/brands/{brand_id}/company" : {
      "get" : {
        "tags" : [ "Brands" ],
        "description" : "Returns the `Company` that owns the specified `Brand`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "brand_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/brands/{brand_id}/country" : {
      "get" : {
        "tags" : [ "Brands" ],
        "description" : "Returns the `Country` from which the `Brand` originates.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Country"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "brand_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/brands/{brand_id}/images" : {
      "get" : {
        "tags" : [ "Brands" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Brand`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "brand_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 319
      } ]
    },
    "/brands/{brand_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Brands" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Brand`.\n**Guidelines**\n* Only add photos that show the brand's logo.\n* This can be a close-up shot of the car's bonnet, the logo on the engine block, a photo of a billboard or something similar.\n* There may be more to see in the photo, but the logo has to be dominant.\n* Don't add illustrations or the original logo files. This could lead to trademark problems.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Brands" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Brand`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "brand_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 319
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 2123
      } ]
    },
    "/brands/{brand_id}/online-articles" : {
      "get" : {
        "tags" : [ "Brands" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Brand`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "brand_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 319
      } ]
    },
    "/brands/{brand_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Brands" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Brand`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Brands" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Brand`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "brand_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 319
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40557
      } ]
    },
    "/brands/{brand_id}/videos" : {
      "get" : {
        "tags" : [ "Brands" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Brand`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "brand_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 319
      } ]
    },
    "/brands/{brand_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Brands" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Brand`.\n**Guidelines**\n* All videos are permitted that somehow deal with the history (or the current state) of the brand.\n* This can be a documentation, an interview, a discussion panel. \n* It can be a video that presents/summarizes/categorizes the brand's whole range of cars.\n* It can be a marketing/promotion video from the brand itself.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Brands" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Brand`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "brand_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 319
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40520
      } ]
    },
    "/companies" : {
      "get" : {
        "tags" : [ "Companies" ],
        "description" : "Returns a collection of all `Companies` that are stored in the More Cars database.",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "example" : 1,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "required" : false,
          "example" : 10,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "example" : 100,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Company"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companies/{company_id}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "description" : "Returns a `Company`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "company_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/companies/{company_id}/brands" : {
      "get" : {
        "tags" : [ "Companies" ],
        "description" : "Returns all `Brands` that belong to the specified `Company`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "company_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/companies/{company_id}/country" : {
      "get" : {
        "tags" : [ "Companies" ],
        "description" : "Returns the `Country` from which the `Company` originates.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Country"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "company_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/companies/{company_id}/country-hq" : {
      "get" : {
        "tags" : [ "Companies" ],
        "description" : "Returns the `Country` where the `Company` has it's legal headquarter.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Country"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "company_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/companies/{company_id}/images" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Company`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "company_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 52
      } ]
    },
    "/companies/{company_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Companies" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Company`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Companies" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Company`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "company_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 52
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 2409
      } ]
    },
    "/companies/{company_id}/online-articles" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Company`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "company_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 52
      } ]
    },
    "/companies/{company_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Companies" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Company`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Companies" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Company`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "company_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 52
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28209
      } ]
    },
    "/companies/{company_id}/videos" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Company`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "company_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 52
      } ]
    },
    "/companies/{company_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Companies" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Company`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Companies" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Company`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "company_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 52
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28193
      } ]
    },
    "/car-magazines" : {
      "get" : {
        "tags" : [ "Car Magazines" ],
        "description" : "Returns a collection of all `Car Magazines` that are stored in the More Cars database.",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "example" : 1,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "required" : false,
          "example" : 10,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "example" : 100,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/car-magazines/{car_magazine_id}" : {
      "get" : {
        "tags" : [ "Car Magazines" ],
        "description" : "Returns a `Car Magazine` specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Magazine"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-magazines/{car_magazine_id}/car-magazine-issues" : {
      "get" : {
        "tags" : [ "Car Magazines" ],
        "description" : "Returns all `Car Magazine Issues` that were created by the specified `Car Magazine`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine_Issue"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-magazines/{car_magazine_id}/country" : {
      "get" : {
        "tags" : [ "Car Magazines" ],
        "description" : "Returns the `Country` from which the `Car Magazine` originates.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Country"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-magazines/{car_magazine_id}/images" : {
      "get" : {
        "tags" : [ "Car Magazines" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Car Magazine`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      } ]
    },
    "/car-magazines/{car_magazine_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Car Magazines" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Car Magazine`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Magazines" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Car Magazine`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_magazine_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 6437
      } ]
    },
    "/car-magazines/{car_magazine_id}/online-articles" : {
      "get" : {
        "tags" : [ "Car Magazines" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Car Magazine`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      } ]
    },
    "/car-magazines/{car_magazine_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Car Magazines" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Car Magazine`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Magazines" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Car Magazine`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_magazine_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28194
      } ]
    },
    "/car-magazines/{car_magazine_id}/videos" : {
      "get" : {
        "tags" : [ "Car Magazines" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Car Magazine`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      } ]
    },
    "/car-magazines/{car_magazine_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Car Magazines" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Car Magazine`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Magazines" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Car Magazine`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_magazine_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28210
      } ]
    },
    "/car-magazine-issues" : {
      "get" : {
        "tags" : [ "Car Magazine Issues" ],
        "description" : "Returns a collection of all `Car Magazine Issues` that are stored in the More Cars database.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine_Issue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/car-magazine-issues/{car_magazine_issue_id}" : {
      "get" : {
        "tags" : [ "Car Magazine Issues" ],
        "description" : "Returns a `Car Magazine Issue` specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Magazine_Issue"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-magazine-issues/{car_magazine_issue_id}/car-magazine" : {
      "get" : {
        "tags" : [ "Car Magazine Issues" ],
        "description" : "Returns the `Car Magazine` this `Car Magazine Issue` belongs to.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Magazine"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-magazine-issues/{car_magazine_issue_id}/car-model-variants" : {
      "get" : {
        "tags" : [ "Car Magazine Issues" ],
        "description" : "Returns all `Car Model Variants` that have been featured in the specified `Car Magazine Issue`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-magazine-issues/{car_magazine_issue_id}/car-models" : {
      "get" : {
        "tags" : [ "Car Magazine Issues" ],
        "description" : "Returns all `Car Models` that have been featured in the specified `Car Magazine Issue`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-magazine-issues/{car_magazine_issue_id}/successor" : {
      "get" : {
        "tags" : [ "Car Magazine Issues" ],
        "description" : "Returns the next issue of this `Car Magazine Issue`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Magazine_Issue"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-magazine-issues/{car_magazine_issue_id}/predecessor" : {
      "get" : {
        "tags" : [ "Car Magazine Issues" ],
        "description" : "Returns the previous issue of this `Car Magazine Issue`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Magazine_Issue"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-magazines/{car_magazine_issue_id}/images" : {
      "get" : {
        "tags" : [ "Car Magazine Issues" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Car Magazine Issue`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      } ]
    },
    "/car-magazines/{car_magazine_issue_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Car Magazine Issues" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Car Magazine Issue`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Magazine Issues" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Car Magazine Issue`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21028
      } ]
    },
    "/car-magazines/{car_magazine_issue_id}/online-articles" : {
      "get" : {
        "tags" : [ "Car Magazine Issues" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Car Magazine Issue`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      } ]
    },
    "/car-magazines/{car_magazine_issue_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Car Magazine Issues" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Car Magazine Issue`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Magazine Issues" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Car Magazine Issue`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28194
      } ]
    },
    "/car-magazines/{car_magazine_issue_id}/videos" : {
      "get" : {
        "tags" : [ "Car Magazine Issues" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Car Magazine Issue`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      } ]
    },
    "/car-magazines/{car_magazine_issue_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Car Magazine Issues" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Car Magazine Issue`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Magazine Issues" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Car Magazine Issue`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_magazine_issue_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 910
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 25155
      } ]
    },
    "/car-programmes" : {
      "get" : {
        "tags" : [ "Car Programmes" ],
        "description" : "Returns a collection of all `Car Programmes` that are stored in the More Cars database.",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "example" : 1,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "per_page",
          "in" : "query",
          "required" : false,
          "example" : 10,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "example" : 100,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/car-programmes/{car_programme_id}" : {
      "get" : {
        "tags" : [ "Car Programmes" ],
        "description" : "Returns a `Car Programme` specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Programme"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-programmes/{car_programme_id}/car-programme-episodes" : {
      "get" : {
        "tags" : [ "Car Programmes" ],
        "description" : "Returns all `Car Magazine Episodes` that were produced by the specified `Car Programme`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme_Episode"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-programmes/{car_programme_id}/country" : {
      "get" : {
        "tags" : [ "Car Programmes" ],
        "description" : "Returns the `Country` from which the `Car Programme` originates.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Country"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-programmes/{car_programme_id}/images" : {
      "get" : {
        "tags" : [ "Car Programmes" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Car Programme`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40
      } ]
    },
    "/car-programmes/{car_programme_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Car Programmes" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Car Programme`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Programmes" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Car Programme`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_programme_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 4701
      } ]
    },
    "/car-programmes/{car_programme_id}/online-articles" : {
      "get" : {
        "tags" : [ "Car Programmes" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Car Programme`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40
      } ]
    },
    "/car-programmes/{car_programme_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Car Programmes" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Car Programme`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Programmes" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Car Programme`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_programme_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 25957
      } ]
    },
    "/car-programmes/{car_programme_id}/videos" : {
      "get" : {
        "tags" : [ "Car Programmes" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Car Programme`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40
      } ]
    },
    "/car-programmes/{car_programme_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Car Programmes" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Car Programme`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Programmes" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Car Programme`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_programme_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 9117
      } ]
    },
    "/car-programme-episodes" : {
      "get" : {
        "tags" : [ "Car Programme Episodes" ],
        "description" : "Returns a collection of all `Car Programme Episodes` that are stored in the More Cars database.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme_Episode"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          }
        }
      }
    },
    "/car-programme-episodes/{car_programme_episode_id}" : {
      "get" : {
        "tags" : [ "Car Programme Episodes" ],
        "description" : "Returns a `Car Programme Episode` specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Programme_Episode"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-programme-episodes/{car_programme_episode_id}/car-programme" : {
      "get" : {
        "tags" : [ "Car Programme Episodes" ],
        "description" : "Returns the `Car Programme` the specified `Car Programme Episode` belongs to.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Programme"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-programme-episodes/{car_programme_episode_id}/successor" : {
      "get" : {
        "tags" : [ "Car Programme Episodes" ],
        "description" : "Returns the successor of the specified `Car Programme Episode`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Programme_Episode"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-programme-episodes/{car_programme_episode_id}/predecessor" : {
      "get" : {
        "tags" : [ "Car Programme Episodes" ],
        "description" : "Returns the predecessor of the specified `Car Programme Episode`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Programme_Episode"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-programme-episodes/{car_programme_episode_id}/car-models" : {
      "get" : {
        "tags" : [ "Car Programme Episodes" ],
        "description" : "Returns all `Car Models` that were presented in the specified `Car Programme Episode`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-programme-episodes/{car_programme_episode_id}/car-model-variants" : {
      "get" : {
        "tags" : [ "Car Programme Episodes" ],
        "description" : "Returns all `Car Model Variants` that were presented in the specified `Car Programme Episode`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/car-programme-episodes/{car_programme_episode_id}/images" : {
      "get" : {
        "tags" : [ "Car Programme Episodes" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Car Programme Episode`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 2086
      } ]
    },
    "/car-programme-episodes/{car_programme_episode_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Car Programme Episodes" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Car Programme Episode`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Programme Episodes" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Car Programme Episode`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 2086
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 4701
      } ]
    },
    "/car-programme-episodes/{car_programme_episode_id}/online-articles" : {
      "get" : {
        "tags" : [ "Car Programme Episodes" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Car Programme Episode`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 2086
      } ]
    },
    "/car-programme-episodes/{car_programme_episode_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Car Programme Episodes" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Car Programme Episode`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Programme Episodes" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Car Programme Episode`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 2086
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 25957
      } ]
    },
    "/car-programme-episodes/{car_programme_episode_id}/videos" : {
      "get" : {
        "tags" : [ "Car Programme Episodes" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Car Programme Episode`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 2086
      } ]
    },
    "/car-programme-episodes/{car_programme_episode_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Car Programme Episodes" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Car Programme Episode`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Car Programme Episodes" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Car Programme Episode`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "car_programme_episode_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 2086
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 4252
      } ]
    },
    "/racing-games" : {
      "get" : {
        "tags" : [ "Racing Games" ],
        "description" : "Returns a collection of all `Racing Games` that are stored in the More Cars database.",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "description" : "pagination parameter",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Game"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          }
        }
      }
    },
    "/racing-games/{racing_game_id}" : {
      "get" : {
        "tags" : [ "Racing Games" ],
        "description" : "Returns a `Racing Game`, specified by its ID",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Racing_Game"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_game_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-games/{racing_game_id}/car-model-variants" : {
      "get" : {
        "tags" : [ "Racing Games" ],
        "description" : "Returns all `Car Model Variants` that are represented in the specified `Racing Game`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_game_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-games/{racing_game_id}/gaming-platforms" : {
      "get" : {
        "tags" : [ "Racing Games" ],
        "description" : "Returns all `Gaming Platforms` the specified `Racing Game` is available for.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Gaming_Platform"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_game_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-games/{racing_game_id}/images" : {
      "get" : {
        "tags" : [ "Racing Games" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Racing Game`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_game_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21740
      } ]
    },
    "/racing-games/{racing_game_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Racing Games" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Racing Game`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Games" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Racing Game`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_game_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21740
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 14950
      } ]
    },
    "/racing-games/{racing_game_id}/online-articles" : {
      "get" : {
        "tags" : [ "Racing Games" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Racing Game`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_game_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21740
      } ]
    },
    "/racing-games/{racing_game_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Racing Games" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Racing Game`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Games" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Racing Game`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_game_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21740
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 25742
      } ]
    },
    "/racing-games/{racing_game_id}/videos" : {
      "get" : {
        "tags" : [ "Racing Games" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Racing Game`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_game_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21740
      } ]
    },
    "/racing-games/{racing_game_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Racing Games" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Racing Game`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Games" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Racing Game`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_game_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21740
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 23374
      } ]
    },
    "/gaming-platforms" : {
      "get" : {
        "tags" : [ "Gaming Platforms" ],
        "description" : "Returns a collection of all `Gaming Platforms` that are stored in the More Cars database.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Gaming_Platform"
                  },
                  "minItems" : 1,
                  "maxItems" : 50
                }
              }
            }
          }
        }
      }
    },
    "/gaming-platforms/{gaming_platform_id}" : {
      "get" : {
        "tags" : [ "Gaming Platforms" ],
        "description" : "Returns a `Gaming Platform`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Gaming_Platform"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "gaming_platform_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/gaming-platforms/{gaming_platform_id}/racing-games" : {
      "get" : {
        "tags" : [ "Gaming Platforms" ],
        "description" : "Returns all `Racing Games` that are available for the specified `Gaming Platform`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Game"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "gaming_platform_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/gaming-platforms/{gaming_platform_id}/images" : {
      "get" : {
        "tags" : [ "Gaming Platforms" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Gaming Platform`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "gaming_platform_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 14389
      } ]
    },
    "/gaming-platforms/{gaming_platform_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Gaming Platforms" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Gaming Platform`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Gaming Platforms" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Gaming Platform`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "gaming_platform_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 14389
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 25814
      } ]
    },
    "/gaming-platforms/{gaming_platform_id}/online-articles" : {
      "get" : {
        "tags" : [ "Gaming Platforms" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Gaming Platform`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "gaming_platform_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 14389
      } ]
    },
    "/gaming-platforms/{gaming_platform_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Gaming Platforms" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Gaming Platform`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Gaming Platforms" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Gaming Platform`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "gaming_platform_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 14389
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 25987
      } ]
    },
    "/gaming-platforms/{gaming_platform_id}/videos" : {
      "get" : {
        "tags" : [ "Gaming Platforms" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Gaming Platform`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "gaming_platform_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 14389
      } ]
    },
    "/gaming-platforms/{gaming_platform_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Gaming Platforms" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Gaming Platform`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Gaming Platforms" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Gaming Platform`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "gaming_platform_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 14389
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 14465
      } ]
    },
    "/racing-series" : {
      "get" : {
        "tags" : [ "Racing Series" ],
        "description" : "Returns a collection of all `Racing Series` that are stored in the More Cars database.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Series"
                  },
                  "minItems" : 1,
                  "maxItems" : 50
                }
              }
            }
          }
        }
      }
    },
    "/racing-series/{racing_series_id}" : {
      "get" : {
        "tags" : [ "Racing Series" ],
        "description" : "Returns a `Racing Series`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Racing_Series"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_series_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-series/{racing_series_id}/racing-events" : {
      "get" : {
        "tags" : [ "Racing Series" ],
        "description" : "Returns all `Racing Events` that took place in the specified `Racing Series`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Event"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_series_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-series/{racing_series_id}/country" : {
      "get" : {
        "tags" : [ "Racing Series" ],
        "description" : "Returns the `Country` (market) the specified `Racing Series` is made for.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Country"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_series_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-series/{racing_series_id}/images" : {
      "get" : {
        "tags" : [ "Racing Series" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Racing Series`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_series_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 310
      } ]
    },
    "/racing-series/{racing_series_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Racing Series" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Racing Series`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Series" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Racing Series`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_series_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 310
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 19288
      } ]
    },
    "/racing-series/{racing_series_id}/online-articles" : {
      "get" : {
        "tags" : [ "Racing Series" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Racing Series`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_series_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 310
      } ]
    },
    "/racing-series/{racing_series_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Racing Series" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Racing Series`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Series" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Racing Series`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_series_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 310
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40728
      } ]
    },
    "/racing-series/{racing_series_id}/videos" : {
      "get" : {
        "tags" : [ "Racing Series" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Racing Series`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_series_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 310
      } ]
    },
    "/racing-series/{racing_series_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Racing Series" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Racing Series`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Series" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Racing Series`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_series_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 310
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 25988
      } ]
    },
    "/racing-events" : {
      "get" : {
        "tags" : [ "Racing Events" ],
        "description" : "Returns a collection of all `Racing Series` that are stored in the More Cars database.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Series"
                  },
                  "minItems" : 1,
                  "maxItems" : 50
                }
              }
            }
          }
        }
      }
    },
    "/racing-events/{racing_event_id}" : {
      "get" : {
        "tags" : [ "Racing Events" ],
        "description" : "Returns a `Racing Series`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Racing_Series"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-events/{racing_event_id}/racing-series" : {
      "get" : {
        "tags" : [ "Racing Events" ],
        "description" : "Returns the `Racing Series` to which the specified `Racing Event` belongs.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Series"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-events/{racing_event_id}/race-track-variant" : {
      "get" : {
        "tags" : [ "Racing Events" ],
        "description" : "Returns the `Race Track Variant` at which the specified `Racing Event` took place.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Track_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-events/{racing_event_id}/racing-event-sessions" : {
      "get" : {
        "tags" : [ "Racing Events" ],
        "description" : "Returns all `Racing Event Sessions` that were held in the specified `Racing Event`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Event_Session"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-events/{racing_event_id}/images" : {
      "get" : {
        "tags" : [ "Racing Events" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Racing Events`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21914
      } ]
    },
    "/racing-events/{racing_event_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Racing Events" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Racing Events`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Events" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Racing Events`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_event_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21914
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 19288
      } ]
    },
    "/racing-events/{racing_event_id}/online-articles" : {
      "get" : {
        "tags" : [ "Racing Events" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Racing Events`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21914
      } ]
    },
    "/racing-events/{racing_event_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Racing Events" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Racing Events`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Events" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Racing Events`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_event_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21914
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 25989
      } ]
    },
    "/racing-events/{racing_event_id}/videos" : {
      "get" : {
        "tags" : [ "Racing Events" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Racing Events`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21914
      } ]
    },
    "/racing-events/{racing_event_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Racing Events" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Racing Events`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Events" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Racing Events`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_event_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 21914
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 23647
      } ]
    },
    "/racing-event-sessions" : {
      "get" : {
        "tags" : [ "Racing Event Sessions" ],
        "description" : "Returns a collection of all `Racing Event Sessions` that are stored in the More Cars database.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Event_Session"
                  },
                  "minItems" : 1,
                  "maxItems" : 50
                }
              }
            }
          }
        }
      }
    },
    "/racing-event-sessions/{racing_event_session_id}" : {
      "get" : {
        "tags" : [ "Racing Event Sessions" ],
        "description" : "Returns a `Racing Event Session`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Racing_Event_Session"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_session_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-event-sessions/{racing_event_session_id}/racing-event" : {
      "get" : {
        "tags" : [ "Racing Event Sessions" ],
        "description" : "Returns the `Racing Event` to which the specified `Racing Event Session` belongs to.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Racing_Event"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_session_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-event-sessions/{racing_event_session_id}/race-results" : {
      "get" : {
        "tags" : [ "Racing Event Sessions" ],
        "description" : "Returns all `Race Results` for the specified `Racing Event Session`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Result"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_session_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/racing-event-sessions/{racing_event_session_id}/images" : {
      "get" : {
        "tags" : [ "Racing Event Sessions" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Racing Event Sessions`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_session_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 22404
      } ]
    },
    "/racing-event-sessions/{racing_event_session_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Racing Event Sessions" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Racing Event Sessions`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Event Sessions" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Racing Event Sessions`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_event_session_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 22404
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 15330
      } ]
    },
    "/racing-event-sessions/{racing_event_session_id}/online-articles" : {
      "get" : {
        "tags" : [ "Racing Event Sessions" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Racing Event Sessions`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_session_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 22404
      } ]
    },
    "/racing-event-sessions/{racing_event_session_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Racing Event Sessions" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Racing Event Sessions`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Event Sessions" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Racing Event Sessions`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_event_session_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 22404
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 40748
      } ]
    },
    "/racing-event-sessions/{racing_event_session_id}/videos" : {
      "get" : {
        "tags" : [ "Racing Event Sessions" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Racing Event Sessions`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "racing_event_session_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 22404
      } ]
    },
    "/racing-event-sessions/{racing_event_session_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Racing Event Sessions" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Racing Event Sessions`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Racing Event Sessions" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Racing Event Sessions`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "racing_event_session_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 22404
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28091
      } ]
    },
    "/race-results" : {
      "get" : {
        "tags" : [ "Race Results" ],
        "description" : "Returns a collection of all `Race Results` that are stored in the More Cars database.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Result"
                  },
                  "minItems" : 1,
                  "maxItems" : 50
                }
              }
            }
          }
        }
      }
    },
    "/race-results/{race_result_id}" : {
      "get" : {
        "tags" : [ "Race Results" ],
        "description" : "Returns a `Race Result`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Race_Result"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_result_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/race-results/{race_result_id}/racing-event-session" : {
      "get" : {
        "tags" : [ "Race Results" ],
        "description" : "Returns the `Racing Event Session` to which the specified `Race Result` belongs to.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Racing_Event_Session"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_result_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/race-results/{race_result_id}/car-model-variant" : {
      "get" : {
        "tags" : [ "Race Results" ],
        "description" : "Returns the `Car Model Variation` in which this `Race Result` has been achieved.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Car_Model_Variant"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_result_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/race-results/{race_result_id}/images" : {
      "get" : {
        "tags" : [ "Race Results" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Race Results`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_result_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 27376
      } ]
    },
    "/race-results/{race_result_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Race Results" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Race Results`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Race Results" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Race Results`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "race_result_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 27376
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/race-results/{race_result_id}/online-articles" : {
      "get" : {
        "tags" : [ "Race Results" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Race Results`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_result_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 27376
      } ]
    },
    "/race-results/{race_result_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Race Results" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Race Results`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Race Results" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Race Results`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "race_result_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 27376
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/race-results/{race_result_id}/videos" : {
      "get" : {
        "tags" : [ "Race Results" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Race Results`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_result_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 27376
      } ]
    },
    "/race-results/{race_result_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Race Results" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Race Results`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Race Results" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Race Results`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "race_result_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 27376
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/race-tracks" : {
      "get" : {
        "tags" : [ "Race Tracks" ],
        "description" : "Returns a collection of all `Race Tracks` that are stored in the More Cars database.",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "description" : "pagination parameter",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Track"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          }
        }
      }
    },
    "/race-tracks/{race_track_id}" : {
      "get" : {
        "tags" : [ "Race Tracks" ],
        "description" : "Returns a `Race  Track`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Race_Track"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/race-tracks/{race_track_id}/race-track-variants" : {
      "get" : {
        "tags" : [ "Race Tracks" ],
        "description" : "Returns all `Race Track Variants` that exist of the specified `Race Track`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Track_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/race-tracks/{race_track_id}/country" : {
      "get" : {
        "tags" : [ "Race Tracks" ],
        "description" : "Returns the `Country` in which the specified `Race Track` is located.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Country"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/race-tracks/{race_track_id}/images" : {
      "get" : {
        "tags" : [ "Race Tracks" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Race Track`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28106
      } ]
    },
    "/race-tracks/{race_track_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Race Tracks" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Race Track`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Race Tracks" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Race Track`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "race_track_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28106
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 37567
      } ]
    },
    "/race-tracks/{race_track_id}/online-articles" : {
      "get" : {
        "tags" : [ "Race Tracks" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Race Track`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28106
      } ]
    },
    "/race-tracks/{race_track_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Race Tracks" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Race Track`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Race Tracks" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Race Track`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "race_track_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28106
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 34829
      } ]
    },
    "/race-tracks/{race_track_id}/videos" : {
      "get" : {
        "tags" : [ "Race Tracks" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Race Track`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28106
      } ]
    },
    "/race-tracks/{race_track_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Race Tracks" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Race Track`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Race Tracks" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Race Track`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "race_track_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 28106
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 37568
      } ]
    },
    "/race-track-variants" : {
      "get" : {
        "tags" : [ "Race Track Variants" ],
        "description" : "Returns a collection of all `Race Track Variants` that are stored in the More Cars database.",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "description" : "pagination parameter",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Track_Variant"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          }
        }
      }
    },
    "/race-track-variants/{race_track_variant_id}" : {
      "get" : {
        "tags" : [ "Race Track Variants" ],
        "description" : "Returns a `Race  Track Variant`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Race_Track_Variant"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/race-track-variants/{race_track_variant_id}/race-track" : {
      "get" : {
        "tags" : [ "Race Track Variants" ],
        "description" : "Returns the `Race Track` the specified `Race Track Variant` belongs to.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Race_Track"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/race-track-variants/{race_track_variant_id}/racing-events" : {
      "get" : {
        "tags" : [ "Race Track Variants" ],
        "description" : "Returns all `Racing Events` that took place at the specified `Race Track Variant`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Event"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/race-track-variants/{race_track_variant_id}/images" : {
      "get" : {
        "tags" : [ "Race Track Variants" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Race Track Variant`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 23961
      } ]
    },
    "/race-track-variants/{race_track_variant_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Race Track Variants" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Race Track Variant`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Race Track Variants" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Race Track Variant`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "race_track_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 23961
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 32856
      } ]
    },
    "/race-track-variants/{race_track_variant_id}/online-articles" : {
      "get" : {
        "tags" : [ "Race Track Variants" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Race Track Variant`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 23961
      } ]
    },
    "/race-track-variants/{race_track_variant_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Race Track Variants" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Race Track Variant`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Race Track Variants" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Race Track Variant`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "race_track_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 23961
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 34829
      } ]
    },
    "/race-track-variants/{race_track_variant_id}/videos" : {
      "get" : {
        "tags" : [ "Race Track Variants" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Race Track Variant`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "race_track_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 23961
      } ]
    },
    "/race-track-variants/{race_track_variant_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Race Track Variants" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Race Track Variant`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Race Track Variants" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Race Track Variant`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "race_track_variant_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 23961
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 37568
      } ]
    },
    "/countries" : {
      "get" : {
        "tags" : [ "Countries" ],
        "description" : "Returns a collection of all `Countries` that are stored in the More Cars database.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Country"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          }
        }
      }
    },
    "/countries/{country_id}" : {
      "get" : {
        "tags" : [ "Countries" ],
        "description" : "Returns a `Country`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Country"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/countries/{country_id}/brands" : {
      "get" : {
        "tags" : [ "Countries" ],
        "description" : "Returns all `Brands` that are from the specified `Country`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Brand"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/countries/{country_id}/companies" : {
      "get" : {
        "tags" : [ "Countries" ],
        "description" : "Returns all `Companies` that are located in the specified `Country`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Company"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/countries/{country_id}/car-magazines" : {
      "get" : {
        "tags" : [ "Countries" ],
        "description" : "vReturns all `Car Magazines` that are from the specified `Country`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/countries/{country_id}/car-programmes" : {
      "get" : {
        "tags" : [ "Countries" ],
        "description" : "Returns all `Car Programmes` that are from the specified `Country`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/countries/{country_id}/racing-series" : {
      "get" : {
        "tags" : [ "Countries" ],
        "description" : "Returns all `Racing Series` which have the specified `Country` as targeted market.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Series"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/countries/{country_id}/race-tracks" : {
      "get" : {
        "tags" : [ "Countries" ],
        "description" : "Returns all `Race Tracks` that are located in the specified `Country`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Track"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/countries/{country_id}/images" : {
      "get" : {
        "tags" : [ "Countries" ],
        "summary" : "Get connected Images",
        "description" : "Returns all `Images` that are attached to the specified `Country`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 67
      } ]
    },
    "/countries/{country_id}/images/{image_id}" : {
      "post" : {
        "tags" : [ "Countries" ],
        "summary" : "Connect Image",
        "description" : "Attaches an existing `Image` to the specified `Country`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Countries" ],
        "summary" : "Disconnect Image",
        "description" : "Disconnects an `Image` from the specified `Country`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 67
      }, {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 4980
      } ]
    },
    "/countries/{country_id}/online-articles" : {
      "get" : {
        "tags" : [ "Countries" ],
        "summary" : "Get connected Online Articles",
        "description" : "Returns all `Online Articles` that are attached to the specified `Country`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 67
      } ]
    },
    "/countries/{country_id}/online-articles/{online_article_id}" : {
      "post" : {
        "tags" : [ "Countries" ],
        "summary" : "Connect Online Article",
        "description" : "Attaches an existing `Online Article` to the specified `Country`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Countries" ],
        "summary" : "Disconnect Online Article",
        "description" : "Disconnects an `Online Article` from the specified `Country`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 67
      }, {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/countries/{country_id}/videos" : {
      "get" : {
        "tags" : [ "Countries" ],
        "summary" : "Get connected Videos",
        "description" : "Returns all `Videos` that are attached to the specified `Country`.",
        "responses" : {
          "200" : {
            "description" : "Node collection was successfully loaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 67
      } ]
    },
    "/countries/{country_id}/videos/{video_id}" : {
      "post" : {
        "tags" : [ "Countries" ],
        "summary" : "Connect Video",
        "description" : "Attachs an existing `Video` to the specified `Country`.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully connected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Countries" ],
        "summary" : "Disconnect Video",
        "description" : "Disconnects a `Video` from the specified `Country`. 🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Node was successfully disconnected"
          },
          "401" : {
            "$ref" : "#/components/responses/NotAuthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "country_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "example" : 67
      }, {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns a collection of all `Images` that are stored in the More Cars database.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Images" ],
        "description" : "Adds a new `Image` to the More Cars database.\n\n**General**\n* They must be under Creative Commons license (see above).\n* Image must be car-related\n* Image should fit to an existing node (e.g. a `Car Model Vaiation` or a `Brand`)\n* Image should be freely available, not locked behind a paywall\n* Image must be under Creative Commons license (see above).\n\n**Flickr and Wikimedia images**\n* The following shortcut is available:\n  * Only the fields `image_platform` and `image_platform_id` need to be supplied to the request.\n  * Author and licence information will be gathered automatically.\n* Duplicate images will not be accepted by the system.\n* Images with invalid ID will not be accepted by the system.",
        "responses" : {
          "201" : {
            "description" : "Image successfully created",
            "headers" : {
              "Location" : {
                "description" : "The URL of the created `Image`",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "links" ],
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/Image"
                    },
                    "links" : {
                      "required" : [ "self" ],
                      "type" : "object",
                      "properties" : {
                        "self" : {
                          "type" : "string",
                          "description" : "The URL of the created `Image`"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authorization information missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/InvalidData"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Image"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/images/{image_id}" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns an `Image`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Image"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "delete" : {
        "tags" : [ "Images" ],
        "description" : "Deletes an `Image` from the More Cars database.\n\n🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Image successfully deleted"
          },
          "401" : {
            "description" : "Authorization information missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient permissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Image not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/car-models" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Car Models` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/car-model-variants" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Car Model Variants` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/brands" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Brands` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Brand"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/companies" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Companies` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Company"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/car-magazines" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Car Magazines` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/car-magazine-issues" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Car Magazine Issues` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine_Issue"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/car-programmes" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Car Programmes` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/car-programme-episodes" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Car Programme Episodes` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme_Episode"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/countries" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Countries` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Country"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/racing-series" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Racing Series` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Series"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/racing-events" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Racing Events` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Event"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/racing-event-sessions" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Racing Event Sessions` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Event_Session"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/race-results" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Race Results` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Result"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/race-tracks" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Race Tracks` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Track"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/race-track-variants" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Race Track Variants` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Track_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/racing-games" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Racing Games` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Game"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/gaming-platforms" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Gaming Platforms` that have the specified `Image` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Gaming_Platform"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/images/{image_id}/online-articles" : {
      "get" : {
        "tags" : [ "Images" ],
        "description" : "Returns all `Online Articles` that are attached to the specified `Image`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "image_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns a collection of all `Online Articles` that are stored in the More Cars database.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 1,
                  "maxItems" : 50
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Online Articles" ],
        "description" : "Adds a new `Online Article` to the More Cars database.",
        "responses" : {
          "201" : {
            "description" : "Online Article successfully created",
            "headers" : {
              "Location" : {
                "description" : "The URL of the created `Online Article`",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "links" ],
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/Online_Article"
                    },
                    "links" : {
                      "required" : [ "self" ],
                      "type" : "object",
                      "properties" : {
                        "self" : {
                          "type" : "string",
                          "description" : "The URL of the created `Online Article`"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authorization information missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Online_Article"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/online-articles/{online_article_id}" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns an `Online Article`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Online_Article"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "delete" : {
        "tags" : [ "Online Articles" ],
        "description" : "Deletes an `Online Article` from the More Cars database.\n\n🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Online Article successfully deleted"
          },
          "401" : {
            "description" : "Authorization information missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient permissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Online Article not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/images" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Images` that are attached to the specified `Online Article`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/videos" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Videos` that are attached to the specified `Online Article`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/car-models" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Car Models` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/car-model-variants" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Car Model Variants` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/brands" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Brands` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Brand"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/companies" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Companies` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Company"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/car-magazines" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Car Magazines` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/car-magazine-issues" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Car Magazine Issues` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine_Issue"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/car-programmes" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Car Programmes` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/car-programme-episodes" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Car Programme Episodes` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme_Episode"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/countries" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Countries` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Country"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/racing-series" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Racing Series` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Series"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/racing-events" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Racing Events` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Event"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/racing-event-sessions" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Racing Event Sessions` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Event_Session"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/race-results" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Race Results` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Result"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/race-tracks" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Race Tracks` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Track"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/race-track-variants" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Race Track Variants` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Track_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/racing-games" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Racing Games` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Game"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/online-articles/{online_article_id}/gaming-platforms" : {
      "get" : {
        "tags" : [ "Online Articles" ],
        "description" : "Returns all `Gaming Platforms` that have the specified `Online Article` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Gaming_Platform"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "online_article_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns a collection of all `Videos` that are stored in the More Cars database.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Video"
                  },
                  "minItems" : 1,
                  "maxItems" : 50
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Videos" ],
        "description" : "Adds a new `Video` to the More Cars database.\n\n**General**\n* Video must be car-related\n* Video should fit to an existing node (e.g. a `Car Model` or a `Car Programme Episode`)\n* Video should be freely available, not locked behind a paywall\n* Video must be credited: creator and license information\n\n**YouTube videos**\n* The following shortcut is available:\n  * Only the fields `video_platform` and `video_platform_id` need to be supplied to the request.\n  * Author and licence information will be gathered automatically.\n* Duplicate videos will not be accepted by the system.\n* Videos with invalid ID will not be accepted by the system.",
        "responses" : {
          "201" : {
            "description" : "Video successfully created",
            "headers" : {
              "Location" : {
                "description" : "The URL of the created `Video`",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "links" ],
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/Video"
                    },
                    "links" : {
                      "required" : [ "self" ],
                      "type" : "object",
                      "properties" : {
                        "self" : {
                          "type" : "string",
                          "description" : "The URL of the created `Video`"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authorization information missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/InvalidData"
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video"
              }
            }
          },
          "required" : true
        }
      }
    },
    "/videos/{video_id}" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns a `Video`, specified by its ID.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "delete" : {
        "tags" : [ "Videos" ],
        "description" : "Deletes a `Video` from the More Cars database.\n\n🔒 Operation requires elevated permissions.",
        "responses" : {
          "204" : {
            "description" : "Video successfully deleted"
          },
          "401" : {
            "description" : "Authorization information missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient permissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Video not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/General_Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "Access_Token" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/car-models" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Car Models` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/car-model-variants" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Car Model Variants` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Model_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/brands" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Brands` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Brand"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/companies" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Companies` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Company"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/car-magazines" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Car Magazines` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/car-magazine-issues" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Car Magazine Issues` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Magazine_Issue"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/car-programmes" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Car Programmes` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/car-programme-episodes" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Car Programme Episodes` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Car_Programme_Episode"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/countries" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Countries` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Country"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/racing-series" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Racing Series` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Series"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/racing-events" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Racing Events` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Event"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/racing-event-sessions" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Racing Event Sessions` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Event_Session"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/race-results" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Race Results` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Result"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/race-tracks" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Race Tracks` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Track"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/race-track-variants" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Race Track Variants` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Race_Track_Variant"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/racing-games" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Racing Games` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Racing_Game"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/gaming-platforms" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Gaming Platforms` that have the specified `Video` attached to it.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Gaming_Platform"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/videos/{video_id}/online-articles" : {
      "get" : {
        "tags" : [ "Videos" ],
        "description" : "Returns all `Online Articles` that are attached to the specified `Video`.",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Online_Article"
                  },
                  "minItems" : 0,
                  "maxItems" : 24
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "video_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    }
  },
  "servers" : [ {
    "url" : "https://more-cars.net/api/v1"
  } ],
  "components" : {
    "responses" : {
      "NotAuthorized" : {
        "description" : "Authentication error. Credentials missing or invalid or insufficient.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/401_Error"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "Node not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/404_Error"
            }
          }
        }
      },
      "InvalidData" : {
        "description" : "Validation error. Data malformed or required information is missing.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/422_Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "Access_Token" : {
        "type" : "apiKey",
        "name" : "access-token",
        "in" : "header"
      }
    },
    "schemas" : {
      "Car_Model" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered.",
            "example" : 1102
          },
          "name" : {
            "type" : "string",
            "description" : "The official name of this model, respecting upper/lower case, whitespaces and special characters (e.g. \"cee'd\" or \"e-tron\").  The brand name is always omitted!",
            "example" : "911"
          },
          "generation" : {
            "type" : "integer",
            "description" : "When this model was build over multiple generations, which one is this?",
            "example" : 5
          },
          "code" : {
            "type" : "string",
            "description" : "The internal code of this model as given by the manufacturer.",
            "example" : "996"
          },
          "built_from" : {
            "type" : "integer",
            "description" : "What was the first year of production for this model?",
            "example" : 1997
          },
          "built_to" : {
            "type" : "integer",
            "description" : "What was the last year of production for this model?",
            "example" : 2005
          },
          "total_production" : {
            "type" : "integer",
            "description" : "When adding up all variations, how many units of this model (of this generation) were produced in total?",
            "example" : 175164
          }
        },
        "description" : "A `Car Model` represents one *generation* of a vehicle (e.g. *VW Golf VII* or *Ford Fiesta Mk2*). A generation usually last between 5 and 10 years and is built in multiple `Car Model Variants`. The variation can be in body style (coupe, station wagon, convertible), engine specification (gasoline, diesel, electric), transmission (manual, automatic), purpose (race car, police car, military vehicle) or other characteristics."
      },
      "Car_Model_Variant" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered.",
            "example" : 405
          },
          "name" : {
            "type" : "string",
            "description" : "The official name of this variant, respecting upper/lower case, whitespaces and special characters.",
            "example" : "Lamborghini Murciélago LP670-4 SV"
          },
          "code" : {
            "type" : "string",
            "description" : "The internal code name of this vehicle as given by the manufacturer. \nUsed to distinguish between multiple generations of one car model variant.\nSometimes the manufacturer gives each variant a different code.\nSometimes they have no code at all.",
            "example" : "E1234"
          },
          "built_from" : {
            "type" : "integer",
            "description" : "The year this car went into production.",
            "example" : 2009
          },
          "built_to" : {
            "type" : "integer",
            "description" : "The final year of production.",
            "example" : 2010
          },
          "body_style" : {
            "type" : "string",
            "description" : "Classification based on the the number of doors, seats, size and the overall shape of the car.",
            "enum" : [ "coupe", "convertible", "hatchback", "motorbike", "pickup truck", "offroad", "quad", "roadster", "sedan", "station wagon", "suv", "targa", "van", "truck", "other" ]
          },
          "cd" : {
            "type" : "number",
            "description" : "Drag coefficient. Also referred to as `cd value` or `cw value`.",
            "example" : 0.29
          },
          "doors" : {
            "type" : "integer",
            "description" : "The number of doors.",
            "example" : 2
          },
          "weight" : {
            "type" : "integer",
            "description" : "The official weight of this car, as provided by the manufacturer.",
            "example" : 1565
          },
          "weight_unit" : {
            "type" : "string",
            "enum" : [ "kg", "lbs" ]
          },
          "max_power" : {
            "type" : "integer",
            "description" : "The peak power output of this engine, as claimed by the manufacturer.",
            "example" : 670
          },
          "max_power_unit" : {
            "type" : "string",
            "enum" : [ "PS", "bhp", "kW" ]
          },
          "max_torque" : {
            "type" : "integer",
            "description" : "The peak torque of this engine, as claimed by the manufacturer.",
            "example" : 670
          },
          "max_torque_unit" : {
            "type" : "string",
            "enum" : [ "Nm", "lb ft" ]
          },
          "cylinders" : {
            "type" : "integer",
            "description" : "The number of cylinders (petrol or diesel engine) or rotors (wankel engine). (Only applicable to combustion engines.) example: 12"
          },
          "engine_configuration" : {
            "type" : "string",
            "description" : "The alignment of the cylinders resp. rotors. (Only applicable to combustion engines.)",
            "enum" : [ "Inline", "Flat", "V", "W", "H", "U", "Rotary", "Radial" ]
          },
          "displacement" : {
            "type" : "integer",
            "description" : "The size (volume) of all combustion chamber(s) combined. (Only applicable to combustion engines.)",
            "example" : 6496
          },
          "displacement_unit" : {
            "type" : "string",
            "enum" : [ "ccm", "cu in" ]
          },
          "charger" : {
            "type" : "string",
            "description" : "The method how the air is forced into the engine. (Only applicable to combustion engines.)",
            "enum" : [ "none", "turbo", "super" ]
          },
          "engine_type" : {
            "type" : "string",
            "description" : "The thermodynamic and/or physical principles the engine is build upon.  (The type of fuel is secondary.)",
            "enum" : [ "otto", "diesel", "wankel", "turbine", "hybrid", "electric", "other" ]
          },
          "energy_source" : {
            "type" : "string",
            "description" : "The type of 'fuel' this engine runs on.  For hybrid cars the primary engine is selected.",
            "enum" : [ "petrol", "diesel", "natural gas", "liquid gas", "hydrogen", "ethanol", "electricity", "other" ]
          },
          "energy_source_2" : {
            "type" : "string",
            "description" : "On what 'fuel' runs the second engine? (Only applicable to hybrid engines.)",
            "enum" : [ "petrol", "diesel", "natural gas", "liquid gas", "hydrogen", "ethanol", "electricity", "other" ]
          },
          "fuel_consumption" : {
            "type" : "number",
            "description" : "The official fuel (or energy) consumption of this car, as provided by the manufacturer.",
            "example" : 20.6
          },
          "fuel_consumption_unit" : {
            "type" : "string",
            "enum" : [ "l / 100 km", "mpg", "kWh / 100 km" ]
          },
          "energy_capacity" : {
            "type" : "number",
            "description" : "The capacity of the fuel tank (resp. the battery in case of an electric vehicle.)",
            "example" : 100
          },
          "energy_capacity_unit" : {
            "type" : "string",
            "enum" : [ "l", "kg", "kWh" ]
          },
          "energy_capacity_2" : {
            "type" : "number",
            "description" : "The capacity of the second fuel tank. (Only applicable to hybrid engines.)"
          },
          "energy_capacity_2_unit" : {
            "type" : "string",
            "enum" : [ "l", "kg", "kWh" ]
          },
          "transmission" : {
            "type" : "string",
            "description" : "The gearbox type.",
            "enum" : [ "manual", "sequential", "dual clutch", "direct", "cvt", "auto" ]
          },
          "gears" : {
            "type" : "integer",
            "description" : "The number of gears.",
            "example" : 6
          },
          "drivetrain" : {
            "type" : "string",
            "description" : "The wheel(s) to which the engine power is transferred.\n`All Wheel Drive` includes `4WD`, `AWD`, `IWD` and all the other variations that are on the market.",
            "enum" : [ "FWD", "RWD", "AWD" ]
          },
          "sprint_0_100" : {
            "type" : "number",
            "description" : "The acceleration time from 0 to 100 km/h, resp. 62 mph (in seconds), as claimed by the manufacturer",
            "example" : 3.2
          },
          "top_speed" : {
            "type" : "number",
            "description" : "The maximum speed (vmax) of the car, as claimed by the manufacturer.",
            "example" : 337
          },
          "top_speed_unit" : {
            "type" : "string",
            "enum" : [ "km/h", "mph" ]
          },
          "total_production" : {
            "type" : "integer",
            "description" : "The number of units that have been built of this car.",
            "example" : 350
          },
          "price" : {
            "type" : "number",
            "description" : "The base price of this model when it was introduced (incl. VAT).",
            "example" : 357000
          },
          "price_unit" : {
            "type" : "string",
            "enum" : [ "€", "$", "£", "DM", "¥" ]
          }
        }
      },
      "Brand" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the brand (e.g. `VW`).\nNot to be confused with the name of the company (e.g. `VW AG`). \nThe legal form is always omitted (no `AG`, `N.V.`, `Ltd.` or `GmbH`).\nThe official spelling is used (e.g. `MINI` instead of `Mini`).",
            "example" : "BMW"
          },
          "full_name" : {
            "type" : "string",
            "description" : "The long form of the brand's name (e.g. `VW` for `Volkswagen`).\nThis field is only set if the name is actually abbreviated (e.g. `Porsche` is not.)",
            "example" : "BMW -> Bayerische Motoren Werke"
          },
          "founded" : {
            "type" : "integer",
            "description" : "The year in which the brand has been created resp. introduced to the market. \nThis is not necessarily the year the company was founded. \nE.g.: The history of `Peugeot` goes back to `1810`, but they are building cars only since `1891`.",
            "minimum" : 1800,
            "maximum" : 2100
          },
          "defunct" : {
            "type" : "integer",
            "description" : "The final year the brand name was officially used (for a car).",
            "minimum" : 1800,
            "maximum" : 2100
          },
          "wmi" : {
            "type" : "string",
            "description" : "The WMI is a two- or three-character code that identifies the car manufacturer globally.\n`WMI` stands for `World Manufacturer Identifier` and is specified in `ISO 3780`. \nSome manufacturers have multiple WMIs, some have none at all.\nMultiple WMIs are separated by comma."
          },
          "hsn" : {
            "type" : "string",
            "description" : "`HSN` stands for `Herstellerschlüsselnummer` and is the German counterpart of the `WMI`.\nIt's a four-digit number that identifies the car manufacturer globally. \nSome manufacturers have multiple HSNs, some have none at all.\nMultiple HSNs are separated by comma.",
            "minLength" : 4,
            "maxLength" : 4,
            "pattern" : "[0-9][0-9][0-9][0-9]"
          }
        }
      },
      "Company" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "The official name of this car company, incl. the legal suffix (AG, SE, GmbH, N.V., Ltd)."
          },
          "founded" : {
            "type" : "integer"
          },
          "defunct" : {
            "type" : "integer"
          },
          "headquarter_city" : {
            "type" : "string",
            "description" : "The city in which the company has its (de facto) headquarter. \nThe English name should be used (if available), e.g. `Munich` instead of `München`."
          },
          "legal_headquarter_city" : {
            "type" : "string",
            "description" : "The city where the company has its official headquarter. (This should only be set when it differs from the de facto headquarter.)\n\nE.g.: `Ferrari` is an Italian company, based in `Maranello` but on paper they are a Dutch company, located in `Amsterdam`.\n\nThe English name should be used (if available), e.g. `Munich` instead of `München`."
          },
          "employees" : {
            "type" : "integer",
            "description" : "The number of employees that are working for this company."
          }
        }
      },
      "Car_Magazine" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string"
          },
          "founded" : {
            "type" : "integer"
          },
          "defunct" : {
            "type" : "integer"
          },
          "focus" : {
            "type" : "string",
            "enum" : [ "new cars", "classic cars", "sports cars", "tuned cars", "race cars", "american cars", "japanese cars", "brand specific", "other" ]
          },
          "issues_per_year" : {
            "type" : "integer",
            "description" : "The number of regular issues per year. Specials are excluded."
          },
          "single_copy_price" : {
            "type" : "number"
          },
          "single_copy_price_unit" : {
            "type" : "string"
          },
          "distribution" : {
            "type" : "string",
            "enum" : [ "print", "digital", "print_and_digital" ]
          },
          "circulation" : {
            "type" : "integer"
          },
          "publisher" : {
            "type" : "string"
          },
          "issn" : {
            "type" : "string"
          }
        }
      },
      "Car_Magazine_Issue" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "The title of this issue or - if not available - the main topic."
          },
          "number" : {
            "type" : "integer",
            "description" : "The issue's number as is printed on the cover. E.g. '9' for the September issue or '483' if the magazine is using consecutive numbering."
          },
          "year" : {
            "type" : "integer",
            "description" : "The year that is printed on the cover. This might vary from the real release date, e.g. issue '1/2010' could already have been released in December of 2009.",
            "minimum" : 1800,
            "maximum" : 2100
          },
          "release_date" : {
            "type" : "string",
            "format" : "date",
            "description" : "The official release date of the print version of this issue."
          },
          "single_copy_price" : {
            "type" : "number",
            "format" : "double",
            "description" : "The price for this issue on the domestic market, as printed on the cover, incl. VAT."
          },
          "single_copy_price_unit" : {
            "type" : "string"
          },
          "pages" : {
            "type" : "integer",
            "description" : "The total number of pages this issue has. This includes cover and flipside, but not booklets or flyers."
          }
        }
      },
      "Car_Programme" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "Title of the programme. Use the official spelling, e.g 'Top Gear' insted of 'TopGear' or 'GRIP' instead of 'Grip'."
          },
          "aired_from_year" : {
            "type" : "integer",
            "description" : "The first year the programme was broadcoasted."
          },
          "aired_to_year" : {
            "type" : "integer",
            "description" : "The final year of the programme."
          },
          "channel" : {
            "type" : "string",
            "description" : "On which channel does/did the programme run? Can be a classic TV station or an online channel."
          },
          "seasons" : {
            "type" : "integer",
            "description" : "The number of seasons (resp. series) until today."
          },
          "episodes" : {
            "type" : "integer",
            "description" : "The total number of episodes, across all seasons, until today, including specials, but not re-runs."
          },
          "running_time" : {
            "type" : "integer",
            "description" : "The regular length of one episode (in minutes). If it changed over time the running time of the latest episodes should be used."
          }
        }
      },
      "Car_Programme_Episode" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "The official name or title of this episode. \nAlternatively the main topic when there is no official title."
          },
          "season" : {
            "type" : "integer",
            "description" : "The season number this episode belongs to."
          },
          "season_episode" : {
            "type" : "integer",
            "description" : "The episode number within this season. (This is not the overall count!)"
          },
          "original_air_date" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date this episode was broadcasted for the very first time."
          },
          "duration" : {
            "type" : "string",
            "description" : "The length of this episode in minutes and seconds."
          }
        }
      },
      "Racing_Game" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered.",
            "minimum" : 1,
            "maximum" : 1000000,
            "example" : 3954
          },
          "name" : {
            "type" : "string",
            "description" : "The official name of this racing game.",
            "example" : "Need for Speed"
          },
          "release_year" : {
            "type" : "integer",
            "description" : "The year this game was released.",
            "minimum" : 1900,
            "maximum" : 2100,
            "example" : 1986
          },
          "developer" : {
            "type" : "string",
            "description" : "The name of the developer of this game.",
            "example" : "Kunos Simulazioni"
          },
          "publisher" : {
            "type" : "string",
            "description" : "The name of the publisher of this game.",
            "example" : "Sony Interactive Entertainment"
          }
        }
      },
      "Gaming_Platform" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered.",
            "minimum" : 1,
            "maximum" : 1000000,
            "example" : 3954
          },
          "name" : {
            "type" : "string",
            "description" : "The official name of this gaming platform.",
            "example" : "Xbox One"
          },
          "release_year" : {
            "type" : "integer",
            "description" : "The year this gaming platform was released."
          },
          "company" : {
            "type" : "string",
            "description" : "The company that created this gaming platform."
          }
        }
      },
      "Racing_Series" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "The official name of the series, in long form, not abbreviated.",
            "example" : "Formula 1"
          },
          "short_name" : {
            "type" : "string",
            "description" : "The abbreviation or short form of the series (if applicable).",
            "example" : "F1"
          },
          "founded" : {
            "type" : "integer",
            "description" : "The year the racing series started."
          },
          "defunct" : {
            "type" : "integer",
            "description" : "The final year of the racing series."
          },
          "organization" : {
            "type" : "string",
            "description" : "The governing body of this series.",
            "example" : "FIA"
          },
          "type" : {
            "type" : "string",
            "description" : "The kind of vehicle that are driven in this series.",
            "enum" : [ "formula racing cars", "touring cars", "sports cars", "production cars", "cup cars", "stock cars", "rally cars", "dragster", "go-karts", "historical cars", "trucks", "other" ]
          }
        }
      },
      "Racing_Event" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "The official name of this event. \nIn general a combination of the year, the racing series and the the location. \nMight also contain the main sponsor's name.",
            "example" : "2016 WTCC Race of Morocco"
          },
          "start_date" : {
            "type" : "string",
            "description" : "The first (official) day of the event."
          },
          "end_date" : {
            "type" : "string",
            "description" : "The last day of the event - usually the race day."
          }
        }
      },
      "Racing_Event_Session" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "example" : "Race"
          },
          "start_time" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The planned start date and time of the session.",
            "example" : "2017-09-03T14:00"
          },
          "duration" : {
            "type" : "number",
            "description" : "The planned length of the session. Can be a fixed time or a number of laps."
          },
          "duration_unit" : {
            "type" : "string",
            "enum" : [ "laps", "minutes", "hours" ]
          }
        }
      },
      "Race_Result" : {
        "type" : "object",
        "required" : [ "id", "name", "position" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal More Cars ID of this node. It’s generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string"
          },
          "position" : {
            "type" : "integer",
            "description" : "The final position of this car in this session."
          },
          "driver_number" : {
            "type" : "string",
            "description" : "The start number of the car, reps. the driver's number.",
            "example" : "77"
          },
          "driver_name" : {
            "type" : "string",
            "description" : "The full name of the driver."
          },
          "team_name" : {
            "type" : "string",
            "description" : "The full name of the team."
          },
          "race_time" : {
            "type" : "string",
            "description" : "Total time"
          },
          "fastest_lap_time" : {
            "type" : "string",
            "description" : "Driver's fastest lap in this session."
          },
          "points" : {
            "type" : "number",
            "description" : "The number of championship points earned in this session. \n                Depending on the regulations this can be based on the position, the fastest lap, malus points for fouls etc.",
            "example" : 25
          }
        }
      },
      "Race_Track" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "The official name of the race track.\nMight contain the name of the owner or a sponsor, like `Red Bull Ring`.\nThe most up to date name is used."
          },
          "opened" : {
            "type" : "integer"
          },
          "closed" : {
            "type" : "integer"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "permanent race track", "street circuit", "other" ]
          },
          "location" : {
            "type" : "string",
            "description" : "The city or region where the track is located."
          },
          "coordinates" : {
            "type" : "string",
            "description" : "The geographic position of the race track. \nFor longer tracks the start line is used as reference."
          }
        }
      },
      "Race_Track_Variant" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of this variant."
          },
          "length" : {
            "type" : "number",
            "description" : "The length of this variant."
          },
          "length_unit" : {
            "type" : "string"
          },
          "direction" : {
            "type" : "string",
            "enum" : [ "clockwise", "counterclockwise" ]
          },
          "elevation_change" : {
            "type" : "number",
            "description" : "The height difference between lowest and highest point of the track."
          },
          "elevation_change_unit" : {
            "type" : "string"
          },
          "surface" : {
            "type" : "string",
            "enum" : [ "asphalt", "gravel", "sand", "ice", "salt", "mixed", "other" ]
          }
        }
      },
      "Country" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "The official (english) name of the country."
          },
          "adjectival" : {
            "type" : "string",
            "description" : "The adjectival form of the country's name.\nE.g.: 'The `Italian` carmaker...' or 'The `British` version of this model...'"
          },
          "demonym" : {
            "type" : "string",
            "description" : "How are the inhabitants of this country called? \nE.g.: 'The `Italians` have the fastest cars...')"
          },
          "short_name" : {
            "type" : "string",
            "description" : "Short form of the country name (if applicable).",
            "example" : "UK"
          },
          "code" : {
            "type" : "string",
            "description" : "The official (2-letter) country code, according to ISO 3166-1."
          }
        }
      },
      "Image" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered.",
            "example" : 9954
          },
          "name" : {
            "type" : "string",
            "description" : "The name resp. title of this image.",
            "example" : "BMW M4"
          },
          "image_platform" : {
            "type" : "string",
            "description" : "The provider that is hosting the image.",
            "enum" : [ "flickr", "wikimedia" ],
            "example" : "flickr"
          },
          "image_platform_id" : {
            "type" : "string",
            "description" : "The ID resp. the name of the image, as given by the image platform. \nFlickr uses numbers, like `43644091312`.\nWikimedia uses a URL friendly version of the name of the image, like `File:BMW_Z4_Concept.jpg`.",
            "example" : "42258175882"
          },
          "source" : {
            "type" : "string",
            "description" : "The internet address of the concrete image file."
          },
          "origin" : {
            "type" : "string",
            "description" : "A description page where additional information about the photo can be found. Like licensing details, author, camera model etc."
          },
          "author" : {
            "type" : "string",
            "description" : "The name of the photographer resp. the rights holder of the image."
          },
          "license" : {
            "type" : "string",
            "description" : "The license this image was published under."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of what can be seen on the photo, \nwhere it was taken,\nwhen it was taken."
          },
          "tags" : {
            "type" : "string",
            "description" : "A comma-separated list of keywords describing the picture."
          }
        }
      },
      "Online_Article" : {
        "type" : "object",
        "required" : [ "id", "name", "url" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "The headline of this article."
          },
          "description" : {
            "type" : "string",
            "description" : "Characterization of the article (Car review? News flash? Interview? Race report?) or an excerpt or a quote."
          },
          "author" : {
            "type" : "string",
            "description" : "The creator of the article."
          },
          "publish_date" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when the article was published. Format is `YYYY-MM-DD`.",
            "example" : "2016-04-12"
          },
          "url" : {
            "type" : "string",
            "description" : "Where can the article be found on the internet?"
          }
        },
        "description" : "An `Online Article` is a blog post or the online version of an article written in a car magazine. \nAn article is suited for the database when it discusses a car related topic that is covered by More Cars (e.g. Car Models, Brands, Racing Games, Motorsport).\nThere is no restriction on the format. It can be a review, a group test, a discussion, a discourse, an interview etc.\nThere is no restriction on the language, but English articles are preferred."
      },
      "Video" : {
        "type" : "object",
        "required" : [ "creator", "id", "license", "name", "source" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The internal `More Cars` ID of this node. It's generated by the system and cannot be altered."
          },
          "name" : {
            "type" : "string",
            "description" : "The title of the video."
          },
          "video_platform" : {
            "type" : "string",
            "description" : "The platform or service that is hosting the video.",
            "enum" : [ "youtube" ]
          },
          "video_platform_id" : {
            "type" : "string",
            "description" : "The ID of the video, as given by the video hosting service."
          },
          "source" : {
            "type" : "string",
            "description" : "The URL of the video or the web page where the licensing and additional information can be found."
          },
          "creator" : {
            "type" : "string",
            "description" : "The name of the creator (or uploader) of the video."
          },
          "license" : {
            "type" : "string",
            "description" : "The license under which the video was published."
          },
          "duration" : {
            "type" : "string",
            "description" : "The length of this video, following the ISO 8601 standard.",
            "example" : "PT6M48S"
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "string",
            "description" : "A comma-separated list of keywords, describing the key aspects of this video."
          }
        }
      },
      "General_Error" : {
        "type" : "object",
        "required" : [ "errors" ],
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "required" : [ "detail", "status" ],
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "string",
                  "description" : "HTTP status code"
                },
                "detail" : {
                  "type" : "string",
                  "description" : "Description of the error"
                }
              }
            }
          }
        }
      },
      "401_Error" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Description of the error",
            "example" : "Access token is missing"
          }
        }
      },
      "404_Error" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Description of the error",
            "example" : "Node not found"
          }
        }
      },
      "422_Error" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Description of the error",
            "example" : "Invalid ID"
          }
        }
      }
    }
  }
}