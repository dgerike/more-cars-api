# OpenAPI version identifier - required for OpenAPI 3.0 domains
openapi: 3.0.0

#######################
# Optional info section
#######################
info:
  title: 'More Cars API » Section 0: Components'
  description: 'Common components for More Cars REST APIs'
  version: "0.8.0"

components:

  ####################
  # Common data models
  ####################
  schemas:
  
    # Core
    Car_Model:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
          example: 1102
        name:
          type: string
          description: >-
            The official name of this model, respecting upper/lower case,
            whitespaces and special characters (e.g. "cee'd" or "e-tron"). 
            The brand name is always omitted!
          example: "911"
        generation:
          type: integer
          description: >-
            When this model was build over multiple generations, which one is this?
          example: 5
        code:
          type: string
          description: >-
            The internal code of this model as given by the manufacturer.
          example: "996"
        built_from:
          type: integer
          description: >-
            What was the first year of production for this model?
          example: 1997
        built_to:
          type: integer
          description: >-
            What was the last year of production for this model?
          example: 2005
        total_production:
          type: integer
          description: >-
            When adding up all variations, how many units of this model (of this
            generation) were produced in total?
          example: 175164
      description: A `Car Model` represents one *generation* of a vehicle (e.g. *VW Golf VII* or *Ford Fiesta Mk2*). A generation usually last between 5 and 10 years and is built in multiple `Car Model Variants`. The variation can be in body style (coupe, station wagon, convertible), engine specification (gasoline, diesel, electric), transmission (manual, automatic), purpose (race car, police car, military vehicle) or other characteristics.
  
    Car_Model_Variant:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
          example: 405
        name:
          type: string
          description: >-
            The official name of this variant, respecting upper/lower case,
            whitespaces and special characters.
          example: Lamborghini Murciélago LP670-4 SV
        code:
          type: string
          description: >-
            The internal code name of this vehicle as given by the
            manufacturer. 

            Used to distinguish between multiple generations of one car model
            variant.

            Sometimes the manufacturer gives each variant a different code.

            Sometimes they have no code at all.
          example: E1234
        built_from:
          type: integer
          description: The year this car went into production.
          example: 2009
        built_to:
          type: integer
          description: The final year of production.
          example: 2010
        body_style:
          type: string
          description: >-
            Classification based on the the number of doors, seats, size and the
            overall shape of the car.
          enum:
            - coupe
            - convertible
            - hatchback
            - motorbike
            - pickup truck
            - offroad
            - quad
            - roadster
            - sedan
            - station wagon
            - suv
            - targa
            - van
            - truck
            - other
        cd:
          type: number
          description: Drag coefficient. Also referred to as `cd value` or `cw value`.
          example: 0.29
        doors:
          type: integer
          description: The number of doors.
          example: 2
        weight:
          type: integer
          description: 'The official weight of this car, as provided by the manufacturer.'
          example: 1565
        weight_unit:
          type: string
          enum:
            - kg
            - lbs
        max_power:
          type: integer
          description: >-
            The peak power output of this engine, as claimed by the
            manufacturer.
          example: 670
        max_power_unit:
          type: string
          enum:
            - PS
            - bhp
            - kW
        max_torque:
          type: integer
          description: 'The peak torque of this engine, as claimed by the manufacturer.'
          example: 670
        max_torque_unit:
          type: string
          enum:
            - Nm
            - lb ft
        cylinders:
          type: integer
          description: >-
            The number of cylinders (petrol or diesel engine) or rotors (wankel
            engine). (Only applicable to combustion engines.)
            example: 12
        engine_configuration:
          type: string
          description: >-
            The alignment of the cylinders resp. rotors. (Only applicable to
            combustion engines.)
          enum:
            - Inline
            - Flat
            - V
            - W
            - H
            - U
            - Rotary
            - Radial
        displacement:
          type: integer
          description: >-
            The size (volume) of all combustion chamber(s) combined.
            (Only applicable to combustion engines.)
          example: 6496
        displacement_unit:
          type: string
          enum:
            - ccm
            - cu in
        charger:
          type: string
          description: >-
            The method how the air is forced into the engine.
            (Only applicable to combustion engines.)
          enum:
            - none
            - turbo
            - super
        engine_type:
          type: string
          description: >-
            The thermodynamic and/or physical principles the engine is build upon. 
            (The type of fuel is secondary.)
          enum:
            - otto
            - diesel
            - wankel
            - turbine
            - hybrid
            - electric
            - other
        energy_source:
          type: string
          description: >-
            The type of 'fuel' this engine runs on. 
            For hybrid cars the primary engine is selected.
          enum:
            - petrol
            - diesel
            - natural gas
            - liquid gas
            - hydrogen
            - ethanol
            - electricity
            - other
        energy_source_2:
          type: string
          description: >-
            On what 'fuel' runs the second engine? (Only applicable to hybrid
            engines.)
          enum:
            - petrol
            - diesel
            - natural gas
            - liquid gas
            - hydrogen
            - ethanol
            - electricity
            - other
        fuel_consumption:
          type: number
          description: >-
            The official fuel (or energy) consumption of this car, as provided
            by the manufacturer.
          example: 20.6
        fuel_consumption_unit:
          type: string
          enum:
            - l / 100 km
            - mpg
            - kWh / 100 km
        energy_capacity:
          type: number
          description: >-
            The capacity of the fuel tank (resp. the battery in case of an
            electric vehicle.)
          example: 100
        energy_capacity_unit:
          type: string
          enum:
            - l
            - kg
            - kWh
        energy_capacity_2:
          type: number
          description: >-
            The capacity of the second fuel tank. (Only applicable to hybrid
            engines.)
        energy_capacity_2_unit:
          type: string
          enum:
            - l
            - kg
            - kWh
        transmission:
          type: string
          description: The gearbox type.
          enum:
            - manual
            - sequential
            - dual clutch
            - direct
            - cvt
            - auto
        gears:
          type: integer
          description: The number of gears.
          example: 6
        drivetrain:
          type: string
          description: >-
            The wheel(s) to which the engine power is transferred.

            `All Wheel Drive` includes `4WD`, `AWD`, `IWD` and all the other
            variations that are on the market.
          enum:
            - FWD
            - RWD
            - AWD
        sprint_0_100:
          type: number
          description: >-
            The acceleration time from 0 to 100 km/h, resp. 62 mph (in seconds),
            as claimed by the manufacturer
          example: 3.2
        top_speed:
          type: number
          description: 'The maximum speed (vmax) of the car, as claimed by the manufacturer.'
          example: 337
        top_speed_unit:
          type: string
          enum:
            - km/h
            - mph
        total_production:
          type: integer
          description: The number of units that have been built of this car.
          example: 350
        price:
          type: number
          description: The base price of this model when it was introduced (incl. VAT).
          example: 357000
        price_unit:
          type: string
          enum:
            - €
            - $
            - £
            - DM
            - ¥

    Brand:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: >-
            The name of the brand (e.g. `VW`).

            Not to be confused with the name of the company (e.g. `VW AG`). 

            The legal form is always omitted (no `AG`, `N.V.`, `Ltd.` or
            `GmbH`).

            The official spelling is used (e.g. `MINI` instead of `Mini`).
          example: BMW
        full_name:
          type: string
          description: >-
            The long form of the brand's name (e.g. `VW` for `Volkswagen`).

            This field is only set if the name is actually abbreviated (e.g.
            `Porsche` is not.)
          example: Bayerische Motoren Werke
        founded:
          type: integer
          description: >-
            The year in which the brand has been created resp. introduced to the
            market. 

            This is not necessarily the year the company was founded. 

            E.g.: The history of `Peugeot` goes back to `1810`, but they are
            building cars only since `1891`.
          minimum: 1800
          maximum: 2100
          example: 1916
        defunct:
          type: integer
          description: >-
            The final year the brand name was officially used (for a car).
          minimum: 1800
          maximum: 2100
          example: 2099
        wmi:
          type: string
          description: >-
            The WMI is a two- or three-character code that identifies the car
            manufacturer globally.

            `WMI` stands for `World Manufacturer Identifier` and is specified in
            `ISO 3780`. 

            Some manufacturers have multiple WMIs, some have none at all.

            Multiple WMIs are separated by comma.
        hsn:
          type: string
          description: >-
            `HSN` stands for `Herstellerschlüsselnummer` and is the German
            counterpart of the `WMI`.

            It's a four-digit number that identifies the car manufacturer
            globally. 
            
            Some manufacturers have multiple HSNs, some have none at all.
            
            Multiple HSNs are separated by comma.
          minLength: 4
          maxLength: 4
          pattern: '[0-9][0-9][0-9][0-9]'

    Company:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: >-
            The official name of this car company, incl. the legal suffix (AG,
            SE, GmbH, N.V., Ltd).
        founded:
          type: integer
        defunct:
          type: integer
        headquarter_city:
          type: string
          description: >-
            The city in which the company has its (de facto) headquarter. 
            The English name should be used (if available), e.g. `Munich`
            instead of `München`.
        legal_headquarter_city:
          type: string
          description: >-
            The city where the company has its official headquarter. (This
            should only be set when it differs from the de facto headquarter.)
            
            E.g.: `Ferrari` is an Italian company, based in `Maranello` but on
            paper they are a Dutch company, located in `Amsterdam`.
            
            The English name should be used (if available), e.g. `Munich`
            instead of `München`.
        employees:
          type: integer
          description: The number of employees that are working for this company.
      
    # Presentation
    Car_Magazine:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
        founded:
          type: integer
        defunct:
          type: integer
        focus:
          type: string
          enum:
            - new cars
            - classic cars
            - sports cars
            - tuned cars
            - race cars
            - american cars
            - japanese cars
            - brand specific
            - other
        issues_per_year:
          type: integer
          description: The number of regular issues per year. Specials are excluded.
        single_copy_price:
          type: number
        single_copy_price_unit:
          type: string
        distribution:
          type: string
          enum:
            - print
            - digital
            - print_and_digital
        circulation:
          type: integer
        publisher:
          type: string
        issn:
          type: string

    Car_Magazine_Issue:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: The title of this issue or - if not available - the main topic.
        number:
          type: integer
          description: >-
            The issue's number as is printed on the cover. E.g. '9' for the
            September issue or '483' if the magazine is using consecutive
            numbering.
        year:
          type: integer
          description: >-
            The year that is printed on the cover. This might vary from the real
            release date, e.g. issue '1/2010' could already have been released
            in December of 2009.
          minimum: 1800
          maximum: 2100
        release_date:
          type: string
          format: date
          description: The official release date of the print version of this issue.
        single_copy_price:
          type: number
          format: double
          description: >-
            The price for this issue on the domestic market, as printed on the
            cover, incl. VAT.
        single_copy_price_unit:
          type: string
        pages:
          type: integer
          description: >-
            The total number of pages this issue has. This includes cover and
            flipside, but not booklets or flyers.

    Car_Programme:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: >-
            Title of the programme. Use the official spelling, e.g 'Top Gear'
            insted of 'TopGear' or 'GRIP' instead of 'Grip'.
        aired_from_year:
          type: integer
          description: The first year the programme was broadcoasted.
        aired_to_year:
          type: integer
          description: The final year of the programme.
        channel:
          type: string
          description: >-
            On which channel does/did the programme run? Can be a classic TV
            station or an online channel.
        seasons:
          type: integer
          description: The number of seasons (resp. series) until today.
        episodes:
          type: integer
          description: >-
            The total number of episodes, across all seasons, until today,
            including specials, but not re-runs.
        running_time:
          type: integer
          description: >-
            The regular length of one episode (in minutes). If it changed over
            time the running time of the latest episodes should be used.

    Car_Programme_Episode:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: |-
            The official name or title of this episode. 
            Alternatively the main topic when there is no official title.
        season:
          type: integer
          description: The season number this episode belongs to.
        season_episode:
          type: integer
          description: >-
            The episode number within this season. (This is not the overall
            count!)
        original_air_date:
          type: string
          format: date
          description: The date this episode was broadcasted for the very first time.
        duration:
          type: string
          description: The length of this episode in minutes and seconds.
          
    Motor_Show:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
          example: 999
        name:
          type: string
          description: >-
            The official name of this event.
          example: "2009 IAA Frankfurt"
        date_from:
          type: string
          description: >-
            When did this event start?
          example: "2009-09-17"
        date_to:
          type: string
          description: >-
            When did this event end?
          example: "2009-09-27"
        location:
          type: string
          description: >-
            The city in which this event took place.
          example: "Frankfurt am Main"
        target:
          type: string
          description: >-
            How big is the show? What is the target audience?
          enum:
            - international
            - national
            - regional
            - other
          example: "international"
        focus:
          type: string
          description: >-
            What type of cars are presented here?
          enum:
            - new_cars
            - classic_cars
            - sports_cars
            - tuned_cars
            - race_cars
            - brand_specific
            - mixed
            - other
          example: "new_cars"
      
    # Gaming
    Racing_Game:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
          minimum: 1
          maximum: 1000000
          example: 3954
        name:
          type: string
          description: The official name of this racing game.
          example: Need for Speed
        release_year:
          type: integer
          description: The year this game was released.
          minimum: 1900
          maximum: 2100
          example: 1986
        developer:
          type: string
          description: The name of the developer of this game.
          example: Kunos Simulazioni
        publisher:
          type: string
          description: The name of the publisher of this game.
          example: Sony Interactive Entertainment

    Gaming_Platform:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
          minimum: 1
          maximum: 1000000
          example: 3954
        name:
          type: string
          description: The official name of this gaming platform.
          example: Xbox One
        release_year:
          type: integer
          description: The year this gaming platform was released.
        company:
          type: string
          description: The company that created this gaming platform.
          
    # Motorsport
    Racing_Series:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: 'The official name of the series, in long form, not abbreviated.'
          example: Formula 1
        short_name:
          type: string
          description: The abbreviation or short form of the series (if applicable).
          example: F1
        founded:
          type: integer
          description: The year the racing series started.
        defunct:
          type: integer
          description: The final year of the racing series.
        organization:
          type: string
          description: The governing body of this series.
          example: FIA
        type:
          type: string
          description: The kind of vehicle that are driven in this series.
          enum:
            - formula racing cars
            - touring cars
            - sports cars
            - production cars
            - cup cars
            - stock cars
            - rally cars
            - dragster
            - go-karts
            - historical cars
            - trucks
            - other

    Racing_Event:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: >-
            The official name of this event. 

            In general a combination of the year, the racing series and the the
            location. 

            Might also contain the main sponsor's name.
          example: 2016 WTCC Race of Morocco
        round:
          type: integer
          description: Which round in the season calendar?
        start_date:
          type: string
          description: The first (official) day of the event.
        end_date:
          type: string
          description: The last day of the event - usually the race day.

    Racing_Event_Session:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          example: Race
        start_time:
          type: string
          format: date-time
          description: The planned start date and time of the session.
          example: '2017-09-03T14:00'
        duration:
          type: number
          description: >-
            The planned length of the session. Can be a fixed time or a number
            of laps.
        duration_unit:
          type: string
          enum:
            - laps
            - minutes
            - hours

    Race_Result:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal More Cars ID of this node. It’s generated by the system
            and cannot be altered.
        name:
          type: string
        position:
          type: integer
          description: The final position of this car in this session.
        driver_number:
          type: string
          description: 'The start number of the car, reps. the driver''s number.'
          example: '77'
        driver_name:
          type: string
          description: The full name of the driver.
        team_name:
          type: string
          description: The full name of the team.
        race_time:
          type: string
          description: Total time
        fastest_lap_time:
          type: string
          description: Driver's fastest lap in this session.
        points:
          type: number
          description: |-
            The number of championship points earned in this session. 
                            Depending on the regulations this can be based on the position, the fastest lap, malus points for fouls etc.
          example: 25

    Race_Track:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: >-
            The official name of the race track.

            Might contain the name of the owner or a sponsor, like `Red Bull
            Ring`.

            The most up to date name is used.
        opened:
          type: integer
        closed:
          type: integer
        type:
          type: string
          enum:
            - permanent race track
            - street circuit
            - other
        location:
          type: string
          description: The city or region where the track is located.
        coordinates:
          type: string
          description: |-
            The geographic position of the race track. 
            For longer tracks the start line is used as reference.
            
    Race_Track_Variant:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: The name of this variant.
        length:
          type: number
          description: The length of this variant.
        length_unit:
          type: string
        direction:
          type: string
          enum:
            - clockwise
            - counterclockwise
        elevation_change:
          type: number
          description: The height difference between lowest and highest point of the track.
        elevation_change_unit:
          type: string
        surface:
          type: string
          enum:
            - asphalt
            - gravel
            - sand
            - ice
            - salt
            - mixed
            - other
            
    # Multimedia
    Image:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
          example: 9954
        name:
          type: string
          description: The name resp. title of this image.
          example: "BMW M4"
        image_platform:
          type: string
          description: The provider that is hosting the image.
          enum:
            - flickr
            - wikimedia
          example: flickr
        image_platform_id:
          type: string
          description: >-
            The ID resp. the name of the image, as given by the image platform. 

            Flickr uses numbers, like `43644091312`.

            Wikimedia uses a URL friendly version of the name of the image, like
            `File:BMW_Z4_Concept.jpg`.
          example: "42258175882"
        source:
          type: string
          description: The internet address of the concrete image file.
        origin:
          type: string
          description: >-
            A description page where additional information about the photo can
            be found. Like licensing details, author, camera model etc.
        author:
          type: string
          description: The name of the photographer resp. the rights holder of the image.
        license:
          type: string
          description: The license this image was published under.
        description:
          type: string
          description: |-
            A short description of what can be seen on the photo, 
            where it was taken,
            when it was taken.
        tags:
          type: string
          description: A comma-separated list of keywords describing the picture.
      
    Online_Article:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: The headline of this article.
        description:
          type: string
          description: >-
            Characterization of the article (Car review? News flash? Interview?
            Race report?) or an excerpt or a quote.
        author:
          type: string
          description: The creator of the article.
        publish_date:
          type: string
          format: date
          description: The date when the article was published. Format is `YYYY-MM-DD`.
          example: '2016-04-12'
        url:
          type: string
          description: Where can the article be found on the internet?
      description: >-
        An `Online Article` is a blog post or the online version of an article
        written in a car magazine. 

        An article is suited for the database when it discusses a car related
        topic that is covered by More Cars (e.g. Car Models, Brands, Racing
        Games, Motorsport).

        There is no restriction on the format. It can be a review, a group test,
        a discussion, a discourse, an interview etc.

        There is no restriction on the language, but English articles are
        preferred.

    Video:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: The title of the video.
        video_platform:
          type: string
          description: The platform or service that is hosting the video.
          enum:
            - youtube
        video_platform_id:
          type: string
          description: 'The ID of the video, as given by the video hosting service.'
        source:
          type: string
          description: >-
            The URL of the video or the web page where the licensing and
            additional information can be found.
        creator:
          type: string
          description: The name of the creator (or uploader) of the video.
        license:
          type: string
          description: The license under which the video was published.
        duration:
          type: string
          description: 'The length of this video, following the ISO 8601 standard.'
          example: PT6M48S
        description:
          type: string
        tags:
          type: string
          description: >-
            A comma-separated list of keywords, describing the key aspects of
            this video.
    
    # Performance
    Lap_Time:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
          example: 1102
        name:
          type: string
          description: >-
            ...
          example: "..."
        lap_time:
          type: string
          description: >-
            The lap time, formatted according to ISO 8601 standard.
          example: "PT1M37.643S"
        driver_name:
          type: string
          description: >-
            The name of the driver who accomplished this lap time.
          example: "Michael Schumacher"
      description: A `Lap Time` is the time a driver needed to complete one full lap (or stage) of a race track. Not limited to motorsport, can also be the lap times of car magazines or private drives.
    
    # Misc
    Country:
      type: object
      properties:
        id:
          type: integer
          description: >-
            The internal `More Cars` ID of this node. It's generated by the
            system and cannot be altered.
        name:
          type: string
          description: The official (english) name of the country.
        adjectival:
          type: string
          description: >-
            The adjectival form of the country's name.

            E.g.: 'The `Italian` carmaker...' or 'The `British` version of this
            model...'
        demonym:
          type: string
          description: |-
            How are the inhabitants of this country called? 
            E.g.: 'The `Italians` have the fastest cars...')
        short_name:
          type: string
          description: Short form of the country name (if applicable).
          example: UK
        code:
          type: string
          description: 'The official (2-letter) country code, according to ISO 3166-1.'
    
    # Errors
    General_Error:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            required:
              - detail
              - status
            type: object
            properties:
              status:
                type: string
                description: HTTP status code
              detail:
                type: string
                description: Description of the error
      
    401_Error:
      type: object
      properties:
        message:
          type: string
          description: Description of the error
          example: Access token is missing

    404_Error:
      type: object
      properties:
        message:
          type: string
          description: Description of the error
          example: Node not found

    422_Error:
      type: object
      properties:
        message:
          type: string
          description: Description of the error
          example: Invalid ID

  ####################
  # Common parameters
  ####################
  parameters:
    searchParam:
      name: q
      in: query
      required: false
      description: search term
      schema:
        type: string
        default: ""
      example: "Ferrari"
      
    sortParam:
      name: order
      in: query
      required: false
      description: order by property
      schema:
        type: string
        default: "name"
      example: "built_from"
      
    sortDirectionParam:
      name: order_direction
      in: query
      required: false
      description: order direction (ASC or DESC)
      schema:
        type: string
        default: "ASC"
      example: "DESC"
      
    pageParam:
      name: page
      in: query
      required: false
      description: pagination
      schema:
        type: integer
        minimum: 1
        default: 1
      example: 1
      
    filterParam:
      name: filter
      in: query
      description: filter by property
      required: false
      schema:
        type: object
        properties:
          property:
            type: string
          value: 
            type: string
      examples:
        multipleFilters:
          summary: Multiple filters
          value: 
            - doors: 
                operator: gt
                value: 4
            - cylinders:
                value: 8
        simpleFilter:
          summary: Simple filter
          value: 
            doors: 
              value: 3
        advancedFilter:
          summary: Advanced filter
          value: 
            doors: 
              operator: gt
              value: 4
        


  #######################
  # Common request bodies
  #######################
  requestBodies:
    Car_Model:
      description: Car Model
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Model'
            
    Car_Model_Variant:
      description: Car Model Variant
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Model_Variant'
            
    Brand:
      description: Brand
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Brand'
            
    Company:
      description: Company
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Company'
            
    Car_Magazine:
      description: Car Magazine
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Magazine'
            
    Car_Magazine_Issue:
      description: Car Magazine Issue
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Magazine_Issue'
            
    Car_Programme:
      description: Car Programme
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Programme'
            
    Car_Programme_Episode:
      description: Car Programme Episode
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Programme_Episode'
            
    Motor_Show:
      description: Motor Show
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Motor_Show'
            
    Racing_Game:
      description: Racing Game
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Racing_Game'
            
    Gaming_Platform:
      description: Gaming Platform
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Gaming_Platform'

    Racing_Series:
      description: Racing Series
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Racing_Series'

    Racing_Event:
      description: Racing Event
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Racing_Event'

    Racing_Event_Session:
      description: Racing Event Session
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Racing_Event_Session'
            
    Race_Result:
      description: Race Result
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Race_Result'

    Race_Track:
      description: Race Track
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Race_Track'

    Race_Track_Variant:
      description: Race Track Variant
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Race_Track_Variant'

    Image:
      description: Image
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Image'

    Online_Article:
      description: Online Article
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Online_Article'

    Video:
      description: Video
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Video'

    Lap_Time:
      description: Lap Time
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Lap_Time'

    Country:
      description: Country
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Country'

  ####################
  # Common responses
  ####################
  responses:
  
    ### Car Models ###
    Car_Model_ITEM:
      description: 
        "Car Model successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Model'
            
    Car_Model_COLLECTION:
      description: 
        "List of Car Models successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Car_Model'
              
    Car_Model_CREATED:
      description: 
        "Car Model successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Car_Model'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Car_Model_DELETED:
      description: 
        "Car Model successfully deleted."
        
    Car_Model_CONNECTED:
      description: 
        "Car Model successfully connected."
        
    Car_Model_DISCONNECTED:
      description: 
        "Car Model successfully disconnected."
    
    ### Car Model Variants ###
    Car_Model_Variant_ITEM:
      description: 
        "Car Model Variant successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Model_Variant'
            
    Car_Model_Variant_COLLECTION:
      description: 
        "List of Car Model Variants successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Car_Model_Variant'
              
    Car_Model_Variant_CREATED:
      description: 
        "Car Model Variant successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Car_Model_Variant'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Car_Model_Variant_DELETED:
      description: 
        "Car Model Variant successfully deleted."
        
    Car_Model_Variant_CONNECTED:
      description: 
        "Car Model Variant successfully connected."
        
    Car_Model_Variant_DISCONNECTED:
      description: 
        "Car Model Variant successfully disconnected."
    
    ### Brands ###
    Brand_ITEM:
      description: 
        "Brand successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Brand'
            
    Brand_COLLECTION:
      description: 
        "List of Brands successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Brand'
              
    Brand_CREATED:
      description: 
        "Brand successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Brand'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Brand_DELETED:
      description: 
        "Brand successfully deleted."
        
    Brand_CONNECTED:
      description: 
        "Brand successfully connected."
        
    Brand_DISCONNECTED:
      description: 
        "Brand successfully disconnected."
        
    ### Companies ###
    Company_ITEM:
      description: 
        "Company successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Company'
            
    Company_COLLECTION:
      description: 
        "List of Companies successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Company'
              
    Company_CREATED:
      description: 
        "Company successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Company'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Company_DELETED:
      description: 
        "Company successfully deleted."
        
    Company_CONNECTED:
      description: 
        "Company successfully connected."
        
    Company_DISCONNECTED:
      description: 
        "Company successfully disconnected."
    
    ### Car Magazines ###
    Car_Magazine_ITEM:
      description: 
        "Car Magazine successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Magazine'
            
    Car_Magazine_COLLECTION:
      description: 
        "List of Car Magazines successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Car_Magazine'
              
    Car_Magazine_CREATED:
      description: 
        "Car Magazine successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Car_Magazine'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Car_Magazine_DELETED:
      description: 
        "Car Magazine successfully deleted."
        
    Car_Magazine_CONNECTED:
      description: 
        "Car Magazine successfully connected."
        
    Car_Magazine_DISCONNECTED:
      description: 
        "Car Magazine successfully disconnected."
    
    ### Car Magazine Issues ###
    Car_Magazine_Issue_ITEM:
      description: 
        "Car Magazine Issue successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Magazine_Issue'
            
    Car_Magazine_Issue_COLLECTION:
      description: 
        "List of Car Magazine Issues successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Car_Magazine_Issue'
              
    Car_Magazine_Issue_CREATED:
      description: 
        "Car Magazine Issue successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Car_Magazine_Issue'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Car_Magazine_Issue_DELETED:
      description: 
        "Car Magazine Issue successfully deleted."
        
    Car_Magazine_Issue_CONNECTED:
      description: 
        "Car Magazine Issue successfully connected."
        
    Car_Magazine_Issue_DISCONNECTED:
      description: 
        "Car Magazine Issue successfully disconnected."
    
    ### Car Programmes ###
    Car_Programme_ITEM:
      description: 
        "Car Programme successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Programme'
            
    Car_Programme_COLLECTION:
      description: 
        "List of Car Programmes successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Car_Programme'
              
    Car_Programme_CREATED:
      description: 
        "Car Programme successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Car_Programme'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Car_Programme_DELETED:
      description: 
        "Car Programme successfully deleted."
        
    Car_Programme_CONNECTED:
      description: 
        "Car Programme successfully connected."
        
    Car_Programme_DISCONNECTED:
      description: 
        "Car Programme successfully disconnected."
        
    ### Car Programme Episodes ###
    Car_Programme_Episode_ITEM:
      description: 
        "Car Programme Episode successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Programme_Episode'
            
    Car_Programme_Episode_COLLECTION:
      description: 
        "List of Car Programme Episodes successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Car_Programme_Episode'
              
    Car_Programme_Episode_CREATED:
      description: 
        "Car Programme Episode successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Car_Programme_Episode'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Car_Programme_Episode_DELETED:
      description: 
        "Car Programme Episode successfully deleted."
        
    Car_Programme_Episode_CONNECTED:
      description: 
        "Car Programme Episode successfully connected."
        
    Car_Programme_Episode_DISCONNECTED:
      description: 
        "Car Programme Episode successfully disconnected."
    
    ### Motor Shows ###
    Motor_Show_ITEM:
      description: 
        "`Motor Show` successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Motor_Show'
                    
    Motor_Show_COLLECTION:
      description: 
        "List of Motor Shows successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Motor_Show'
              
    Motor_Show_CREATED:
      description: 
        "Motor Show successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Motor_Show'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."

    Motor_Show_DELETED:
      description: 
        "Motor Show successfully deleted."
        
    Motor_Show_CONNECTED:
      description: 
        "Motor Show successfully connected."
        
    Motor_Show_DISCONNECTED:
      description: 
        "Motor Show successfully disconnected."
        
    ### Racing Game ###
    Racing_Game_ITEM:
      description: 
        "Racing Game successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Racing_Game'
            
    Racing_Game_COLLECTION:
      description: 
        "List of Racing Games successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Racing_Game'
              
    Racing_Game_CREATED:
      description: 
        "Racing Game successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Racing_Game'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Racing_Game_DELETED:
      description: 
        "Racing Game successfully deleted."
        
    Racing_Game_CONNECTED:
      description: 
        "Racing Game successfully connected."
        
    Racing_Game_DISCONNECTED:
      description: 
        "Racing Game successfully disconnected."
        
    ### Gaming Platform ###
    Gaming_Platform_ITEM:
      description: 
        "Gaming Platform successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Gaming_Platform'
            
    Gaming_Platform_COLLECTION:
      description: 
        "List of Gaming Platforms successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Gaming_Platform'
              
    Gaming_Platform_CREATED:
      description: 
        "Gaming Platform successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Gaming_Platform'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Gaming_Platform_DELETED:
      description: 
        "Gaming Platform successfully deleted."
        
    Gaming_Platform_CONNECTED:
      description: 
        "Gaming Platform successfully connected."
        
    Gaming_Platform_DISCONNECTED:
      description: 
        "Gaming Platform successfully disconnected."
    
    ### Racing Series ###
    Racing_Series_ITEM:
      description: 
        "Racing Series successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Racing_Series'
            
    Racing_Series_COLLECTION:
      description: 
        "List of Racing Series successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Racing_Series'
              
    Racing_Series_CREATED:
      description: 
        "Racing Series successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Racing_Series'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Racing_Series_DELETED:
      description: 
        "Racing Series successfully deleted."
        
    Racing_Series_CONNECTED:
      description: 
        "Racing Series successfully connected."
        
    Racing_Series_DISCONNECTED:
      description: 
        "Racing Series successfully disconnected."
        
    ### Racing Event ###
    Racing_Event_ITEM:
      description: 
        "Racing Event successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Racing_Event'
            
    Racing_Event_COLLECTION:
      description: 
        "List of Racing Events successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Racing_Event'
              
    Racing_Event_CREATED:
      description: 
        "Racing Event successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Racing_Event'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Racing_Event_DELETED:
      description: 
        "Racing Event successfully deleted."
        
    Racing_Event_CONNECTED:
      description: 
        "Racing Event successfully connected."
        
    Racing_Event_DISCONNECTED:
      description: 
        "Racing Event successfully disconnected."
        
    ### Racing Event Session ###
    Racing_Event_Session_ITEM:
      description: 
        "Racing Event Session successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Racing_Event_Session'
            
    Racing_Event_Session_COLLECTION:
      description: 
        "List of Racing Event Sessions successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Racing_Event_Session'
              
    Racing_Event_Session_CREATED:
      description: 
        "Racing Event Session successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Racing_Event_Session'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Racing_Event_Session_DELETED:
      description: 
        "Racing Event Session successfully deleted."
        
    Racing_Event_Session_CONNECTED:
      description: 
        "Racing Event Session successfully connected."
        
    Racing_Event_Session_DISCONNECTED:
      description: 
        "Racing Event Session successfully disconnected."
        
    ### Race Result ###
    Race_Result_ITEM:
      description: 
        "Race Result successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Race_Result'
            
    Race_Result_COLLECTION:
      description: 
        "List of Race Results successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Race_Result'
              
    Race_Result_CREATED:
      description: 
        "Race Result successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Race_Result'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Race_Result_DELETED:
      description: 
        "Race Result successfully deleted."
        
    Race_Result_CONNECTED:
      description: 
        "Race Result successfully connected."
        
    Race_Result_DISCONNECTED:
      description: 
        "Race Result successfully disconnected."
        
    ### Race Track ###
    Race_Track_ITEM:
      description: 
        "Race Track successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Race_Track'
            
    Race_Track_COLLECTION:
      description: 
        "List of Race Tracks successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Race_Track'
              
    Race_Track_CREATED:
      description: 
        "Race Track successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Race_Track'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Race_Track_DELETED:
      description: 
        "Race Track successfully deleted."
        
    Race_Track_CONNECTED:
      description: 
        "Race Track successfully connected."
        
    Race_Track_DISCONNECTED:
      description: 
        "Race Track successfully disconnected."
        
    ### Race Track Variant ###
    Race_Track_Variant_ITEM:
      description: 
        "Race Track Variant successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Race_Track_Variant'
            
    Race_Track_Variant_COLLECTION:
      description: 
        "List of Race Track Variants successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Race_Track_Variant'
              
    Race_Track_Variant_CREATED:
      description: 
        "Race Track Variant successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Race_Track_Variant'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Race_Track_Variant_DELETED:
      description: 
        "Race Track Variant successfully deleted."
        
    Race_Track_Variant_CONNECTED:
      description: 
        "Race Track Variant successfully connected."
        
    Race_Track_Variant_DISCONNECTED:
      description: 
        "Race Track Variant successfully disconnected."
    
    ### Images ###
    Image_ITEM:
      description: 
        "Image successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Image'
            
    Image_COLLECTION:
      description: 
        "List of Images successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Image'
              
    Image_CREATED:
      description: 
        "Image successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Image'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Image_DELETED:
      description: 
        "Image successfully deleted."
        
    Image_CONNECTED:
      description: 
        "Image successfully connected."
        
    Image_DISCONNECTED:
      description: 
        "Image successfully disconnected."
    
    ### Online Articles ###
    Online_Article_ITEM:
      description: 
        "Online Article successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Online_Article'
            
    Online_Article_COLLECTION:
      description: 
        "List of Online Articles successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Online_Article'
              
    Online_Article_CREATED:
      description: 
        "Online Article successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Online_Article'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Online_Article_DELETED:
      description: 
        "Online Article successfully deleted."
        
    Online_Article_CONNECTED:
      description: 
        "Online Article successfully connected."
        
    Online_Article_DISCONNECTED:
      description: 
        "Online Article successfully disconnected."
        
    ### Videos ###
    Video_ITEM:
      description: 
        "Video successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Video'
            
    Video_COLLECTION:
      description: 
        "List of Videos successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Video'
              
    Video_CREATED:
      description: 
        "Video successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Video'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Video_DELETED:
      description: 
        "Video successfully deleted."
        
    Video_CONNECTED:
      description: 
        "Video successfully connected."
        
    Video_DISCONNECTED:
      description: 
        "Video successfully disconnected."
        
    ### Lap Times ###
    Lap_Time_ITEM:
      description: 
        "Lap Time successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Lap_Time'
            
    Lap_Time_COLLECTION:
      description: 
        "List of Lap Times successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Lap_Time'
              
    Lap_Time_CREATED:
      description: 
        "Lap Time successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Lap_Time'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Lap_Time_DELETED:
      description: 
        "Lap Time successfully deleted."
        
    Lap_Time_CONNECTED:
      description: 
        "Lap Time successfully connected."
        
    Lap_Time_DISCONNECTED:
      description: 
        "Lap Time successfully disconnected."
        
    ### Countries ###
    Country_ITEM:
      description: 
        "Country successfully loaded."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Country'
            
    Country_COLLECTION:
      description: 
        "List of Countries successfully loaded."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Country'
              
    Country_CREATED:
      description: 
        "Country successfully created."
      headers:
        Location:
          description: The URL of the newly created Node
          schema:
            type: string
            example: 'https://more-cars.net/...'
      content:
        application/json:
          schema:
            required:
              - data
              - links
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Country'
              links:
                required:
                  - self
                type: object
                properties:
                  self:
                    type: string
                    description: The URL of the newly created Node
                    example: "https://more-cars.net/..."
    
    Country_DELETED:
      description: 
        "Country successfully deleted."
        
    Country_CONNECTED:
      description: 
        "Country successfully connected."
        
    Country_DISCONNECTED:
      description: 
        "Country successfully disconnected."

    ### Errors ###
    NotAuthorized:
      description: Authentication error. Credentials are missing or invalid or the permissions are insufficient.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/401_Error'
    
    NotFound:
      description: The requested Node could not be found in the database.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/404_Error'
    
    InvalidData:
      description: Validation error. The provided data is malformed or required information is missing.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/422_Error'
 
  #########################
  # Common headers
  # (except request headers - they are defined as parameters)
  #########################
  headers: {}

  #######################
  # Common path items
  #######################
  pathitems: {}

  ######################################
  # Common examples of input/output data
  ######################################
  examples: {}

  #########################
  # Common link definitions
  # See: https://swagger.io/docs/specification/links/
  #########################
  links: {}

  #########################
  # Common callback definitions
  # See: https://swagger.io/docs/specification/callbacks/
  #########################
  callbacks: {}
