openapi: 3.0.0
info:
  title: 'More Cars API Â» Section 1: Core'
  description: "The More Cars API is divided into five sections.  <ul> <li> [Section\
    \ 1 - Core](/apis-docs/more-cars.net/more-cars-api-section-1)<br> <li> [Section\
    \ 2 - Multimedia](/apis-docs/more-cars.net/more-cars-api-section-2)<br> <li> [Section\
    \ 3 - Presentation](/apis-docs/more-cars.net/more-cars-api-section-3)<br> <li>\
    \ [Section 4 - Gaming](/apis-docs/more-cars.net/more-cars-api-section-4)<br> <li>\
    \ [Section 5 - Motorsport](/apis-docs/more-cars.net/more-cars-api-section-5)<br>\
    \ </ul>\n<p> \n  This document covers section one, everything related to the cars\
    \ itself. Which variants of each car model were produced? Which models has the\
    \ brand created? Which brands belong to which company?\n</p>"
  version: 0.8.0
servers:
- url: https://virtserver.swaggerhub.com/more-cars.net/more-cars-api-section-1/0.8.0
  description: SwaggerHub API Auto Mocking
- url: https://more-cars.net/api/v1
  description: Production API
tags:
- name: Car Models
  description: A `Car Model` represents a whole *generation* of a vehicle (e.g. *VW
    Golf VII* or *Ford Fiesta Mk2*). A generation usually last between 5 and 10 years
    and is built in multiple `Car Model Variants` (difference in body style, engine,
    transmission, etc).
- name: Car Model Variants
  description: '`Car Models` are usually produced in different versions or variations.  The
    difference of these `Car Model Variants` can be in the engine type (gasoline,
    electric, hybrid), the transmission (manual, dual clutch, automatic), the drivetrain
    (FWD, RWD, AWD), the body style (sedan, coupe, cabrio) or any combination.'
- name: Brands
  description: '`Brands` (or marques or makes) enable to distinguish between vehicles
    from different car manufacturers, e.g. BMW, Toyota or Ford.'
- name: Companies
  description: A `Company` is the legal entity behind a `Brand`.  E.g. *Ferrari N.V.*
    is the company that owns the brand *Ferrari*. A company can have multiple brands,
    like the *Ford Motor Company* which owns (for example) the brands *Ford*, *Lincoln*
    and *Mercury*.
paths:
  /car-models:
    get:
      tags:
      - Car Models
      summary: Get all Car Models
      description: Returns a collection of all `Car Models` that are stored in the
        *More Cars* database.
      parameters:
      - name: page
        in: query
        description: pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 1
        example: 1
      responses:
        "200":
          description: List of Car Models successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car_Model'
    post:
      tags:
      - Car Models
      summary: Create new Car Model
      description: Adds a new `Car Model` to the More Cars database.
      requestBody:
        $ref: '#/components/requestBodies/Car_Model'
      responses:
        "201":
          description: Car Model successfully created.
          headers:
            Location:
              description: The URL of the newly created Node
              style: simple
              explode: false
              schema:
                type: string
                example: https://more-cars.net/...
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "422":
          description: Validation error. The provided data is malformed or required
            information is missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422_Error'
      security:
      - Access_Token: []
  /car-models/{car_model_id}:
    get:
      tags:
      - Car Models
      summary: Get specific Car Model
      description: Returns a `Car Model` specified by its ID.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "200":
          description: Car Model successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car_Model'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
    delete:
      tags:
      - Car Models
      summary: Delete Car Model
      description: Deletes a `Car Model`. <br><br> ðŸ”’ Operation requires elevated
        permissions.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "204":
          description: Car Model successfully deleted.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-models/{car_model_id}/brands:
    get:
      tags:
      - Car Models
      summary: Get connected Brand
      description: Returns the `Brand` which owns the specified `Car Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "200":
          description: Brand successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-models/{car_model_id}/brands/{brand_id}:
    post:
      tags:
      - Car Models
      summary: Connect Brand
      description: Connects an existing `Brand` to the specified `Car Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      responses:
        "204":
          description: Brand successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Models
      summary: Disconnect Brand
      description: Disconnects a `Brand` from the specified `Car Model`. <br><br>
        ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      responses:
        "204":
          description: Brand successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-models/{car_model_id}/car-model-variants:
    get:
      tags:
      - Car Models
      summary: Get connected Car Model Variants
      description: Returns all `Car Model Variants` that exist of the specified `Car
        Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "200":
          description: List of Car Model Variants successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car_Model_Variant'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-models/{car_model_id}/car-model-variants/{car_model_variant_id}:
    post:
      tags:
      - Car Models
      summary: Connect Car Model Variant
      description: Connects an existing `Car Model Variant` to the specified `Car
        Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      responses:
        "204":
          description: Car Model Variant successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Models
      summary: Disconnect Car Model Variant
      description: Disconnects a `Car Model Variant` from the specified `Car Model`.
        <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      responses:
        "204":
          description: Car Model Variant successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-models/{car_model_id}/car-magazine-issues:
    get:
      tags:
      - Car Models
      summary: Get connected Car Magazine Issues
      description: Returns all `Car Magazine Issues` that have featured the specified
        `Car Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "200":
          description: List of Car Magazine Issues successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car_Magazine_Issue'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-models/{car_model_id}/car-magazine-issues/{car_magazine_issue_id}:
    post:
      tags:
      - Car Models
      summary: Connect Car Magazine Issue
      description: Connects an existing `Car Magazine Issue` to the specified `Car
        Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: car_magazine_issue_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 1027
      responses:
        "204":
          description: Car Magazine Issue successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Models
      summary: Disconnect Car Magazine Issue
      description: Disconnects a `Car Magazine Issue` from the specified `Car Model`.
        <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: car_magazine_issue_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 1027
      responses:
        "204":
          description: Car Magazine Issue successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-models/{car_model_id}/car-programme-episodes:
    get:
      tags:
      - Car Models
      summary: Get connected Car Programme Episodes
      description: Returns all `Car Programme Episodes` in which the specified `Car
        Model` has been presented.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "200":
          description: List of Car Programme Episodes successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car_Programme_Episode'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-models/{car_model_id}/car-programme-episodes/{car_programme_episode_id}:
    post:
      tags:
      - Car Models
      summary: Connect Car Programme Episode
      description: Connects an existing `Car Programme Episode` to the specified `Car
        Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: car_programme_episode_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 22261
      responses:
        "204":
          description: Car Programme Episode successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Models
      summary: Disconnect Car Programme Episode
      description: Disconnects a `Car Programme Episode` from the specified `Car Model`.
        <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: car_programme_episode_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 22261
      responses:
        "204":
          description: Car Programme Episode successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-models/{car_model_id}/successor:
    get:
      tags:
      - Car Models
      summary: Get connected Car Model successor
      description: Returns the successor of this `Car Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 6282
      responses:
        "200":
          description: Car Model successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car_Model'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-models/{car_model_id}/car-models/{succeeding_car_model_id}/succeeded-by:
    post:
      tags:
      - Car Models
      summary: Connect succeeding Car Model
      description: Connects a `Car Model` to be the successor of the specified `Car
        Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 6282
      - name: succeeding_car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 18107
      responses:
        "204":
          description: Car Model successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Models
      summary: Disconnect succeeding Car Model
      description: Disconnects a `Car Model` from being the successor of the specified
        `Car Model`. <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 6282
      - name: succeeding_car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 18107
      responses:
        "204":
          description: Car Model successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-models/{car_model_id}/predecessor:
    get:
      tags:
      - Car Models
      summary: Get connected Car Model predecessor
      description: Returns the predecessor of this `Car Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 6282
      responses:
        "200":
          description: Car Model successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car_Model'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-models/{car_model_id}/car-models/{preceding_car_model_id}/preceded-by:
    post:
      tags:
      - Car Models
      summary: Connect preceding Car Model
      description: Connects a `Car Model` to be the predecessor of the specified `Car
        Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 6282
      - name: preceding_car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 1101
      responses:
        "204":
          description: Car Model successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Models
      summary: Disconnect preceding Car Model
      description: Disconnects a `Car Model` from being the predecessor of the specified
        `Car Model`. <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 6282
      - name: preceding_car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 1101
      responses:
        "204":
          description: Car Model successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-models/{car_model_id}/images:
    get:
      tags:
      - Car Models
      summary: Get connected Images
      description: Returns all `Images` that are attached to the specified `Car Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "200":
          description: List of Images successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-models/{car_model_id}/images/{image_id}:
    post:
      tags:
      - Car Models
      summary: Connect Image
      description: Attaches an existing `Image` to the specified `Car Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: image_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 2740
      responses:
        "204":
          description: Image successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Models
      summary: Disconnect Image
      description: Disconnects an `Image` from the specified `Car Model`. <br><br>
        ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: image_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 2740
      responses:
        "204":
          description: Image successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-models/{car_model_id}/online-articles:
    get:
      tags:
      - Car Models
      summary: Get connected Online Articles
      description: Returns all `Online Articles` that are attached to the specified
        `Car Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "200":
          description: List of Online Articles successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Online_Article'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-models/{car_model_id}/online-articles/{online_article_id}:
    post:
      tags:
      - Car Models
      summary: Connect Online Article
      description: Attaches an existing `Online Article` to the specified `Car Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: online_article_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 40557
      responses:
        "204":
          description: Online Article successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Models
      summary: Disconnect Online Article
      description: Disconnects an `Online Article` from the specified `Car Model`.
        <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: online_article_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 40557
      responses:
        "204":
          description: Online Article successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-models/{car_model_id}/videos:
    get:
      tags:
      - Car Models
      summary: Get connected Videos
      description: Returns all `Videos` that are attached to the specified `Car Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "200":
          description: List of Videos successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-models/{car_model_id}/videos/{video_id}:
    post:
      tags:
      - Car Models
      summary: Connect Video
      description: Attachs an existing `Video` to the specified `Car Model`.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: video_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 40520
      responses:
        "204":
          description: Video successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Models
      summary: Disconnect Video
      description: Disconnects a `Video` from the specified `Car Model`. <br><br>
        ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      - name: video_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 40520
      responses:
        "204":
          description: Video successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-model-variants:
    get:
      tags:
      - Car Model Variants
      summary: Get all Car Model Variants
      description: Returns a collection of all `Car Model Variants` that are stored
        in the *More Cars* database.
      parameters:
      - name: page
        in: query
        description: pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 1
        example: 1
      responses:
        "200":
          description: List of Car Model Variants successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car_Model_Variant'
    post:
      tags:
      - Car Model Variants
      summary: Create new Car Model Variant
      description: Adds a new `Car Model Variant` to the More Cars database.
      requestBody:
        $ref: '#/components/requestBodies/Car_Model_Variant'
      responses:
        "201":
          description: Car Model Variant successfully created.
          headers:
            Location:
              description: The URL of the newly created Node
              style: simple
              explode: false
              schema:
                type: string
                example: https://more-cars.net/...
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_1'
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "422":
          description: Validation error. The provided data is malformed or required
            information is missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422_Error'
      security:
      - Access_Token: []
  /car-model-variants/{car_model_variant_id}:
    get:
      tags:
      - Car Model Variants
      summary: Get specific Car Model Variant
      description: Returns a `Car Model Variant` specified by its ID.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      responses:
        "200":
          description: Car Model Variant successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car_Model_Variant'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
    delete:
      tags:
      - Car Model Variants
      summary: Delete Car Model Variant
      description: Deletes a `Car Model Variant`. <br><br> ðŸ”’ Operation requires elevated
        permissions.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      responses:
        "204":
          description: Car Model Variant successfully deleted.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-model-variants/{car_model_variant_id}/car-models:
    get:
      tags:
      - Car Model Variants
      summary: Get connected Car Model
      description: Returns the `Car Model` from which this `Car Model Variant` is
        derived.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      responses:
        "200":
          description: Car Model successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car_Model'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-model-variants/{car_model_variant_id}/car-models/{car_model_id}:
    post:
      tags:
      - Car Model Variants
      summary: Connect Car Model
      description: Connects an existing `Car Model` to the specified `Car Model Variant`.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "204":
          description: Car Model successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Model Variants
      summary: Disconnect Car Model
      description: Disconnects a `Car Model` from the specified `Car Model Variant`.
        <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "204":
          description: Car Model successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-model-variants/{car_model_variant_id}/car-magazine-issues:
    get:
      tags:
      - Car Model Variants
      summary: Get connected Car Magazine Issues
      description: Returns all `Car Magazine Issues` where the specified `Car Model
        Variant` has been presented.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      responses:
        "200":
          description: List of Car Magazine Issues successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car_Magazine_Issue'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-model-variants/{car_model_variant_id}/car-magazine-issues/{car_magazine_issue_id}:
    post:
      tags:
      - Car Model Variants
      summary: Connect Car Magazine Issue
      description: Connects an existing `Car Magazine Issue` to the specified `Car
        Model Variant`.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: car_magazine_issue_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 1210
      responses:
        "204":
          description: Car Model Variant successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Model Variants
      summary: Disconnect Car Magazine Issue
      description: Disconnects a `Car Magazine Issue` from the specified `Car Model
        Variant`. <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: car_magazine_issue_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 1210
      responses:
        "204":
          description: Car Model Variant successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-model-variants/{car_model_variant_id}/car-programme-episodes:
    get:
      tags:
      - Car Model Variants
      summary: Get connected Car Programme Episodes
      description: Returns all `Car Programme Episodes` where the specified `Car Model
        Variant` has been presented.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      responses:
        "200":
          description: List of Car Programme Episodes successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car_Programme_Episode'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-model-variants/{car_model_variant_id}/car-programme-episodes/{car_programme_episode_id}:
    post:
      tags:
      - Car Model Variants
      summary: Connect Car Programme Episode
      description: Connects an existing `Car Programme Episode` to the specified `Car
        Model Variant`.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: car_programme_episode_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 17798
      responses:
        "204":
          description: Car Programme Episode successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Model Variants
      summary: Disconnect Car Programme Episode
      description: Disconnects a `Car Programme Episode` from the specified `Car Model
        Variant`. <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: car_programme_episode_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 17798
      responses:
        "204":
          description: Car Programme Episode successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-model-variants/{car_model_variant_id}/racing-games:
    get:
      tags:
      - Car Model Variants
      summary: Get connected Racing Games
      description: Returns all `Racing Games` in which the specified `Car Model Variant`
        can be played.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      responses:
        "200":
          description: List of Racing Games successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Racing_Game'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-model-variants/{car_model_variant_id}/racing-games/{racing_game_id}:
    post:
      tags:
      - Car Model Variants
      summary: Connect Racing Game
      description: Connects an existing `Racing Game` to the specified `Car Model
        Variant`.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: racing_game_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 7407
      responses:
        "204":
          description: Racing Game successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Model Variants
      summary: Disconnect Racing Game
      description: Disconnects a `Racing Game` from the specified `Car Model Variant`.
        <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: racing_game_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 7407
      responses:
        "204":
          description: Racing Game successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-model-variants/{car_model_variant_id}/race-results:
    get:
      tags:
      - Car Model Variants
      summary: Get connected Race Results
      description: Returns all `Race Results` which the specified `Car Model Variant`
        has achieved.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 38589
      responses:
        "200":
          description: List of Race Results successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Race_Result'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-model-variants/{car_model_variant_id}/race-results/{race_result_id}:
    post:
      tags:
      - Car Model Variants
      summary: Connect Race Result
      description: Connects an existing `Race Result` to the specified `Car Model
        Variant`.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 38589
      - name: race_result_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 27376
      responses:
        "204":
          description: Race Result successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Model Variants
      summary: Disconnect Race Result
      description: Disconnects a `Race Result` from the specified `Car Model Variant`.
        <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 38589
      - name: race_result_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 27376
      responses:
        "204":
          description: Race Result successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-model-variants/{car_model_variant_id}/images:
    get:
      tags:
      - Car Model Variants
      summary: Get connected Images
      description: Returns all `Images` that are attached to the specified `Car Model
        Variant`.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      responses:
        "200":
          description: List of Images successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-model-variants/{car_model_variant_id}/images/{image_id}:
    post:
      tags:
      - Car Model Variants
      summary: Connect Image
      description: Attaches an existing `Image` to the specified `Car Model Variant`.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: image_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 2738
      responses:
        "204":
          description: Image successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Model Variants
      summary: Disconnect Image
      description: Disconnects an `Image` from the specified `Car Model Variant`.
        <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: image_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 2738
      responses:
        "204":
          description: Image successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-model-variants/{car_model_variant_id}/online-articles:
    get:
      tags:
      - Car Model Variants
      summary: Get connected Online Articles
      description: Returns all `Online Articles` that are attached to the specified
        `Car Model Variant`.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      responses:
        "200":
          description: List of Online Articles successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Online_Article'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-model-variants/{car_model_variant_id}/online-articles/{online_article_id}:
    post:
      tags:
      - Car Model Variants
      summary: Connect Online Article
      description: Attaches an existing `Online Article` to the specified `Car Model
        Variant`.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: online_article_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 40556
      responses:
        "204":
          description: Online Article successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Model Variants
      summary: Disconnect Online Article
      description: Disconnects an `Online Article` from the specified `Car Model Variant`.
        <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: online_article_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 40556
      responses:
        "204":
          description: Online Article successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /car-model-variants/{car_model_variant_id}/videos:
    get:
      tags:
      - Car Model Variants
      summary: Get connected Videos
      description: Returns all `Videos` that are attached to the specified `Car Model
        Variant`.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      responses:
        "200":
          description: List of Videos successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /car-model-variants/{car_model_variant_id}/videos/{video_id}:
    post:
      tags:
      - Car Model Variants
      summary: Connect Video
      description: Attaches an existing `Video` to the specified `Car Model Variant`.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: video_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 2762
      responses:
        "204":
          description: Video successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Car Model Variants
      summary: Disconnect Video
      description: Disconnects a `Video` from the specified `Car Model Variant`. <br><br>
        ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: car_model_variant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 405
      - name: video_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 2762
      responses:
        "204":
          description: Video successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /brands:
    get:
      tags:
      - Brands
      summary: Get all Brands
      description: Returns a collection of all `Brands` that are stored in the *More
        Cars* database.
      parameters:
      - name: page
        in: query
        description: pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 1
        example: 1
      responses:
        "200":
          description: List of Brands successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
    post:
      tags:
      - Brands
      summary: Create new Brand
      description: Adds a new `Brand` to the More Cars database.
      requestBody:
        $ref: '#/components/requestBodies/Brand'
      responses:
        "201":
          description: Brand successfully created.
          headers:
            Location:
              description: The URL of the newly created Node
              style: simple
              explode: false
              schema:
                type: string
                example: https://more-cars.net/...
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_2'
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "422":
          description: Validation error. The provided data is malformed or required
            information is missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422_Error'
      security:
      - Access_Token: []
  /brands/{brand_id}:
    get:
      tags:
      - Brands
      summary: Get specific Brand
      description: Returns a `Brand` specified by its ID.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 3
      responses:
        "200":
          description: Brand successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
    delete:
      tags:
      - Brands
      summary: Delete Brand
      description: Deletes a `Brand`. <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 3
      responses:
        "204":
          description: Brand successfully deleted.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /brands/{brand_id}/car-models:
    get:
      tags:
      - Brands
      summary: Get connected Car Models
      description: Returns all `Car Models` of the specified `Brand`.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      responses:
        "200":
          description: Brand successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /brands/{brand_id}/car-models/{car_model_id}:
    post:
      tags:
      - Brands
      summary: Connect Car Model
      description: Connects an existing `Car Model` to the specified `Brand`.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "204":
          description: Car Model successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Brands
      summary: Disconnect Car Model
      description: Disconnects a `Car Model` from the specified `Brand`. <br><br>
        ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: car_model_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 390
      responses:
        "204":
          description: Car Model successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /brands/{brand_id}/companies:
    get:
      tags:
      - Brands
      summary: Get connected Company
      description: Returns the `Company` which is the owner of the specified `Brand`.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      responses:
        "200":
          description: Company successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /brands/{brand_id}/companies/{company_id}:
    post:
      tags:
      - Brands
      summary: Connect Company
      description: Connects an existing `Company` to the specified `Brand`.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      responses:
        "204":
          description: Company successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Brands
      summary: Disconnect Company
      description: Disconnects a `Company` from the specified `Brand`. <br><br> ðŸ”’
        Operation requires elevated permissions.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      responses:
        "204":
          description: Company successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /brands/{brand_id}/countries:
    get:
      tags:
      - Brands
      summary: Get connected Country
      description: Returns the `Country` from which the specified `Brand` originates.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      responses:
        "200":
          description: Country successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /brands/{brand_id}/countries/{country_id}:
    post:
      tags:
      - Brands
      summary: Connect Country
      description: Connects an existing `Country` to the specified `Brand`.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: country_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 165
      responses:
        "204":
          description: Country successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Brands
      summary: Disconnect Country
      description: Disconnects a `Country` from the specified `Brand`. <br><br> ðŸ”’
        Operation requires elevated permissions.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: country_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 165
      responses:
        "204":
          description: Country successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /brands/{brand_id}/images:
    get:
      tags:
      - Brands
      summary: Get connected Images
      description: Returns all `Images` that are attached to the specified `Brand`.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      responses:
        "200":
          description: List of Images successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /brands/{brand_id}/images/{image_id}:
    post:
      tags:
      - Brands
      summary: Connect Image
      description: Attaches an existing `Image` to the specified `Brand`.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: image_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 2123
      responses:
        "204":
          description: Image successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Brands
      summary: Disconnect Image
      description: Disconnects an `Image` from the specified `Brand`. <br><br> ðŸ”’
        Operation requires elevated permissions.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: image_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 2123
      responses:
        "204":
          description: Image successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /brands/{brand_id}/online-articles:
    get:
      tags:
      - Brands
      summary: Get connected Online Articles
      description: Returns all `Online Articles` that are attached to the specified
        `Brand`.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      responses:
        "200":
          description: List of Online Articles successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Online_Article'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /brands/{brand_id}/online-articles/{online_article_id}:
    post:
      tags:
      - Brands
      summary: Connect Online Article
      description: Attaches an existing `Online Article` to the specified `Brand`.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: online_article_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 40557
      responses:
        "204":
          description: Online Article successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Brands
      summary: Disconnect Online Article
      description: Disconnects an `Online Article` from the specified `Brand`. <br><br>
        ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: online_article_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 40557
      responses:
        "204":
          description: Online Article successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /brands/{brand_id}/videos:
    get:
      tags:
      - Brands
      summary: Get connected Videos
      description: Returns all `Videos` that are attached to the specified `Brand`.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      responses:
        "200":
          description: List of Videos successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /brands/{brand_id}/videos/{video_id}:
    post:
      tags:
      - Brands
      summary: Connect Video
      description: Attachs an existing `Video` to the specified `Brand`.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: video_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 19753
      responses:
        "204":
          description: Video successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Brands
      summary: Disconnect Video
      description: Disconnects a `Video` from the specified `Brand`. <br><br> ðŸ”’ Operation
        requires elevated permissions.
      parameters:
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: video_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 19753
      responses:
        "204":
          description: Video successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /companies:
    get:
      tags:
      - Companies
      summary: Get all Companies
      description: Returns a collection of all `Companies` that are stored in the
        *More Cars* database.
      parameters:
      - name: page
        in: query
        description: pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 1
        example: 1
      responses:
        "200":
          description: List of Companies successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
    post:
      tags:
      - Companies
      summary: Create new Company
      description: Adds a new `Company` to the More Cars database.
      requestBody:
        $ref: '#/components/requestBodies/Company'
      responses:
        "201":
          description: Company successfully created.
          headers:
            Location:
              description: The URL of the newly created Node
              style: simple
              explode: false
              schema:
                type: string
                example: https://more-cars.net/...
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_3'
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "422":
          description: Validation error. The provided data is malformed or required
            information is missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422_Error'
      security:
      - Access_Token: []
  /companies/{company_id}:
    get:
      tags:
      - Companies
      summary: Get specific Company
      description: Returns a `Company` specified by its ID.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 53
      responses:
        "200":
          description: Company successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
    delete:
      tags:
      - Companies
      summary: Delete Company
      description: Deletes a `Company`. <br><br> ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 53
      responses:
        "204":
          description: Company successfully deleted.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /companies/{company_id}/brands:
    get:
      tags:
      - Companies
      summary: Get connected Brands
      description: Returns all `Brands` that belong to the specified `Company`.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      responses:
        "200":
          description: List of Brands successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /companies/{company_id}/brands/{brand_id}:
    post:
      tags:
      - Companies
      summary: Connect Brand
      description: Connects an existing `Brand` to the specified `Company`.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      responses:
        "204":
          description: Brand successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Companies
      summary: Disconnect Brand
      description: Disconnects a `Brand` from the specified `Company`. <br><br> ðŸ”’
        Operation requires elevated permissions.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      - name: brand_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      responses:
        "204":
          description: Brand successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /companies/{company_id}/countries:
    get:
      tags:
      - Companies
      summary: Get connected Country
      description: Returns the `Country` from which the specified `Company` originates.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      responses:
        "200":
          description: Country successfully loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /companies/{company_id}/countries/{country_id}:
    post:
      tags:
      - Companies
      summary: Connect Country
      description: Connects an existing `Country` to the specified `Company`.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: country_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 112
      responses:
        "204":
          description: Country successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Companies
      summary: Disconnect Country
      description: Disconnects a `Country` from the specified `Company`. <br><br>
        ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 319
      - name: country_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 112
      responses:
        "204":
          description: Country successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /companies/{company_id}/images:
    get:
      tags:
      - Companies
      summary: Get connected Images
      description: Returns all `Images` that are attached to the specified `Company`.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      responses:
        "200":
          description: List of Images successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /companies/{company_id}/images/{image_id}:
    post:
      tags:
      - Companies
      summary: Connect Image
      description: Attaches an existing `Image` to the specified `Company`.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      - name: image_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 2409
      responses:
        "204":
          description: Image successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Companies
      summary: Disconnect Image
      description: Disconnects an `Image` from the specified `Company`. <br><br> ðŸ”’
        Operation requires elevated permissions.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      - name: image_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 2409
      responses:
        "204":
          description: Image successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /companies/{company_id}/online-articles:
    get:
      tags:
      - Companies
      summary: Get connected Online Articles
      description: Returns all `Online Articles` that are attached to the specified
        `Company`.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      responses:
        "200":
          description: List of Online Articles successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Online_Article'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /companies/{company_id}/online-articles/{online_article_id}:
    post:
      tags:
      - Companies
      summary: Connect Online Article
      description: Attaches an existing `Online Article` to the specified `Company`.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      - name: online_article_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 28209
      responses:
        "204":
          description: Online Article successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Companies
      summary: Disconnect Online Article
      description: Disconnects an `Online Article` from the specified `Company`. <br><br>
        ðŸ”’ Operation requires elevated permissions.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      - name: online_article_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 28209
      responses:
        "204":
          description: Online Article successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
  /companies/{company_id}/videos:
    get:
      tags:
      - Companies
      summary: Get connected Videos
      description: Returns all `Videos` that are attached to the specified `Company`.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      responses:
        "200":
          description: List of Videos successfully loaded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
  /companies/{company_id}/videos/{video_id}:
    post:
      tags:
      - Companies
      summary: Connect Video
      description: Attachs an existing `Video` to the specified `Company`.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      - name: video_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 28193
      responses:
        "204":
          description: Video successfully connected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
    delete:
      tags:
      - Companies
      summary: Disconnect Video
      description: Disconnects a `Video` from the specified `Company`. <br><br> ðŸ”’
        Operation requires elevated permissions.
      parameters:
      - name: company_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 52
      - name: video_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 28193
      responses:
        "204":
          description: Video successfully disconnected.
        "401":
          description: Authentication error. Credentials are missing or invalid or
            the permissions are insufficient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_Error'
        "404":
          description: The requested Node could not be found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_Error'
      security:
      - Access_Token: []
components:
  schemas:
    Car_Model:
      type: object
      properties:
        id:
          type: integer
          description: The internal `More Cars` ID of this node. It's generated by
            the system and cannot be altered.
          example: 1102
        name:
          type: string
          description: The official name of this model, respecting upper/lower case,
            whitespaces and special characters (e.g. "cee'd" or "e-tron").  The brand
            name is always omitted!
          example: "911"
        generation:
          type: integer
          description: When this model was build over multiple generations, which
            one is this?
          example: 5
        code:
          type: string
          description: The internal code of this model as given by the manufacturer.
          example: "996"
        built_from:
          type: integer
          description: What was the first year of production for this model?
          example: 1997
        built_to:
          type: integer
          description: What was the last year of production for this model?
          example: 2005
        total_production:
          type: integer
          description: When adding up all variations, how many units of this model
            (of this generation) were produced in total?
          example: 175164
      description: A `Car Model` represents one *generation* of a vehicle (e.g. *VW
        Golf VII* or *Ford Fiesta Mk2*). A generation usually last between 5 and 10
        years and is built in multiple `Car Model Variants`. The variation can be
        in body style (coupe, station wagon, convertible), engine specification (gasoline,
        diesel, electric), transmission (manual, automatic), purpose (race car, police
        car, military vehicle) or other characteristics.
    "401_Error":
      type: object
      properties:
        message:
          type: string
          description: Description of the error
          example: Access token is missing
    "422_Error":
      type: object
      properties:
        message:
          type: string
          description: Description of the error
          example: Invalid ID
    "404_Error":
      type: object
      properties:
        message:
          type: string
          description: Description of the error
          example: Node not found
    Brand:
      type: object
      properties:
        id:
          type: integer
          description: The internal `More Cars` ID of this node. It's generated by
            the system and cannot be altered.
        name:
          type: string
          description: "The name of the brand (e.g. `VW`).\nNot to be confused with\
            \ the name of the company (e.g. `VW AG`). \nThe legal form is always omitted\
            \ (no `AG`, `N.V.`, `Ltd.` or `GmbH`).\nThe official spelling is used\
            \ (e.g. `MINI` instead of `Mini`)."
          example: BMW
        full_name:
          type: string
          description: |-
            The long form of the brand's name (e.g. `VW` for `Volkswagen`).
            This field is only set if the name is actually abbreviated (e.g. `Porsche` is not.)
          example: Bayerische Motoren Werke
        founded:
          maximum: 2100.0
          minimum: 1800.0
          type: integer
          description: "The year in which the brand has been created resp. introduced\
            \ to the market. \nThis is not necessarily the year the company was founded.\
            \ \nE.g.: The history of `Peugeot` goes back to `1810`, but they are building\
            \ cars only since `1891`."
          example: 1916
        defunct:
          maximum: 2100.0
          minimum: 1800.0
          type: integer
          description: The final year the brand name was officially used (for a car).
          example: 2099
        wmi:
          type: string
          description: "The WMI is a two- or three-character code that identifies\
            \ the car manufacturer globally.\n`WMI` stands for `World Manufacturer\
            \ Identifier` and is specified in `ISO 3780`. \nSome manufacturers have\
            \ multiple WMIs, some have none at all.\nMultiple WMIs are separated by\
            \ comma."
        hsn:
          maxLength: 4
          minLength: 4
          pattern: '[0-9][0-9][0-9][0-9]'
          type: string
          description: "`HSN` stands for `HerstellerschlÃ¼sselnummer` and is the German\
            \ counterpart of the `WMI`.\nIt's a four-digit number that identifies\
            \ the car manufacturer globally. \nSome manufacturers have multiple HSNs,\
            \ some have none at all.\nMultiple HSNs are separated by comma."
    Car_Model_Variant:
      type: object
      properties:
        id:
          type: integer
          description: The internal `More Cars` ID of this node. It's generated by
            the system and cannot be altered.
          example: 405
        name:
          type: string
          description: The official name of this variant, respecting upper/lower case,
            whitespaces and special characters.
          example: Lamborghini MurciÃ©lago LP670-4 SV
        code:
          type: string
          description: "The internal code name of this vehicle as given by the manufacturer.\
            \ \nUsed to distinguish between multiple generations of one car model\
            \ variant.\nSometimes the manufacturer gives each variant a different\
            \ code.\nSometimes they have no code at all."
          example: E1234
        built_from:
          type: integer
          description: The year this car went into production.
          example: 2009
        built_to:
          type: integer
          description: The final year of production.
          example: 2010
        body_style:
          type: string
          description: Classification based on the the number of doors, seats, size
            and the overall shape of the car.
          enum:
          - coupe
          - convertible
          - hatchback
          - motorbike
          - pickup truck
          - offroad
          - quad
          - roadster
          - sedan
          - station wagon
          - suv
          - targa
          - van
          - truck
          - other
        cd:
          type: number
          description: Drag coefficient. Also referred to as `cd value` or `cw value`.
          example: 0.29
        doors:
          type: integer
          description: The number of doors.
          example: 2
        weight:
          type: integer
          description: The official weight of this car, as provided by the manufacturer.
          example: 1565
        weight_unit:
          type: string
          enum:
          - kg
          - lbs
        max_power:
          type: integer
          description: The peak power output of this engine, as claimed by the manufacturer.
          example: 670
        max_power_unit:
          type: string
          enum:
          - PS
          - bhp
          - kW
        max_torque:
          type: integer
          description: The peak torque of this engine, as claimed by the manufacturer.
          example: 670
        max_torque_unit:
          type: string
          enum:
          - Nm
          - lb ft
        cylinders:
          type: integer
          description: 'The number of cylinders (petrol or diesel engine) or rotors
            (wankel engine). (Only applicable to combustion engines.) example: 12'
        engine_configuration:
          type: string
          description: The alignment of the cylinders resp. rotors. (Only applicable
            to combustion engines.)
          enum:
          - Inline
          - Flat
          - V
          - W
          - H
          - U
          - Rotary
          - Radial
        displacement:
          type: integer
          description: The size (volume) of all combustion chamber(s) combined. (Only
            applicable to combustion engines.)
          example: 6496
        displacement_unit:
          type: string
          enum:
          - ccm
          - cu in
        charger:
          type: string
          description: The method how the air is forced into the engine. (Only applicable
            to combustion engines.)
          enum:
          - none
          - turbo
          - super
        engine_type:
          type: string
          description: The thermodynamic and/or physical principles the engine is
            build upon.  (The type of fuel is secondary.)
          enum:
          - otto
          - diesel
          - wankel
          - turbine
          - hybrid
          - electric
          - other
        energy_source:
          type: string
          description: The type of 'fuel' this engine runs on.  For hybrid cars the
            primary engine is selected.
          enum:
          - petrol
          - diesel
          - natural gas
          - liquid gas
          - hydrogen
          - ethanol
          - electricity
          - other
        energy_source_2:
          type: string
          description: On what 'fuel' runs the second engine? (Only applicable to
            hybrid engines.)
          enum:
          - petrol
          - diesel
          - natural gas
          - liquid gas
          - hydrogen
          - ethanol
          - electricity
          - other
        fuel_consumption:
          type: number
          description: The official fuel (or energy) consumption of this car, as provided
            by the manufacturer.
          example: 20.6
        fuel_consumption_unit:
          type: string
          enum:
          - l / 100 km
          - mpg
          - kWh / 100 km
        energy_capacity:
          type: number
          description: The capacity of the fuel tank (resp. the battery in case of
            an electric vehicle.)
          example: 100.0
        energy_capacity_unit:
          type: string
          enum:
          - l
          - kg
          - kWh
        energy_capacity_2:
          type: number
          description: The capacity of the second fuel tank. (Only applicable to hybrid
            engines.)
        energy_capacity_2_unit:
          type: string
          enum:
          - l
          - kg
          - kWh
        transmission:
          type: string
          description: The gearbox type.
          enum:
          - manual
          - sequential
          - dual clutch
          - direct
          - cvt
          - auto
        gears:
          type: integer
          description: The number of gears.
          example: 6
        drivetrain:
          type: string
          description: |-
            The wheel(s) to which the engine power is transferred.
            `All Wheel Drive` includes `4WD`, `AWD`, `IWD` and all the other variations that are on the market.
          enum:
          - FWD
          - RWD
          - AWD
        sprint_0_100:
          type: number
          description: The acceleration time from 0 to 100 km/h, resp. 62 mph (in
            seconds), as claimed by the manufacturer
          example: 3.2
        top_speed:
          type: number
          description: The maximum speed (vmax) of the car, as claimed by the manufacturer.
          example: 337
        top_speed_unit:
          type: string
          enum:
          - km/h
          - mph
        total_production:
          type: integer
          description: The number of units that have been built of this car.
          example: 350
        price:
          type: number
          description: The base price of this model when it was introduced (incl.
            VAT).
          example: 357000.0
        price_unit:
          type: string
          enum:
          - â‚¬
          - $
          - Â£
          - DM
          - Â¥
    Car_Magazine_Issue:
      type: object
      properties:
        id:
          type: integer
          description: The internal `More Cars` ID of this node. It's generated by
            the system and cannot be altered.
        name:
          type: string
          description: The title of this issue or - if not available - the main topic.
        number:
          type: integer
          description: The issue's number as is printed on the cover. E.g. '9' for
            the September issue or '483' if the magazine is using consecutive numbering.
        year:
          maximum: 2100.0
          minimum: 1800.0
          type: integer
          description: The year that is printed on the cover. This might vary from
            the real release date, e.g. issue '1/2010' could already have been released
            in December of 2009.
        release_date:
          type: string
          description: The official release date of the print version of this issue.
          format: date
        single_copy_price:
          type: number
          description: The price for this issue on the domestic market, as printed
            on the cover, incl. VAT.
          format: double
        single_copy_price_unit:
          type: string
        pages:
          type: integer
          description: The total number of pages this issue has. This includes cover
            and flipside, but not booklets or flyers.
    Car_Programme_Episode:
      type: object
      properties:
        id:
          type: integer
          description: The internal `More Cars` ID of this node. It's generated by
            the system and cannot be altered.
        name:
          type: string
          description: "The official name or title of this episode. \nAlternatively\
            \ the main topic when there is no official title."
        season:
          type: integer
          description: The season number this episode belongs to.
        season_episode:
          type: integer
          description: The episode number within this season. (This is not the overall
            count!)
        original_air_date:
          type: string
          description: The date this episode was broadcasted for the very first time.
          format: date
        duration:
          type: string
          description: The length of this episode in minutes and seconds.
    Image:
      type: object
      properties:
        id:
          type: integer
          description: The internal `More Cars` ID of this node. It's generated by
            the system and cannot be altered.
          example: 9954
        name:
          type: string
          description: The name resp. title of this image.
          example: BMW M4
        image_platform:
          type: string
          description: The provider that is hosting the image.
          example: flickr
          enum:
          - flickr
          - wikimedia
        image_platform_id:
          type: string
          description: "The ID resp. the name of the image, as given by the image\
            \ platform. \nFlickr uses numbers, like `43644091312`.\nWikimedia uses\
            \ a URL friendly version of the name of the image, like `File:BMW_Z4_Concept.jpg`."
          example: "42258175882"
        source:
          type: string
          description: The internet address of the concrete image file.
        origin:
          type: string
          description: A description page where additional information about the photo
            can be found. Like licensing details, author, camera model etc.
        author:
          type: string
          description: The name of the photographer resp. the rights holder of the
            image.
        license:
          type: string
          description: The license this image was published under.
        description:
          type: string
          description: "A short description of what can be seen on the photo, \nwhere\
            \ it was taken,\nwhen it was taken."
        tags:
          type: string
          description: A comma-separated list of keywords describing the picture.
    Online_Article:
      type: object
      properties:
        id:
          type: integer
          description: The internal `More Cars` ID of this node. It's generated by
            the system and cannot be altered.
        name:
          type: string
          description: The headline of this article.
        description:
          type: string
          description: Characterization of the article (Car review? News flash? Interview?
            Race report?) or an excerpt or a quote.
        author:
          type: string
          description: The creator of the article.
        publish_date:
          type: string
          description: The date when the article was published. Format is `YYYY-MM-DD`.
          format: date
        url:
          type: string
          description: Where can the article be found on the internet?
      description: "An `Online Article` is a blog post or the online version of an\
        \ article written in a car magazine. \nAn article is suited for the database\
        \ when it discusses a car related topic that is covered by More Cars (e.g.\
        \ Car Models, Brands, Racing Games, Motorsport).\nThere is no restriction\
        \ on the format. It can be a review, a group test, a discussion, a discourse,\
        \ an interview etc.\nThere is no restriction on the language, but English\
        \ articles are preferred."
    Video:
      type: object
      properties:
        id:
          type: integer
          description: The internal `More Cars` ID of this node. It's generated by
            the system and cannot be altered.
        name:
          type: string
          description: The title of the video.
        video_platform:
          type: string
          description: The platform or service that is hosting the video.
          enum:
          - youtube
        video_platform_id:
          type: string
          description: The ID of the video, as given by the video hosting service.
        source:
          type: string
          description: The URL of the video or the web page where the licensing and
            additional information can be found.
        creator:
          type: string
          description: The name of the creator (or uploader) of the video.
        license:
          type: string
          description: The license under which the video was published.
        duration:
          type: string
          description: The length of this video, following the ISO 8601 standard.
          example: PT6M48S
        description:
          type: string
        tags:
          type: string
          description: A comma-separated list of keywords, describing the key aspects
            of this video.
    Racing_Game:
      type: object
      properties:
        id:
          maximum: 1000000.0
          minimum: 1
          type: integer
          description: The internal `More Cars` ID of this node. It's generated by
            the system and cannot be altered.
          example: 3954
        name:
          type: string
          description: The official name of this racing game.
          example: Need for Speed
        release_year:
          maximum: 2100.0
          minimum: 1900.0
          type: integer
          description: The year this game was released.
          example: 1986
        developer:
          type: string
          description: The name of the developer of this game.
          example: Kunos Simulazioni
        publisher:
          type: string
          description: The name of the publisher of this game.
          example: Sony Interactive Entertainment
    Race_Result:
      type: object
      properties:
        id:
          type: integer
          description: The internal More Cars ID of this node. Itâ€™s generated by the
            system and cannot be altered.
        name:
          type: string
        position:
          type: integer
          description: The final position of this car in this session.
        driver_number:
          type: string
          description: The start number of the car, reps. the driver's number.
          example: "77"
        driver_name:
          type: string
          description: The full name of the driver.
        team_name:
          type: string
          description: The full name of the team.
        race_time:
          type: string
          description: Total time
        fastest_lap_time:
          type: string
          description: Driver's fastest lap in this session.
        points:
          type: number
          description: "The number of championship points earned in this session.\
            \ \n                Depending on the regulations this can be based on\
            \ the position, the fastest lap, malus points for fouls etc."
          example: 25
    Company:
      type: object
      properties:
        id:
          type: integer
          description: The internal `More Cars` ID of this node. It's generated by
            the system and cannot be altered.
        name:
          type: string
          description: The official name of this car company, incl. the legal suffix
            (AG, SE, GmbH, N.V., Ltd).
        founded:
          type: integer
        defunct:
          type: integer
        headquarter_city:
          type: string
          description: The city in which the company has its (de facto) headquarter.  The
            English name should be used (if available), e.g. `Munich` instead of `MÃ¼nchen`.
        legal_headquarter_city:
          type: string
          description: |-
            The city where the company has its official headquarter. (This should only be set when it differs from the de facto headquarter.)
            E.g.: `Ferrari` is an Italian company, based in `Maranello` but on paper they are a Dutch company, located in `Amsterdam`.
            The English name should be used (if available), e.g. `Munich` instead of `MÃ¼nchen`.
        employees:
          type: integer
          description: The number of employees that are working for this company.
    Country:
      type: object
      properties:
        id:
          type: integer
          description: The internal `More Cars` ID of this node. It's generated by
            the system and cannot be altered.
        name:
          type: string
          description: The official (english) name of the country.
        adjectival:
          type: string
          description: |-
            The adjectival form of the country's name.
            E.g.: 'The `Italian` carmaker...' or 'The `British` version of this model...'
        demonym:
          type: string
          description: "How are the inhabitants of this country called? \nE.g.: 'The\
            \ `Italians` have the fastest cars...')"
        short_name:
          type: string
          description: Short form of the country name (if applicable).
          example: UK
        code:
          type: string
          description: The official (2-letter) country code, according to ISO 3166-1.
    inline_response_201:
      required:
      - data
      - links
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Car_Model'
        links:
          $ref: '#/components/schemas/inline_response_201_links'
    inline_response_201_1:
      required:
      - data
      - links
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Car_Model_Variant'
        links:
          $ref: '#/components/schemas/inline_response_201_links'
    inline_response_201_2:
      required:
      - data
      - links
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Brand'
        links:
          $ref: '#/components/schemas/inline_response_201_links'
    inline_response_201_3:
      required:
      - data
      - links
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Company'
        links:
          $ref: '#/components/schemas/inline_response_201_links'
    inline_response_201_links:
      required:
      - self
      type: object
      properties:
        self:
          type: string
          description: The URL of the newly created Node
          example: https://more-cars.net/...
  requestBodies:
    Car_Model:
      description: Car Model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Model'
      required: true
    Car_Model_Variant:
      description: Car Model Variant
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Car_Model_Variant'
      required: true
    Brand:
      description: Brand
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Brand'
      required: true
    Company:
      description: Company
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Company'
      required: true
  securitySchemes:
    Access_Token:
      type: apiKey
      name: access-token
      in: header
